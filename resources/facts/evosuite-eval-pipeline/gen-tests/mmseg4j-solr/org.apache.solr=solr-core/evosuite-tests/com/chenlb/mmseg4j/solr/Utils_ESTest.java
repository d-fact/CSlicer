/*
 * This file was automatically generated by EvoSuite
 * Mon Aug 19 06:38:22 GMT 2019
 */

package com.chenlb.mmseg4j.solr;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.chenlb.mmseg4j.solr.Utils;
import org.apache.hadoop.hdfs.web.HsftpFileSystem;
import org.apache.lucene.analysis.util.ClasspathResourceLoader;
import org.apache.solr.core.SolrResourceLoader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Utils_ESTest extends Utils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClasspathResourceLoader classpathResourceLoader0 = new ClasspathResourceLoader(classLoader0);
      // Undeclared exception!
      try { 
        Utils.getDict("", classpathResourceLoader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // normalize file=[] fail
         //
         verifyException("com.chenlb.mmseg4j.Dictionary", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SolrResourceLoader solrResourceLoader0 = new SolrResourceLoader();
      // Undeclared exception!
      Utils.getDict("V9U?) .qj$ uu!\"/s", solrResourceLoader0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClasspathResourceLoader classpathResourceLoader0 = new ClasspathResourceLoader(classLoader0);
      // Undeclared exception!
      Utils.getDict("/eXc# 9", classpathResourceLoader0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClasspathResourceLoader classpathResourceLoader0 = new ClasspathResourceLoader(classLoader0);
      // Undeclared exception!
      Utils.getDict("O2F", classpathResourceLoader0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<HsftpFileSystem> class0 = HsftpFileSystem.class;
      ClasspathResourceLoader classpathResourceLoader0 = new ClasspathResourceLoader(class0);
      // Undeclared exception!
      Utils.getDict((String) null, classpathResourceLoader0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Utils utils0 = new Utils();
  }
}
