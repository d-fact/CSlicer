/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 17:01:59 GMT 2019
 */

package io.ebean.config.dbplatform;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.ebean.config.dbplatform.DatabasePlatform;
import io.ebean.config.dbplatform.RowNumberSqlLimiter;
import io.ebeaninternal.api.SpiQuery;
import io.ebeaninternal.server.querydefn.OrmQueryLimitRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RowNumberSqlLimiter_ESTest extends RowNumberSqlLimiter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RowNumberSqlLimiter rowNumberSqlLimiter0 = new RowNumberSqlLimiter();
      DatabasePlatform databasePlatform0 = new DatabasePlatform();
      OrmQueryLimitRequest ormQueryLimitRequest0 = new OrmQueryLimitRequest("arwdRxt", "arwdRxt", (SpiQuery<?>) null, databasePlatform0);
      // Undeclared exception!
      try { 
        rowNumberSqlLimiter0.limit(ormQueryLimitRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryLimitRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RowNumberSqlLimiter rowNumberSqlLimiter0 = new RowNumberSqlLimiter("&];<C<gGL5TI]");
  }
}
