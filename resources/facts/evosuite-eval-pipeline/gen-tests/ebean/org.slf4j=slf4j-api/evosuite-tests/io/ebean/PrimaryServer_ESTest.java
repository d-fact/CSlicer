/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 17:30:28 GMT 2019
 */

package io.ebean;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.ebean.PrimaryServer;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PrimaryServer_ESTest extends PrimaryServer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ebean.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        PrimaryServer.getProperties();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to load properties?
         //
         verifyException("io.ebean.config.properties.Loader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ebean.properties");
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        PrimaryServer.getProperties();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // java.io.FileNotFoundException
         //
         verifyException("io.ebean.config.properties.LoadContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ebean.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "load.properties.override");
      // Undeclared exception!
      try { 
        PrimaryServer.getProperties();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expecting only yml or properties file but got []
         //
         verifyException("io.ebean.config.properties.Loader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ebean.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "ebean.default.datasource");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      // Undeclared exception!
      try { 
        PrimaryServer.getDefaultServerName();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to load properties?
         //
         verifyException("io.ebean.config.properties.Loader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ebean.properties");
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        PrimaryServer.getDefaultServerName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // java.io.FileNotFoundException
         //
         verifyException("io.ebean.config.properties.LoadContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ebean.properties");
      String string0 = "datas\\urce.deault";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      // Undeclared exception!
      try { 
        PrimaryServer.getDefaultServerName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed \\uxxxx encoding.
         //
         verifyException("java.util.Properties", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ebean.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "datasource.default");
      Properties properties0 = PrimaryServer.getProperties();
      assertFalse(properties0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ebean.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "ebean.default.datasource");
      String string0 = PrimaryServer.getDefaultServerName();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PrimaryServer.getProperties();
      String string0 = PrimaryServer.getDefaultServerName();
      assertEquals("db", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = PrimaryServer.isSkip();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PrimaryServer primaryServer0 = new PrimaryServer();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PrimaryServer.setSkip(true);
      boolean boolean0 = PrimaryServer.isSkip();
      assertTrue(boolean0);
  }
}
