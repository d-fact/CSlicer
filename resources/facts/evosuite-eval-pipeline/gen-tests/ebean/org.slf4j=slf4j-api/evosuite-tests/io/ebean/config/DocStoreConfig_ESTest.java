/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 16:31:43 GMT 2019
 */

package io.ebean.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.ebean.annotation.DocStoreMode;
import io.ebean.config.ClassLoadConfig;
import io.ebean.config.DocStoreConfig;
import io.ebean.config.PropertiesWrapper;
import java.io.Reader;
import java.io.StringReader;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DocStoreConfig_ESTest extends DocStoreConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.mappingPath = "docstore.bulkBatchSize";
      Properties properties0 = new Properties();
      ClassLoadConfig classLoadConfig0 = new ClassLoadConfig();
      PropertiesWrapper propertiesWrapper0 = new PropertiesWrapper(properties0, classLoadConfig0);
      docStoreConfig0.loadSettings(propertiesWrapper0);
      assertEquals("docstore.bulkBatchSize", docStoreConfig0.getMappingPath());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      Properties properties0 = new Properties();
      ClassLoadConfig classLoadConfig0 = new ClassLoadConfig();
      PropertiesWrapper propertiesWrapper0 = new PropertiesWrapper("", "", properties0, classLoadConfig0);
      docStoreConfig0.setAllowAllCertificates(true);
      docStoreConfig0.loadSettings(propertiesWrapper0);
      assertTrue(docStoreConfig0.isAllowAllCertificates());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setUrl("9u_w<<Y8Lvo\"[!JKT{");
      Properties properties0 = new Properties();
      ClassLoadConfig classLoadConfig0 = new ClassLoadConfig();
      PropertiesWrapper propertiesWrapper0 = new PropertiesWrapper((String) null, (String) null, properties0, classLoadConfig0);
      docStoreConfig0.loadSettings(propertiesWrapper0);
      assertEquals("9u_w<<Y8Lvo\"[!JKT{", docStoreConfig0.getPassword());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals("9u_w<<Y8Lvo\"[!JKT{", docStoreConfig0.getUsername());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.active = true;
      Properties properties0 = new Properties();
      PropertiesWrapper propertiesWrapper0 = new PropertiesWrapper("", "", properties0, (ClassLoadConfig) null);
      docStoreConfig0.loadSettings(propertiesWrapper0);
      assertTrue(docStoreConfig0.isActive());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setUsername("");
      docStoreConfig0.isCreate();
      assertEquals("", docStoreConfig0.getUsername());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.mappingSuffix = "%;.joO";
      docStoreConfig0.isCreate();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setMappingPath("The prefix must not be null");
      docStoreConfig0.isCreate();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals("The prefix must not be null", docStoreConfig0.getMappingPath());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setUrl("");
      docStoreConfig0.isCreate();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("", docStoreConfig0.getUrl());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setPassword("Bh;A~9*|Ly@X");
      docStoreConfig0.isCreate();
      assertEquals("Bh;A~9*|Ly@X", docStoreConfig0.getPassword());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setUsername("&lx@]>o,oJ)@(Z<");
      docStoreConfig0.isDropCreate();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals("&lx@]>o,oJ)@(Z<", docStoreConfig0.getUsername());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setMappingSuffix("&lx@]>o,oJ)@(Z<");
      docStoreConfig0.isDropCreate();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals("&lx@]>o,oJ)@(Z<", docStoreConfig0.getMappingSuffix());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.mappingPath = "78AD+UZ>DX";
      docStoreConfig0.isDropCreate();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setUrl("9u_w<<Y8Lvo\"[!JKT{");
      docStoreConfig0.isDropCreate();
      assertEquals("9u_w<<Y8Lvo\"[!JKT{", docStoreConfig0.getUrl());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.username = "docstore.username";
      docStoreConfig0.isGenerateMapping();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.mappingSuffix = "^KFsr6C@9WwwNV@73";
      docStoreConfig0.isGenerateMapping();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.mappingPath = "docstore.bulkBatchSize";
      docStoreConfig0.isGenerateMapping();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setPassword("k26-I`@<{4clHz");
      docStoreConfig0.isGenerateMapping();
      assertEquals("k26-I`@<{4clHz", docStoreConfig0.getPassword());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.username = "bJ2Y`a^]O<E4/>&c";
      String string0 = docStoreConfig0.getUrl();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.mappingSuffix = "fglP%bcO[bN#}";
      String string0 = docStoreConfig0.getUrl();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertNull(string0);
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.mappingPath = "docstore.bulkBatchSize";
      String string0 = docStoreConfig0.getUrl();
      assertNull(string0);
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setUsername("}o");
      docStoreConfig0.isActive();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals("}o", docStoreConfig0.getUsername());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setMappingSuffix("SENSITIVE");
      docStoreConfig0.isActive();
      assertEquals("SENSITIVE", docStoreConfig0.getMappingSuffix());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.mappingPath = "SYSTEM";
      docStoreConfig0.isActive();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.url = "}o";
      docStoreConfig0.isActive();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setPassword("Bh;A~9*|Ly@X");
      docStoreConfig0.isActive();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals("Bh;A~9*|Ly@X", docStoreConfig0.getPassword());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.generateMapping = true;
      boolean boolean0 = docStoreConfig0.isGenerateMapping();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.dropCreate = true;
      boolean boolean0 = docStoreConfig0.isDropCreate();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.create = true;
      boolean boolean0 = docStoreConfig0.isCreate();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.allowAllCertificates = true;
      boolean boolean0 = docStoreConfig0.isAllowAllCertificates();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.active = true;
      boolean boolean0 = docStoreConfig0.isActive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.username = ")W)Lrd`;YdoG";
      String string0 = docStoreConfig0.getUsername();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertNotNull(string0);
      assertEquals(")W)Lrd`;YdoG", string0);
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.username = "";
      String string0 = docStoreConfig0.getUsername();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setUrl("bjSj~=IW-");
      String string0 = docStoreConfig0.getUrl();
      assertNotNull(string0);
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals("bjSj~=IW-", string0);
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.url = "";
      String string0 = docStoreConfig0.getUrl();
      assertNotNull(string0);
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("", string0);
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      
      docStoreConfig0.pathToResources = null;
      docStoreConfig0.getPathToResources();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      
      docStoreConfig0.pathToResources = "";
      String string0 = docStoreConfig0.getPathToResources();
      assertNotNull(string0);
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setPassword("io.ebean.config.PropertiesWrapper");
      String string0 = docStoreConfig0.getPassword();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("io.ebean.config.PropertiesWrapper", string0);
      assertNotNull(string0);
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.password = "";
      String string0 = docStoreConfig0.getPassword();
      assertNotNull(string0);
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("", string0);
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.mappingSuffix = "%;.joO";
      String string0 = docStoreConfig0.getMappingSuffix();
      assertEquals("%;.joO", string0);
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertNotNull(string0);
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setMappingSuffix("");
      String string0 = docStoreConfig0.getMappingSuffix();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setMappingPath("1@");
      String string0 = docStoreConfig0.getMappingPath();
      assertNotNull(string0);
      assertEquals("1@", string0);
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setMappingPath("");
      String string0 = docStoreConfig0.getMappingPath();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      
      docStoreConfig0.setBulkBatchSize(0);
      int int0 = docStoreConfig0.getBulkBatchSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.bulkBatchSize = (-1156);
      int int0 = docStoreConfig0.getBulkBatchSize();
      assertEquals((-1156), int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      Properties properties0 = new Properties();
      StringReader stringReader0 = new StringReader("docstore.bulkBatchSize");
      properties0.load((Reader) stringReader0);
      ClassLoadConfig classLoadConfig0 = new ClassLoadConfig();
      PropertiesWrapper propertiesWrapper0 = new PropertiesWrapper("bJ2Y`a^]O<E4/>&c", (String) null, properties0, classLoadConfig0);
      // Undeclared exception!
      try { 
        docStoreConfig0.loadSettings(propertiesWrapper0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      ClassLoadConfig classLoadConfig0 = new ClassLoadConfig();
      PropertiesWrapper propertiesWrapper0 = new PropertiesWrapper((Properties) null, classLoadConfig0);
      // Undeclared exception!
      try { 
        docStoreConfig0.loadSettings(propertiesWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebean.config.PropertiesWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      String string0 = docStoreConfig0.getMappingPath();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.getPersist();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      String string0 = docStoreConfig0.getPathToResources();
      assertNotNull(string0);
      assertEquals("src/main/resources", string0);
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setGenerateMapping(true);
      assertTrue(docStoreConfig0.isGenerateMapping());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setActive(true);
      assertTrue(docStoreConfig0.isActive());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      String string0 = docStoreConfig0.getPassword();
      assertNull(string0);
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      String string0 = docStoreConfig0.getMappingSuffix();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.isAllowAllCertificates();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setDropCreate(true);
      Properties properties0 = new Properties();
      ClassLoadConfig classLoadConfig0 = new ClassLoadConfig();
      PropertiesWrapper propertiesWrapper0 = new PropertiesWrapper(properties0, classLoadConfig0);
      docStoreConfig0.loadSettings(propertiesWrapper0);
      assertTrue(docStoreConfig0.isDropCreate());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setUrl("9u_w<<Y8Lvo\"[!JKT{");
      docStoreConfig0.isGenerateMapping();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("9u_w<<Y8Lvo\"[!JKT{", docStoreConfig0.getUrl());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setPassword("");
      docStoreConfig0.isDropCreate();
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals("", docStoreConfig0.getPassword());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      DocStoreMode docStoreMode0 = DocStoreMode.IGNORE;
      docStoreConfig0.setPersist(docStoreMode0);
      assertEquals(DocStoreMode.IGNORE, docStoreConfig0.getPersist());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setPathToResources("9u_w<<Y8Lvo\"[!JKT{");
      assertEquals("9u_w<<Y8Lvo\"[!JKT{", docStoreConfig0.getPathToResources());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      docStoreConfig0.setCreate(true);
      Properties properties0 = new Properties();
      ClassLoadConfig classLoadConfig0 = new ClassLoadConfig();
      PropertiesWrapper propertiesWrapper0 = new PropertiesWrapper((String) null, (String) null, properties0, classLoadConfig0);
      docStoreConfig0.loadSettings(propertiesWrapper0);
      assertTrue(docStoreConfig0.isCreate());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      int int0 = docStoreConfig0.getBulkBatchSize();
      assertEquals(1000, int0);
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DocStoreConfig docStoreConfig0 = new DocStoreConfig();
      String string0 = docStoreConfig0.getUsername();
      assertEquals("src/main/resources", docStoreConfig0.getPathToResources());
      assertEquals(1000, docStoreConfig0.getBulkBatchSize());
      assertNull(string0);
  }
}
