/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 17:04:55 GMT 2019
 */

package io.ebean.config.properties;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.ebean.config.properties.LoadContext;
import io.ebean.config.properties.Loader;
import java.io.InputStream;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LoadContext_ESTest extends LoadContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LoadContext loadContext0 = new LoadContext();
      loadContext0.put("load.properties", "");
      String string0 = loadContext0.indirectLocation();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LoadContext loadContext0 = new LoadContext();
      Loader.Source loader_Source0 = Loader.Source.FILE;
      // Undeclared exception!
      try { 
        loadContext0.resource((String) null, loader_Source0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LoadContext loadContext0 = new LoadContext();
      Loader.Source loader_Source0 = Loader.Source.FILE;
      // Undeclared exception!
      try { 
        loadContext0.resource("", loader_Source0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // java.io.FileNotFoundException
         //
         verifyException("io.ebean.config.properties.LoadContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LoadContext loadContext0 = new LoadContext();
      String string0 = loadContext0.indirectLocation();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LoadContext loadContext0 = new LoadContext();
      loadContext0.put("load.properties", "load.properties");
      String string0 = loadContext0.indirectLocation();
      assertEquals("load.properties", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LoadContext loadContext0 = new LoadContext();
      loadContext0.put("load.properties", "load.properties");
      Properties properties0 = loadContext0.eval();
      assertFalse(properties0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LoadContext loadContext0 = new LoadContext();
      Properties properties0 = loadContext0.eval();
      assertTrue(properties0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LoadContext loadContext0 = new LoadContext();
      loadContext0.put("/", (String) null);
      // Undeclared exception!
      try { 
        loadContext0.eval();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LoadContext loadContext0 = new LoadContext();
      Loader.Source loader_Source0 = Loader.Source.FILE;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("y(?UeBj*i8'|Sf");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "y(?UeBj*i8'|Sf");
      InputStream inputStream0 = loadContext0.resource("y(?UeBj*i8'|Sf", loader_Source0);
      assertEquals(14, inputStream0.available());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LoadContext loadContext0 = new LoadContext();
      Loader.Source loader_Source0 = Loader.Source.RESOURCE;
      InputStream inputStream0 = loadContext0.resource("load.properties", loader_Source0);
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LoadContext loadContext0 = new LoadContext();
      Loader.Source loader_Source0 = Loader.Source.RESOURCE;
      InputStream inputStream0 = loadContext0.resource("", loader_Source0);
      assertEquals(116, inputStream0.available());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LoadContext loadContext0 = new LoadContext();
      Loader.Source loader_Source0 = Loader.Source.FILE;
      InputStream inputStream0 = loadContext0.resource("#%ae", loader_Source0);
      assertNull(inputStream0);
  }
}
