/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 17:03:49 GMT 2019
 */

package io.ebean.config.properties;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.ebean.config.properties.Loader;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Loader_ESTest extends Loader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Loader loader0 = new Loader();
      Loader.Source loader_Source0 = Loader.Source.FILE;
      loader0.loadYaml("", loader_Source0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Loader loader0 = new Loader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "-+0123456789");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      // Undeclared exception!
      try { 
        loader0.loadWithExtensionCheck("properties");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to load properties?
         //
         verifyException("io.ebean.config.properties.Loader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Loader loader0 = new Loader();
      // Undeclared exception!
      try { 
        loader0.loadWithExtensionCheck((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("properties");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Loader loader0 = new Loader();
      // Undeclared exception!
      try { 
        loader0.loadWithExtensionCheck("properties");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // java.io.FileNotFoundException
         //
         verifyException("io.ebean.config.properties.LoadContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Loader loader0 = new Loader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("properties");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "-+0123J56789");
      Loader.Source loader_Source0 = Loader.Source.FILE;
      // Undeclared exception!
      try { 
        loader0.loadProperties("properties", loader_Source0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to load properties?
         //
         verifyException("io.ebean.config.properties.Loader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Loader loader0 = new Loader();
      Loader.Source loader_Source0 = Loader.Source.FILE;
      // Undeclared exception!
      try { 
        loader0.loadProperties((String) null, loader_Source0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Loader loader0 = new Loader();
      Loader.Source loader_Source0 = Loader.Source.FILE;
      // Undeclared exception!
      try { 
        loader0.loadProperties("", loader_Source0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // java.io.FileNotFoundException
         //
         verifyException("io.ebean.config.properties.LoadContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Loader loader0 = new Loader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("application.properties");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        loader0.load();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to load properties?
         //
         verifyException("io.ebean.config.properties.Loader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Loader loader0 = new Loader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("application.properties");
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        loader0.load();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // java.io.FileNotFoundException
         //
         verifyException("io.ebean.config.properties.LoadContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Loader loader0 = new Loader();
      // Undeclared exception!
      try { 
        loader0.loadWithExtensionCheck("n)tull");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expecting only yml or properties file but got [n)tull]
         //
         verifyException("io.ebean.config.properties.Loader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Loader loader0 = new Loader();
      loader0.loadWithExtensionCheck("EBEAN_PROPS_FILEyml");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Loader loader0 = new Loader();
      Loader.Source loader_Source0 = Loader.Source.RESOURCE;
      loader0.loadProperties("", loader_Source0);
      Properties properties0 = loader0.eval();
      assertEquals(7, properties0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Loader loader0 = new Loader();
      loader0.load();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Loader loader0 = new Loader();
      Properties properties0 = loader0.eval();
      assertTrue(properties0.isEmpty());
  }
}
