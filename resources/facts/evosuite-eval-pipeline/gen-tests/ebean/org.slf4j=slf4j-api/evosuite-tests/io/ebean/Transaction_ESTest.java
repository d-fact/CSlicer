/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 16:54:29 GMT 2019
 */

package io.ebean;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.ebean.Transaction;
import io.ebean.TransactionCallback;
import io.ebean.TxScope;
import io.ebean.annotation.DocStoreMode;
import io.ebean.annotation.PersistBatch;
import io.ebean.config.ExternalTransactionManager;
import io.ebeaninternal.api.ScopeTrans;
import io.ebeaninternal.api.ScopedTransaction;
import io.ebeaninternal.server.transaction.DefaultTransactionScopeManager;
import io.ebeaninternal.server.transaction.ExternalTransactionScopeManager;
import io.ebeaninternal.server.transaction.JtaTransactionManager;
import io.ebeaninternal.server.transaction.TransactionScopeManager;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockError;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Transaction_ESTest extends Transaction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JtaTransactionManager jtaTransactionManager0 = new JtaTransactionManager();
      ExternalTransactionScopeManager externalTransactionScopeManager0 = new ExternalTransactionScopeManager(";O_9oK(=fAE&~^[1v", jtaTransactionManager0);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(externalTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.setUpdateAllLoadedProperties(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("bM*4)|BGA6r");
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.setSkipCache(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ScopedTransaction scopedTransaction0 = new ScopedTransaction((TransactionScopeManager) null);
      // Undeclared exception!
      try { 
        scopedTransaction0.setRollbackOnly();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.ScopedTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("KCA?");
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.setReadOnly(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JtaTransactionManager jtaTransactionManager0 = new JtaTransactionManager();
      ExternalTransactionScopeManager externalTransactionScopeManager0 = new ExternalTransactionScopeManager("", jtaTransactionManager0);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(externalTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.setPersistCascade(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager((String) null);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.setLabel("rcL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JtaTransactionManager jtaTransactionManager0 = new JtaTransactionManager();
      ExternalTransactionScopeManager externalTransactionScopeManager0 = new ExternalTransactionScopeManager("hcG_|=F{RF<-", jtaTransactionManager0);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(externalTransactionScopeManager0);
      DocStoreMode docStoreMode0 = DocStoreMode.QUEUE;
      // Undeclared exception!
      try { 
        scopedTransaction0.setDocStoreMode(docStoreMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExternalTransactionScopeManager externalTransactionScopeManager0 = new ExternalTransactionScopeManager("", (ExternalTransactionManager) null);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(externalTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.setDocStoreBatchSize(12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("");
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.setBatchSize(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExternalTransactionScopeManager externalTransactionScopeManager0 = new ExternalTransactionScopeManager("jY6NH$?", (ExternalTransactionManager) null);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(externalTransactionScopeManager0);
      TxScope txScope0 = TxScope.requiresNew();
      ScopeTrans scopeTrans0 = new ScopeTrans(false, true, scopedTransaction0, txScope0);
      scopedTransaction0.push(scopeTrans0);
      PersistBatch persistBatch0 = PersistBatch.INSERT;
      // Undeclared exception!
      try { 
        scopedTransaction0.setBatchOnCascade(persistBatch0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("H0v)fD");
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      PersistBatch persistBatch0 = PersistBatch.ALL;
      // Undeclared exception!
      try { 
        scopedTransaction0.setBatchOnCascade(persistBatch0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager((String) null);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.setBatchMode(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ScopedTransaction scopedTransaction0 = new ScopedTransaction((TransactionScopeManager) null);
      TxScope txScope0 = TxScope.never();
      ScopeTrans scopeTrans0 = new ScopeTrans(false, false, scopedTransaction0, txScope0);
      scopedTransaction0.push(scopeTrans0);
      // Undeclared exception!
      try { 
        scopedTransaction0.setBatchGetGeneratedKeys(true);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExternalTransactionScopeManager externalTransactionScopeManager0 = new ExternalTransactionScopeManager("$%C$CBZywE", (ExternalTransactionManager) null);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(externalTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.setBatchGetGeneratedKeys(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager((String) null);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.setBatchFlushOnQuery(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExternalTransactionScopeManager externalTransactionScopeManager0 = new ExternalTransactionScopeManager("", (ExternalTransactionManager) null);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(externalTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.setBatchFlushOnMixed(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("");
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      PersistBatch persistBatch0 = PersistBatch.INSERT;
      // Undeclared exception!
      try { 
        scopedTransaction0.setBatch(persistBatch0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExternalTransactionScopeManager externalTransactionScopeManager0 = new ExternalTransactionScopeManager("", (ExternalTransactionManager) null);
      externalTransactionScopeManager0.getInScope();
      MockError mockError0 = new MockError("");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ScopedTransaction scopedTransaction0 = new ScopedTransaction((TransactionScopeManager) null);
      // Undeclared exception!
      try { 
        scopedTransaction0.rollback();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.ScopedTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("DEC");
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.rollback();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.ScopedTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("");
      defaultTransactionScopeManager0.getInScope();
      TransactionCallback transactionCallback0 = mock(TransactionCallback.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("AUTO_VARCHAR");
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      // Undeclared exception!
      try { 
        scopedTransaction0.putUserObject("AUTO_VARCHAR", timeUnit0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("");
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      TxScope txScope0 = TxScope.supports();
      ScopeTrans scopeTrans0 = new ScopeTrans(false, true, scopedTransaction0, txScope0);
      scopedTransaction0.push(scopeTrans0);
      // Undeclared exception!
      try { 
        scopedTransaction0.isSkipCache();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ScopedTransaction scopedTransaction0 = new ScopedTransaction((TransactionScopeManager) null);
      // Undeclared exception!
      try { 
        scopedTransaction0.isSkipCache();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ScopedTransaction scopedTransaction0 = new ScopedTransaction((TransactionScopeManager) null);
      // Undeclared exception!
      try { 
        scopedTransaction0.isRollbackOnly();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JtaTransactionManager jtaTransactionManager0 = new JtaTransactionManager();
      ExternalTransactionScopeManager externalTransactionScopeManager0 = new ExternalTransactionScopeManager("", jtaTransactionManager0);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(externalTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.isReadOnly();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ExternalTransactionScopeManager externalTransactionScopeManager0 = new ExternalTransactionScopeManager("", (ExternalTransactionManager) null);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(externalTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.isBatchFlushOnQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ScopedTransaction scopedTransaction0 = new ScopedTransaction((TransactionScopeManager) null);
      // Undeclared exception!
      try { 
        scopedTransaction0.isActive();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JtaTransactionManager jtaTransactionManager0 = new JtaTransactionManager();
      ExternalTransactionScopeManager externalTransactionScopeManager0 = new ExternalTransactionScopeManager("", jtaTransactionManager0);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(externalTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.getUserObject("*fTXQ%C");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("6x(/5BeG;");
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.getConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ExternalTransactionScopeManager externalTransactionScopeManager0 = new ExternalTransactionScopeManager((String) null, (ExternalTransactionManager) null);
      externalTransactionScopeManager0.getInScope();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ScopedTransaction scopedTransaction0 = new ScopedTransaction((TransactionScopeManager) null);
      // Undeclared exception!
      try { 
        scopedTransaction0.getBatchOnCascade();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("bM*4)|BGA6r");
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.getBatch();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ScopedTransaction scopedTransaction0 = new ScopedTransaction((TransactionScopeManager) null);
      // Undeclared exception!
      try { 
        scopedTransaction0.flushBatch();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ScopedTransaction scopedTransaction0 = new ScopedTransaction((TransactionScopeManager) null);
      // Undeclared exception!
      try { 
        scopedTransaction0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ScopedTransaction scopedTransaction0 = new ScopedTransaction((TransactionScopeManager) null);
      // Undeclared exception!
      try { 
        scopedTransaction0.end();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.ScopedTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("b!P\"igL;]S");
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.commitAndContinue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ExternalTransactionScopeManager externalTransactionScopeManager0 = new ExternalTransactionScopeManager("", (ExternalTransactionManager) null);
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(externalTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.commit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.ScopedTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("=jt0'zjZ/50");
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.commit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.ScopedTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultTransactionScopeManager defaultTransactionScopeManager0 = new DefaultTransactionScopeManager("");
      ScopedTransaction scopedTransaction0 = new ScopedTransaction(defaultTransactionScopeManager0);
      // Undeclared exception!
      try { 
        scopedTransaction0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.ScopedTransaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ScopedTransaction scopedTransaction0 = new ScopedTransaction((TransactionScopeManager) null);
      TxScope txScope0 = TxScope.notSupported();
      ScopeTrans scopeTrans0 = new ScopeTrans(false, true, scopedTransaction0, txScope0);
      scopedTransaction0.push(scopeTrans0);
      // Undeclared exception!
      try { 
        scopedTransaction0.addModification("CfBK13@", true, true, true);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ScopedTransaction scopedTransaction0 = new ScopedTransaction((TransactionScopeManager) null);
      // Undeclared exception!
      try { 
        scopedTransaction0.addModification("", false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.api.SpiTransactionProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        Transaction.current();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.ebean.Ebean
         //
         verifyException("io.ebean.Transaction", e);
      }
  }
}
