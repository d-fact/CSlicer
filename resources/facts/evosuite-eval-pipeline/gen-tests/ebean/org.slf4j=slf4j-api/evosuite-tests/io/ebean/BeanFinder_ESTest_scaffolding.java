/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Aug 22 17:48:41 GMT 2019
 */

package io.ebean;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class BeanFinder_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "io.ebean.BeanFinder"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BeanFinder_ESTest_scaffolding.class.getClassLoader() ,
      "io.ebean.BeanFinder"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BeanFinder_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "io.ebean.BeanFinder",
      "io.ebean.EbeanVersion",
      "io.ebean.Ebean$ServerManager",
      "io.ebean.PrimaryServer",
      "io.ebean.config.properties.PropertiesLoader",
      "io.ebean.config.properties.Loader",
      "io.ebean.config.properties.LoadContext",
      "org.yaml.snakeyaml.Yaml",
      "io.ebean.config.properties.YamlLoader",
      "org.yaml.snakeyaml.constructor.BaseConstructor",
      "org.yaml.snakeyaml.constructor.AbstractConstruct",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined",
      "org.yaml.snakeyaml.constructor.SafeConstructor",
      "org.yaml.snakeyaml.constructor.Constructor",
      "org.yaml.snakeyaml.TypeDescription",
      "org.yaml.snakeyaml.nodes.NodeId",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$2",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.PercentEscaper",
      "org.yaml.snakeyaml.util.UriEncoder",
      "org.yaml.snakeyaml.nodes.Tag",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlNull",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlBool",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlFloat",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlBinary",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlOmap",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlStr",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSeq",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlMap",
      "org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject",
      "org.yaml.snakeyaml.constructor.Constructor$ConstructScalar",
      "org.yaml.snakeyaml.constructor.Constructor$ConstructMapping",
      "org.yaml.snakeyaml.constructor.Constructor$ConstructSequence",
      "org.yaml.snakeyaml.introspector.PropertyUtils",
      "org.yaml.snakeyaml.util.PlatformFeatureDetector",
      "org.yaml.snakeyaml.introspector.BeanAccess",
      "org.yaml.snakeyaml.representer.BaseRepresenter",
      "org.yaml.snakeyaml.representer.SafeRepresenter",
      "org.yaml.snakeyaml.representer.Representer",
      "org.yaml.snakeyaml.DumperOptions$FlowStyle",
      "org.yaml.snakeyaml.representer.BaseRepresenter$1",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNull",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentBoolean",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentUuid",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentByteArray",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentPrimitiveArray",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentList",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentIterator",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentArray",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentEnum",
      "org.yaml.snakeyaml.representer.Representer$RepresentJavaBean",
      "org.yaml.snakeyaml.DumperOptions",
      "org.yaml.snakeyaml.DumperOptions$ScalarStyle",
      "org.yaml.snakeyaml.DumperOptions$LineBreak",
      "org.yaml.snakeyaml.serializer.NumberAnchorGenerator",
      "org.yaml.snakeyaml.LoaderOptions",
      "org.yaml.snakeyaml.resolver.Resolver",
      "org.yaml.snakeyaml.resolver.ResolverTuple",
      "io.ebean.config.properties.Loader$Source",
      "io.ebean.EbeanServerFactory",
      "io.ebean.config.ContainerConfig",
      "io.ebean.Ebean"
    );
  }
}
