/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 17:02:40 GMT 2019
 */

package io.ebean.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.ebean.config.AutoTuneConfig;
import io.ebean.config.AutoTuneMode;
import io.ebean.config.ClassLoadConfig;
import io.ebean.config.PropertiesWrapper;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AutoTuneConfig_ESTest extends AutoTuneConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.setSkipProfileReportingOnShutdown(true);
      boolean boolean0 = autoTuneConfig0.isSkipProfileReportingOnShutdown();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.setSkipGarbageCollectionOnShutdown(true);
      boolean boolean0 = autoTuneConfig0.isSkipGarbageCollectionOnShutdown();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.setQueryTuningAddVersion(true);
      boolean boolean0 = autoTuneConfig0.isQueryTuningAddVersion();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.setQueryTuning(true);
      boolean boolean0 = autoTuneConfig0.isQueryTuning();
      assertTrue(autoTuneConfig0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.setProfiling(true);
      boolean boolean0 = autoTuneConfig0.isProfiling();
      assertTrue(autoTuneConfig0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      
      autoTuneConfig0.setQueryTuningFile((String) null);
      autoTuneConfig0.getQueryTuningFile();
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      
      autoTuneConfig0.setQueryTuningFile("");
      autoTuneConfig0.getQueryTuningFile();
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.setProfilingUpdateFrequency(7);
      int int0 = autoTuneConfig0.getProfilingUpdateFrequency();
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.setProfilingUpdateFrequency((-2453));
      int int0 = autoTuneConfig0.getProfilingUpdateFrequency();
      assertEquals((-2453), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      
      autoTuneConfig0.setProfilingRate(0.0);
      double double0 = autoTuneConfig0.getProfilingRate();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.setProfilingRate((-1925.811529281903));
      double double0 = autoTuneConfig0.getProfilingRate();
      assertEquals((-1925.811529281903), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
      
      autoTuneConfig0.setProfilingFile((String) null);
      autoTuneConfig0.getProfilingFile();
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      
      autoTuneConfig0.setProfilingBase(0);
      int int0 = autoTuneConfig0.getProfilingBase();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.setProfilingBase((-385));
      int int0 = autoTuneConfig0.getProfilingBase();
      assertEquals((-385), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.setMode((AutoTuneMode) null);
      autoTuneConfig0.getMode();
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.setGarbageCollectionWait((-698));
      int int0 = autoTuneConfig0.getGarbageCollectionWait();
      assertEquals((-698), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      // Undeclared exception!
      try { 
        autoTuneConfig0.loadSettings((PropertiesWrapper) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebean.config.AutoTuneConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      boolean boolean0 = autoTuneConfig0.isActive();
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertFalse(boolean0);
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.setProfiling(true);
      boolean boolean0 = autoTuneConfig0.isActive();
      assertTrue(autoTuneConfig0.isProfiling());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.isQueryTuningAddVersion();
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      int int0 = autoTuneConfig0.getProfilingBase();
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
      assertEquals(5, int0);
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.isSkipProfileReportingOnShutdown();
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.isQueryTuning();
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      int int0 = autoTuneConfig0.getGarbageCollectionWait();
      assertEquals(100, int0);
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      String string0 = autoTuneConfig0.getQueryTuningFile();
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals("ebean-autotune.xml", string0);
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
      assertEquals(5, autoTuneConfig0.getProfilingBase());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.getMode();
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals(5, autoTuneConfig0.getProfilingBase());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.isSkipGarbageCollectionOnShutdown();
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      int int0 = autoTuneConfig0.getProfilingUpdateFrequency();
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertEquals(0, int0);
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      String string0 = autoTuneConfig0.getProfilingFile();
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals("ebean-profiling", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      double double0 = autoTuneConfig0.getProfilingRate();
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertEquals(0.01, double0, 0.01);
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.isProfiling();
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      Properties properties0 = new Properties();
      ClassLoadConfig classLoadConfig0 = new ClassLoadConfig((ClassLoader) null);
      PropertiesWrapper propertiesWrapper0 = new PropertiesWrapper("<", "<", properties0, classLoadConfig0);
      autoTuneConfig0.loadSettings(propertiesWrapper0);
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
      assertEquals(0, autoTuneConfig0.getProfilingUpdateFrequency());
      assertEquals("ebean-autotune.xml", autoTuneConfig0.getQueryTuningFile());
      assertEquals(0.01, autoTuneConfig0.getProfilingRate(), 0.01);
      assertEquals(5, autoTuneConfig0.getProfilingBase());
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      assertEquals("ebean-profiling", autoTuneConfig0.getProfilingFile());
      
      autoTuneConfig0.setProfilingFile("");
      autoTuneConfig0.getProfilingFile();
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      assertEquals(100, autoTuneConfig0.getGarbageCollectionWait());
      
      autoTuneConfig0.setGarbageCollectionWait(0);
      int int0 = autoTuneConfig0.getGarbageCollectionWait();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AutoTuneConfig autoTuneConfig0 = new AutoTuneConfig();
      autoTuneConfig0.setQueryTuning(true);
      boolean boolean0 = autoTuneConfig0.isActive();
      assertTrue(autoTuneConfig0.isQueryTuning());
      assertTrue(boolean0);
  }
}
