/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Aug 20 11:16:37 GMT 2019
 */

package io.jafka.console;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class GetOffsetShell_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "io.jafka.console.GetOffsetShell"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "SG"); 
    java.lang.System.setProperty("user.dir", "/home/cgzhu/projects/gitslice/resources/facts/evosuite-eval-pipeline/gen-tests/jafka/net.sf.jopt-simple=jopt-simple"); 
    java.lang.System.setProperty("user.home", "/home/cgzhu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "cgzhu"); 
    java.lang.System.setProperty("user.timezone", "Asia/Singapore"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GetOffsetShell_ESTest_scaffolding.class.getClassLoader() ,
      "joptsimple.BuiltinHelpFormatter",
      "joptsimple.internal.Reflection",
      "joptsimple.UnavailableOptionException",
      "joptsimple.AbstractOptionSpec",
      "joptsimple.ValueConversionException",
      "joptsimple.internal.Row",
      "joptsimple.OptionParser",
      "joptsimple.BuiltinHelpFormatter$1",
      "joptsimple.OptionDescriptor",
      "joptsimple.OptionSet",
      "joptsimple.OptionSpec",
      "joptsimple.OptionParserState$2",
      "joptsimple.OptionArgumentConversionException",
      "io.jafka.console.MyFormatter",
      "joptsimple.internal.MethodInvokingValueConverter",
      "joptsimple.OptionParserState$1",
      "joptsimple.IllegalOptionSpecificationException",
      "io.jafka.console.GetOffsetShell",
      "joptsimple.OptionalArgumentOptionSpec",
      "joptsimple.ArgumentAcceptingOptionSpec",
      "joptsimple.ParserRules",
      "joptsimple.ArgumentList",
      "joptsimple.internal.Messages",
      "joptsimple.OptionParserState",
      "joptsimple.internal.OptionNameMap",
      "joptsimple.UnrecognizedOptionException",
      "joptsimple.internal.ReflectionException",
      "joptsimple.OptionSpecBuilder",
      "joptsimple.util.KeyValuePair",
      "joptsimple.NoArgumentOptionSpec",
      "joptsimple.MultipleArgumentsForOptionException",
      "joptsimple.OptionDeclarer",
      "joptsimple.internal.Strings",
      "joptsimple.OptionMissingRequiredArgumentException",
      "joptsimple.internal.AbbreviationMap",
      "joptsimple.OptionSpecTokenizer",
      "joptsimple.internal.Columns",
      "joptsimple.NonOptionArgumentSpec",
      "joptsimple.RequiredArgumentOptionSpec",
      "joptsimple.OptionException",
      "joptsimple.internal.ConstructorInvokingValueConverter",
      "joptsimple.internal.Rows",
      "joptsimple.HelpFormatter",
      "joptsimple.ValueConverter",
      "joptsimple.MissingRequiredOptionsException",
      "joptsimple.AlternativeLongOptionSpec",
      "joptsimple.UnconfiguredOptionException",
      "joptsimple.internal.SimpleOptionNameMap",
      "joptsimple.internal.Classes"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GetOffsetShell_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "io.jafka.console.GetOffsetShell",
      "joptsimple.OptionParser",
      "joptsimple.BuiltinHelpFormatter",
      "joptsimple.internal.Rows",
      "joptsimple.OptionParserState",
      "joptsimple.OptionParserState$2",
      "joptsimple.internal.AbbreviationMap",
      "joptsimple.AbstractOptionSpec",
      "joptsimple.NonOptionArgumentSpec",
      "joptsimple.internal.SimpleOptionNameMap",
      "joptsimple.OptionSpecTokenizer",
      "joptsimple.ParserRules",
      "joptsimple.NoArgumentOptionSpec",
      "joptsimple.ArgumentAcceptingOptionSpec",
      "joptsimple.RequiredArgumentOptionSpec",
      "joptsimple.OptionException",
      "joptsimple.IllegalOptionSpecificationException",
      "joptsimple.OptionSpecBuilder",
      "joptsimple.internal.Reflection",
      "joptsimple.internal.Classes",
      "joptsimple.internal.ConstructorInvokingValueConverter",
      "joptsimple.internal.MethodInvokingValueConverter",
      "joptsimple.ArgumentList",
      "joptsimple.OptionSet",
      "joptsimple.BuiltinHelpFormatter$1",
      "joptsimple.internal.Strings",
      "joptsimple.internal.Messages",
      "joptsimple.internal.Row",
      "joptsimple.internal.Columns",
      "joptsimple.util.KeyValuePair",
      "joptsimple.UnrecognizedOptionException",
      "joptsimple.OptionParserState$1",
      "io.jafka.console.MyFormatter",
      "joptsimple.AlternativeLongOptionSpec",
      "joptsimple.OptionalArgumentOptionSpec",
      "joptsimple.UnconfiguredOptionException",
      "joptsimple.MultipleArgumentsForOptionException"
    );
  }
}
