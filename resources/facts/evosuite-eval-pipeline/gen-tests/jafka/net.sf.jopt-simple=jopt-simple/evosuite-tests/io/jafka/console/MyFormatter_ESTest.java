/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 11:20:26 GMT 2019
 */

package io.jafka.console;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.jafka.console.MyFormatter;
import java.util.HashMap;
import java.util.List;
import joptsimple.OptionDescriptor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MyFormatter_ESTest extends MyFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MyFormatter myFormatter0 = new MyFormatter();
      HashMap<String, OptionDescriptor> hashMap0 = new HashMap<String, OptionDescriptor>();
      OptionDescriptor optionDescriptor0 = mock(OptionDescriptor.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(optionDescriptor0).options();
      hashMap0.put("", optionDescriptor0);
      // Undeclared exception!
      try { 
        myFormatter0.format(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.jafka.console.MyFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MyFormatter myFormatter0 = new MyFormatter();
      HashMap<String, OptionDescriptor> hashMap0 = new HashMap<String, OptionDescriptor>();
      String string0 = myFormatter0.format(hashMap0);
      assertEquals("", string0);
  }
}
