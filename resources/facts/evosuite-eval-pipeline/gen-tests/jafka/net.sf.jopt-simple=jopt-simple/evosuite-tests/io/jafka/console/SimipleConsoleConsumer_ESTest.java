/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 11:14:26 GMT 2019
 */

package io.jafka.console;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.jafka.console.SimipleConsoleConsumer;
import java.lang.reflect.Array;
import java.net.URISyntaxException;
import joptsimple.OptionParser;
import joptsimple.OptionSet;
import joptsimple.OptionSpec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimipleConsoleConsumer_ESTest extends SimipleConsoleConsumer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OptionParser optionParser0 = new OptionParser();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "REQUIRED: The topic id to consumer on.";
      OptionSet optionSet0 = optionParser0.parse(stringArray0);
      OptionSpec<String>[] optionSpecArray0 = (OptionSpec<String>[]) Array.newInstance(OptionSpec.class, 0);
      SimipleConsoleConsumer.checkRequiredArgs(optionParser0, optionSet0, optionSpecArray0);
      assertEquals(0, optionSpecArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "[%d] %d: %s";
      stringArray0[1] = "";
      stringArray0[2] = "<ojAoE";
      stringArray0[3] = "J\"%it8R`70#Vgwbi";
      stringArray0[4] = "io.jafka.console.SimipleConsoleConsumer$1";
      stringArray0[5] = "REQUIRED: The topic id to consumer on.";
      stringArray0[6] = "z|ST2Aw_*Q+_c6J";
      stringArray0[7] = "gejOZli%$EL/";
      stringArray0[8] = "-Hhw]5h6uCz;D,";
      try { 
        SimipleConsoleConsumer.main(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // H is not a recognized option
         //
         verifyException("joptsimple.OptionException", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "%AX*=H";
      stringArray0[2] = "-t`Cwwze";
      stringArray0[3] = "";
      stringArray0[4] = "%AX*=H";
      stringArray0[5] = "-s";
      stringArray0[6] = "V!:Y8 Gyf1h";
      try { 
        SimipleConsoleConsumer.main(stringArray0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 1: V!:Y8 Gyf1h
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      try { 
        SimipleConsoleConsumer.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("joptsimple.ArgumentList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OptionParser optionParser0 = new OptionParser(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "v)~p6vj.";
      stringArray0[1] = "";
      stringArray0[2] = "(default: ";
      stringArray0[3] = "";
      stringArray0[4] = "offset";
      stringArray0[5] = "";
      stringArray0[6] = "       ";
      OptionSet optionSet0 = optionParser0.parse(stringArray0);
      OptionSpec<String>[] optionSpecArray0 = (OptionSpec<String>[]) Array.newInstance(OptionSpec.class, 1);
      // Undeclared exception!
      try { 
        SimipleConsoleConsumer.checkRequiredArgs(optionParser0, optionSet0, optionSpecArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OptionParser optionParser0 = new OptionParser();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "]V%-4g%";
      stringArray0[1] = "";
      stringArray0[2] = "REQUIRED: ";
      stringArray0[3] = "QEw";
      stringArray0[4] = "/";
      stringArray0[5] = "";
      stringArray0[6] = "AH+ajf<1*Qq'O![";
      stringArray0[7] = "";
      OptionSet optionSet0 = optionParser0.parse(stringArray0);
      // Undeclared exception!
      try { 
        SimipleConsoleConsumer.checkRequiredArgs(optionParser0, optionSet0, (OptionSpec<?>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.jafka.console.SimipleConsoleConsumer", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        SimipleConsoleConsumer.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SimipleConsoleConsumer simipleConsoleConsumer0 = new SimipleConsoleConsumer();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "-t`CZwz";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "-s";
      stringArray0[6] = "";
      SimipleConsoleConsumer.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }
}
