/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 11:18:04 GMT 2019
 */

package io.jafka.console;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.jafka.console.ConsoleConsumer;
import joptsimple.OptionParser;
import joptsimple.OptionSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConsoleConsumer_ESTest extends ConsoleConsumer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OptionParser optionParser0 = new OptionParser();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "consumer.timeout.ms";
      stringArray0[6] = "";
      stringArray0[7] = "cg}>LN$]FuHv/e<7";
      stringArray0[8] = "q!?ybQEz:YWW%Ifyg";
      OptionSet optionSet0 = ConsoleConsumer.tryParse(optionParser0, stringArray0);
      assertNotNull(optionSet0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        ConsoleConsumer.tryParse((OptionParser) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.jafka.console.ConsoleConsumer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConsoleConsumer.tryCleanupZookeeper("REQUIRED: The topic id to consumer on.", "");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \" The topic id to consumer on.\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      try { 
        ConsoleConsumer.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("joptsimple.ArgumentList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConsoleConsumer consoleConsumer0 = new ConsoleConsumer();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        ConsoleConsumer.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConsoleConsumer.tryCleanupZookeeper((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.zookeeper.client.ConnectStringParser", e);
      }
  }
}
