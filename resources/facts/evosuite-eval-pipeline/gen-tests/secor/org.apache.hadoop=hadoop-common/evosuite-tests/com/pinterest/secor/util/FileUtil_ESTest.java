/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 21 07:16:34 GMT 2019
 */

package com.pinterest.secor.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.pinterest.secor.common.SecorConfig;
import com.pinterest.secor.util.FileUtil;
import org.apache.commons.configuration.PropertiesConfiguration;
import org.apache.commons.configuration.XMLPropertiesConfiguration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileUtil_ESTest extends FileUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.moveToCloud("}K[${b=ux@#Ifc'wra=", "NA[}_6?zId$d7MXc{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 2: NA[}_6?zId$d7MXc{
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.touch((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.touch("'%U!2");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed escape pair at index 1: '%U!2
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PropertiesConfiguration propertiesConfiguration0 = new PropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(propertiesConfiguration0);
      try { 
        FileUtil.s3PathPrefixIsAltered("/ypd K\"/U:kTHRO=Pd", secorConfig0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to find required configuration option 'secor.s3.alter.path.date'.
         //
         verifyException("com.pinterest.secor.common.SecorConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      try { 
        FileUtil.s3PathPrefixIsAltered((String) null, (SecorConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.moveToCloud("fs.s3a.access.key", "fs.s3a.access.key");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.fs.FileSystem$Cache$Key", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.moveToCloud((String) null, ":ub");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can not create a Path from a null string
         //
         verifyException("org.apache.hadoop.fs.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.listRecursively((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.listRecursively("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.fs.FileSystem$Cache$Key", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.listRecursively("9qJ 7");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 3: 9qJ 7
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.list("CRs");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.fs.FileSystem$Cache$Key", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.list("\"P15LPs2\"}dEb6oJ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 0: \"P15LPs2\"}dEb6oJ
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLPropertiesConfiguration xMLPropertiesConfiguration0 = new XMLPropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(xMLPropertiesConfiguration0);
      // Undeclared exception!
      try { 
        FileUtil.getS3AlternativePrefix(secorConfig0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to find required configuration option 'secor.s3.filesystem'.
         //
         verifyException("com.pinterest.secor.common.SecorConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.getS3AlternativePathPrefix((SecorConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("fs.swift.impl", "fs.swift.impl");
      PropertiesConfiguration propertiesConfiguration0 = new PropertiesConfiguration(mockFile0);
      SecorConfig secorConfig0 = new SecorConfig(propertiesConfiguration0);
      // Undeclared exception!
      try { 
        FileUtil.getPrefix("", secorConfig0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to find required configuration option 'cloud.service'.
         //
         verifyException("com.pinterest.secor.common.SecorConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.getPrefix("secor.azure.ac;ount.key", (SecorConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        FileUtil.getModificationTimeMsRecursive(stringArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.getModificationTimeMsRecursive("~");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.fs.FileSystem$Cache$Key", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.getModificationTimeMsRecursive("Got an InterruptedException while waiting for the dispatcher to finish.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 3: Got an InterruptedException while waiting for the dispatcher to finish.
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.getMd5Hash("", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.getFileSystem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.getFileSystem(" == 1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 0:  == 1
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.exists("tZISa=9civu2=");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.fs.FileSystem$Cache$Key", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.exists("BF*]Xl_3.7Qh'R*]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 3: BF*]Xl_3.7Qh'R*]
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.deleteOnExit((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.delete((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.delete("$z6YGkyX*8h");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.fs.FileSystem$Cache$Key", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.delete("s3://");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expected authority at index 5: s3://
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XMLPropertiesConfiguration xMLPropertiesConfiguration0 = new XMLPropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(xMLPropertiesConfiguration0);
      // Undeclared exception!
      try { 
        FileUtil.configure(secorConfig0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to find required configuration option 'cloud.service'.
         //
         verifyException("com.pinterest.secor.common.SecorConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.getFileSystem("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.fs.FileSystem$Cache$Key", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = FileUtil.getMd5Hash("", stringArray0);
      assertEquals("7bc0", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SecorConfig secorConfig0 = new SecorConfig((PropertiesConfiguration) null);
      // Undeclared exception!
      try { 
        FileUtil.configure(secorConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.common.SecorConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileUtil.configure((SecorConfig) null);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.exists((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.touch("$y!*#kmQXz?.9ST?");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.hadoop.util.StringUtils
         //
         verifyException("org.apache.hadoop.fs.FileSystem$Cache$Key", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileUtil.deleteOnExit("secor.gs.connect.timeout.ms");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SecorConfig secorConfig0 = new SecorConfig((PropertiesConfiguration) null);
      // Undeclared exception!
      try { 
        FileUtil.getS3AlternativePrefix(secorConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.common.SecorConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XMLPropertiesConfiguration xMLPropertiesConfiguration0 = new XMLPropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(xMLPropertiesConfiguration0);
      // Undeclared exception!
      try { 
        FileUtil.getS3AlternativePathPrefix(secorConfig0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to find required configuration option 'secor.s3.alternative.path'.
         //
         verifyException("com.pinterest.secor.common.SecorConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.list((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
