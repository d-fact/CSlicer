/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 21 07:21:07 GMT 2019
 */

package com.pinterest.secor.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.pinterest.secor.common.LogFilePath;
import com.pinterest.secor.common.SecorConfig;
import com.pinterest.secor.util.ReflectionUtil;
import java.io.File;
import org.apache.commons.configuration.PropertiesConfiguration;
import org.apache.commons.configuration.XMLPropertiesConfiguration;
import org.apache.parquet.hadoop.codec.SnappyCodec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReflectionUtil_ESTest extends ReflectionUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      try { 
        ReflectionUtil.createUploader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      try { 
        ReflectionUtil.createUploader("+~>,qi9G~908M:G");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      try { 
        ReflectionUtil.createUploadManager((String) null, (SecorConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      try { 
        ReflectionUtil.createUploadManager("2LQwE", (SecorConfig) null);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SecorConfig secorConfig0 = new SecorConfig((PropertiesConfiguration) null);
      try { 
        ReflectionUtil.createORCSchemaProvider((String) null, secorConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReflectionUtil.createORCSchemaProvider("org.apache.hadoop.util.Shell", (SecorConfig) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLPropertiesConfiguration xMLPropertiesConfiguration0 = new XMLPropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(xMLPropertiesConfiguration0);
      try { 
        ReflectionUtil.createORCSchemaProvider("", secorConfig0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReflectionUtil.createMetricCollector((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      try { 
        ReflectionUtil.createMetricCollector("The class '%s' is not assignable to '%s'.");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      try { 
        ReflectionUtil.createMessageTransformer((String) null, (SecorConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PropertiesConfiguration propertiesConfiguration0 = new PropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(propertiesConfiguration0);
      try { 
        ReflectionUtil.createMessageTransformer("`pJ4@Wa3F%~*", secorConfig0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      try { 
        ReflectionUtil.createMessageParser((String) null, (SecorConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLPropertiesConfiguration xMLPropertiesConfiguration0 = new XMLPropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(xMLPropertiesConfiguration0);
      try { 
        ReflectionUtil.createMessageParser("j@)[h<8DN*R2TC", secorConfig0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[7];
      int[] intArray0 = new int[7];
      long[] longArray0 = new long[5];
      LogFilePath logFilePath0 = new LogFilePath("org.apache.commons.io.filefilter.CanReadFileFilter", "org.apache.commons.io.filefilter.CanReadFileFilter", stringArray0, 1661, intArray0, longArray0, "org.apache.commons.io.filefilter.CanReadFileFilter");
      SnappyCodec snappyCodec0 = new SnappyCodec();
      PropertiesConfiguration propertiesConfiguration0 = new PropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(propertiesConfiguration0);
      try { 
        ReflectionUtil.createFileWriter("org.apache.commons.io.filefilter.CanReadFileFilter", logFilePath0, snappyCodec0, secorConfig0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The class 'org.apache.commons.io.filefilter.CanReadFileFilter' is not assignable to 'com.pinterest.secor.io.FileReaderWriterFactory'.
         //
         verifyException("com.pinterest.secor.util.ReflectionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SnappyCodec snappyCodec0 = new SnappyCodec();
      PropertiesConfiguration propertiesConfiguration0 = new PropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(propertiesConfiguration0);
      try { 
        ReflectionUtil.createFileWriter("l;1oA@mVmu[,V$$P@", (LogFilePath) null, snappyCodec0, secorConfig0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[4];
      int[] intArray0 = new int[1];
      long[] longArray0 = new long[0];
      LogFilePath logFilePath0 = new LogFilePath("", (String) null, stringArray0, (-1), intArray0, longArray0, stringArray0[0]);
      SnappyCodec snappyCodec0 = new SnappyCodec();
      try { 
        ReflectionUtil.createFileReader((String) null, logFilePath0, snappyCodec0, (SecorConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SnappyCodec snappyCodec0 = new SnappyCodec();
      PropertiesConfiguration propertiesConfiguration0 = new PropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(propertiesConfiguration0);
      try { 
        ReflectionUtil.createFileReader("", (LogFilePath) null, snappyCodec0, secorConfig0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      try { 
        ReflectionUtil.createORCSchemaProvider("com.pinterest.secor.util.ReflectionUtil", (SecorConfig) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The class 'com.pinterest.secor.util.ReflectionUtil' is not assignable to 'com.pinterest.secor.util.orc.schema.ORCScehmaProvider'.
         //
         verifyException("com.pinterest.secor.util.ReflectionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReflectionUtil.createMetricCollector("com.pinterest.secor.util.ReflectionUtil");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The class 'com.pinterest.secor.util.ReflectionUtil' is not assignable to 'com.pinterest.secor.monitoring.MetricCollector'.
         //
         verifyException("com.pinterest.secor.util.ReflectionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      try { 
        ReflectionUtil.createMessageTransformer("com.pinterest.secor.util.ReflectionUtil", (SecorConfig) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The class 'com.pinterest.secor.util.ReflectionUtil' is not assignable to 'com.pinterest.secor.transformer.MessageTransformer'.
         //
         verifyException("com.pinterest.secor.util.ReflectionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      File file0 = MockFile.createTempFile("com.pinterest.secor.util.ReflectionUtil", "*5I5)UbT/q2one`<");
      MockFile mockFile0 = new MockFile(file0, "*5I5)UbT/q2one`<");
      XMLPropertiesConfiguration xMLPropertiesConfiguration0 = new XMLPropertiesConfiguration(mockFile0);
      SecorConfig secorConfig0 = new SecorConfig(xMLPropertiesConfiguration0);
      try { 
        ReflectionUtil.createMessageParser("com.pinterest.secor.util.ReflectionUtil", secorConfig0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The class 'com.pinterest.secor.util.ReflectionUtil' is not assignable to 'com.pinterest.secor.parser.MessageParser'.
         //
         verifyException("com.pinterest.secor.util.ReflectionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      try { 
        ReflectionUtil.createUploader("com.pinterest.secor.util.ReflectionUtil");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The class 'com.pinterest.secor.util.ReflectionUtil' is not assignable to 'com.pinterest.secor.uploader.Uploader'.
         //
         verifyException("com.pinterest.secor.util.ReflectionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      try { 
        ReflectionUtil.createUploadManager("com.pinterest.secor.util.ReflectionUtil", (SecorConfig) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The class 'com.pinterest.secor.util.ReflectionUtil' is not assignable to 'com.pinterest.secor.uploader.UploadManager'.
         //
         verifyException("com.pinterest.secor.util.ReflectionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[0];
      LogFilePath logFilePath0 = new LogFilePath("com.pinterest.secor.util.ReflectionUtil", "com.pinterest.secor.util.ReflectionUtil", stringArray0, 2806, 2806, 1253L, (String) null);
      SnappyCodec snappyCodec0 = new SnappyCodec();
      try { 
        ReflectionUtil.createFileReader("com.pinterest.secor.util.ReflectionUtil", logFilePath0, snappyCodec0, (SecorConfig) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The class 'com.pinterest.secor.util.ReflectionUtil' is not assignable to 'com.pinterest.secor.io.FileReaderWriterFactory'.
         //
         verifyException("com.pinterest.secor.util.ReflectionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[7];
      int[] intArray0 = new int[0];
      long[] longArray0 = new long[9];
      LogFilePath logFilePath0 = new LogFilePath((String) null, (String) null, stringArray0, 1651, intArray0, longArray0, "org.apache.hadoop.conf.Configuration.deprecation");
      SnappyCodec snappyCodec0 = new SnappyCodec();
      PropertiesConfiguration propertiesConfiguration0 = new PropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(propertiesConfiguration0);
      try { 
        ReflectionUtil.createFileWriter((String) null, logFilePath0, snappyCodec0, secorConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ReflectionUtil reflectionUtil0 = new ReflectionUtil();
  }
}
