/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Aug 21 07:24:58 GMT 2019
 */

package com.pinterest.secor.io.impl;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class ThriftParquetFileReaderWriterFactory_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.pinterest.secor.io.impl.ThriftParquetFileReaderWriterFactory"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "SG"); 
    java.lang.System.setProperty("user.dir", "/home/cgzhu/projects/gitslice/resources/facts/evosuite-eval-pipeline/gen-tests/secor/org.apache.hadoop=hadoop-common"); 
    java.lang.System.setProperty("user.home", "/home/cgzhu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "cgzhu"); 
    java.lang.System.setProperty("user.timezone", "Asia/Singapore"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ThriftParquetFileReaderWriterFactory_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.commons.lang.StringUtils",
      "org.apache.parquet.filter2.compat.FilterCompat$UnboundRecordFilterCompat",
      "com.google.common.collect.ImmutableMultimap$Itr",
      "org.apache.hadoop.fs.FileSystem",
      "org.apache.hadoop.fs.BlockLocation",
      "org.apache.hadoop.io.compress.CompressionOutputStream",
      "com.pinterest.secor.common.SecorConfig",
      "org.apache.parquet.filter2.predicate.Operators$GtEq",
      "com.google.common.collect.Collections2",
      "org.apache.hadoop.fs.permission.FsPermission$ImmutableFsPermission",
      "com.google.common.collect.PeekingIterator",
      "org.apache.parquet.column.values.plain.PlainValuesWriter",
      "org.apache.commons.codec.binary.Base64",
      "org.apache.hadoop.io.BytesWritable$Comparator",
      "org.apache.hadoop.mapreduce.CounterGroup",
      "org.apache.hadoop.metrics2.lib.MethodMetric$3",
      "org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor",
      "org.apache.hadoop.metrics2.lib.MethodMetric$2",
      "org.apache.parquet.hadoop.codec.CompressionCodecNotSupportedException",
      "org.apache.parquet.thrift.ThriftRecordConverter$FieldEnumConverter",
      "org.apache.hadoop.metrics2.lib.MethodMetric$1",
      "org.apache.hadoop.conf.Configuration",
      "org.apache.hadoop.io.WritableFactories",
      "org.apache.hadoop.security.token.Token$TrivialRenewer",
      "org.apache.parquet.it.unimi.dsi.fastutil.ints.IntIterable",
      "org.apache.commons.lang.text.StrMatcher$StringMatcher",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$1",
      "org.apache.hadoop.security.Credentials",
      "org.apache.commons.configuration.PatternSubtreeConfigurationWrapper$1",
      "org.apache.parquet.column.values.ValuesReader",
      "org.apache.hadoop.conf.Configuration$ParsedTimeDuration$2",
      "org.apache.hadoop.conf.Configuration$ParsedTimeDuration$1",
      "com.google.common.collect.NullsLastOrdering",
      "org.apache.hadoop.conf.Configuration$ParsedTimeDuration$4",
      "org.apache.parquet.column.values.plain.FixedLenByteArrayPlainValuesReader",
      "org.apache.hadoop.conf.Configuration$ParsedTimeDuration$3",
      "com.google.common.collect.RegularImmutableMultiset",
      "org.apache.hadoop.mapreduce.Cluster$JobTrackerStatus",
      "org.apache.hadoop.metrics2.lib.UniqueNames$Count",
      "com.google.common.collect.RegularImmutableMap",
      "org.apache.commons.collections.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator",
      "org.apache.parquet.column.values.dictionary.DictionaryValuesWriter$PlainFloatDictionaryValuesWriter",
      "org.apache.parquet.io.InvalidRecordException",
      "org.apache.hadoop.metrics2.impl.MetricsConfigException",
      "org.apache.hadoop.conf.Configuration$ParsedTimeDuration$6",
      "org.apache.hadoop.conf.Configuration$ParsedTimeDuration$5",
      "org.apache.log4j.spi.Filter",
      "org.apache.parquet.column.values.plain.PlainValuesReader$IntegerPlainValuesReader",
      "org.apache.hadoop.conf.Configuration$ParsedTimeDuration$7",
      "org.apache.hadoop.mapreduce.JobSubmitter",
      "org.apache.hadoop.io.SequenceFile$RecordCompressWriter",
      "org.apache.parquet.Preconditions",
      "org.apache.commons.configuration.HierarchicalConfiguration$DefinedKeysVisitor",
      "org.apache.hadoop.fs.ChecksumFileSystem$FSDataBoundedInputStream",
      "com.google.common.base.Joiner",
      "org.apache.parquet.it.unimi.dsi.fastutil.longs.LongCollection",
      "org.apache.parquet.column.page.DataPageV1",
      "org.apache.parquet.column.page.DataPageV2",
      "org.apache.commons.lang.exception.NestableRuntimeException",
      "org.apache.parquet.io.ParquetDecodingException",
      "org.apache.hadoop.mapreduce.lib.output.LazyOutputFormat",
      "org.apache.hadoop.fs.RawLocalFileSystem$DeprecatedRawLocalFileStatus",
      "org.apache.parquet.thrift.ThriftParquetWriter",
      "org.apache.parquet.hadoop.api.ReadSupport$ReadContext",
      "org.apache.hadoop.fs.BufferedFSInputStream",
      "org.codehaus.jackson.SerializableString",
      "com.google.common.collect.Lists$Partition",
      "org.apache.thrift.protocol.TBinaryProtocol$Factory",
      "com.pinterest.secor.message.ParsedMessage",
      "com.pinterest.secor.util.ParquetUtil",
      "org.apache.hadoop.mapreduce.TaskAttemptContext",
      "org.apache.parquet.column.statistics.BinaryStatistics",
      "com.google.common.collect.MapMakerInternalMap$Strength",
      "org.apache.commons.configuration.event.EventSource",
      "org.apache.hadoop.mapreduce.Counter",
      "org.apache.commons.configuration.interpol.ConfigurationInterpolator",
      "org.apache.commons.configuration.DynamicCombinedConfiguration",
      "org.apache.hadoop.fs.Options$CreateOpts",
      "org.apache.parquet.io.api.RecordMaterializer",
      "com.google.common.collect.ImmutableSortedSet$Builder",
      "org.apache.thrift.protocol.TProtocolFactory",
      "shaded.parquet.org.codehaus.jackson.annotate.JsonSubTypes$Type",
      "org.apache.parquet.column.values.RequiresPreviousReader",
      "org.apache.hadoop.metrics2.lib.MutableMetric",
      "org.apache.hadoop.fs.FSInputStream",
      "org.apache.commons.configuration.DefaultFileSystem",
      "org.apache.parquet.thrift.ThriftRecordConverter$PrimitiveCounter",
      "com.google.common.collect.ImmutableSortedSetFauxverideShim",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.commons.configuration.SubnodeConfiguration",
      "com.google.common.collect.ImmutableEntry",
      "com.google.common.base.Joiner$1",
      "com.google.common.base.Joiner$2",
      "org.codehaus.jackson.PrettyPrinter",
      "org.apache.commons.configuration.tree.NodeCombiner",
      "com.google.common.collect.ImmutableEnumMap",
      "org.apache.parquet.column.values.delta.DeltaBinaryPackingValuesReader",
      "com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry",
      "org.apache.thrift.protocol.TList",
      "org.apache.parquet.it.unimi.dsi.fastutil.floats.Float2IntFunction",
      "org.apache.parquet.column.Dictionary",
      "org.apache.hadoop.io.compress.CompressionCodec",
      "org.apache.hadoop.util.Shell$1",
      "org.apache.commons.configuration.ConfigurationKey$KeyIterator",
      "org.apache.hadoop.mapreduce.lib.output.SequenceFileAsBinaryOutputFormat",
      "org.apache.commons.configuration.PrefixedKeysIterator",
      "com.google.common.base.CharMatcher$BitSetMatcher",
      "org.apache.thrift.protocol.TField",
      "org.apache.hadoop.metrics2.impl.MetricsBuffer",
      "com.pinterest.secor.io.KeyValue",
      "org.codehaus.jackson.util.TextBuffer",
      "com.google.common.collect.ImmutableSetMultimap",
      "org.apache.log4j.Category",
      "org.apache.hadoop.fs.ReadOption",
      "org.apache.hadoop.util.Shell$ExitCodeException",
      "org.apache.hadoop.mapreduce.TaskInputOutputContext",
      "com.google.common.collect.Lists$AbstractListWrapper",
      "org.apache.hadoop.mapreduce.ClusterMetrics",
      "org.apache.parquet.schema.IncompatibleSchemaModificationException",
      "org.apache.hadoop.conf.Configuration$DeprecationContext",
      "com.google.common.collect.Interner",
      "com.google.common.collect.ImmutableMapValues$1",
      "org.codehaus.jackson.format.InputAccessor",
      "com.google.common.collect.ImmutableEnumMap$2$1",
      "org.apache.parquet.column.values.plain.PlainValuesReader$DoublePlainValuesReader",
      "com.google.common.base.Converter$ReverseConverter",
      "org.apache.hadoop.io.DataOutputBuffer",
      "com.google.common.collect.Lists$2",
      "org.apache.hadoop.fs.FileSystem$Statistics$StatisticsAggregator",
      "org.apache.hadoop.mapreduce.JobStatus$1",
      "com.google.common.collect.Lists$1",
      "org.apache.parquet.io.MessageColumnIO",
      "org.apache.commons.configuration.FileSystemBased",
      "com.google.common.base.Equivalence$Identity",
      "org.codehaus.jackson.sym.Name",
      "org.apache.parquet.io.EmptyRecordReader",
      "org.apache.parquet.io.RecordConsumerLoggingWrapper",
      "org.apache.parquet.thrift.ThriftRecordConverter$SetConverter",
      "com.google.common.base.Supplier",
      "org.apache.hadoop.mapreduce.security.token.delegation.DelegationTokenSelector",
      "com.google.common.collect.EmptyImmutableListMultimap",
      "com.google.common.collect.Maps$ImprovedAbstractMap",
      "org.codehaus.jackson.impl.JsonParserBase",
      "org.apache.hadoop.util.StringUtils",
      "com.google.common.collect.ReverseOrdering",
      "org.apache.parquet.it.unimi.dsi.fastutil.floats.FloatIterable",
      "com.google.common.collect.Maps$FilteredEntrySortedMap",
      "org.apache.hadoop.mapred.TaskID",
      "com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry",
      "org.apache.thrift.meta_data.FieldMetaData",
      "org.apache.parquet.column.statistics.Statistics",
      "org.apache.parquet.column.statistics.FloatStatistics",
      "org.apache.parquet.it.unimi.dsi.fastutil.objects.Object2IntMap",
      "com.google.common.collect.MapMakerInternalMap$ExpirationQueue",
      "org.apache.hadoop.metrics2.MetricsRecord",
      "org.apache.parquet.thrift.ParquetWriteProtocol$FieldBaseWriteProtocol",
      "org.codehaus.jackson.io.SerializedString",
      "org.apache.log4j.spi.AppenderAttachable",
      "org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator",
      "org.apache.hadoop.metrics2.MetricsSource",
      "org.apache.commons.lang.text.StrMatcher$TrimMatcher",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration",
      "org.apache.thrift.protocol.TMessage",
      "com.google.common.collect.Maps$EntryTransformer",
      "com.google.common.collect.Ordering",
      "org.apache.parquet.column.ColumnReader",
      "org.apache.commons.collections.iterators.AbstractIteratorDecorator",
      "org.apache.parquet.it.unimi.dsi.fastutil.longs.LongIterable",
      "org.apache.hadoop.metrics2.impl.MetricsSinkAdapter$1",
      "com.google.common.collect.AllEqualOrdering",
      "org.apache.parquet.column.values.rle.RunLengthBitPackingHybridValuesWriter",
      "org.apache.parquet.thrift.ThriftRecordConverter$GroupCounter",
      "org.apache.hadoop.mapreduce.Cluster",
      "org.apache.hadoop.mapred.TIPStatus",
      "org.codehaus.jackson.io.InputDecorator",
      "org.apache.hadoop.mapreduce.protocol.ClientProtocol",
      "com.google.common.cache.CacheLoader$1",
      "org.apache.parquet.column.values.deltalengthbytearray.DeltaLengthByteArrayValuesWriter",
      "org.codehaus.jackson.impl.JsonReadContext",
      "org.apache.hadoop.fs.FileContext",
      "org.apache.parquet.thrift.projection.ThriftProjectionException",
      "com.google.common.collect.MapMakerInternalMap$EntryFactory$5",
      "com.google.common.collect.MapMakerInternalMap$EntryFactory$4",
      "com.google.common.collect.MapMakerInternalMap$EntryFactory$7",
      "org.apache.commons.configuration.Lock",
      "com.google.common.collect.MapMakerInternalMap$EntryFactory$6",
      "org.apache.hadoop.util.Shell$CommandExecutor",
      "com.google.common.collect.MapMakerInternalMap$EntryFactory$1",
      "com.google.common.collect.MapMakerInternalMap$EntryFactory$3",
      "org.apache.parquet.hadoop.ParquetReader",
      "com.google.common.collect.MapMakerInternalMap$EntryFactory$2",
      "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1",
      "com.google.common.collect.MapMakerInternalMap$EntryFactory$8",
      "com.google.common.collect.SortedMapDifference",
      "org.apache.parquet.bytes.LittleEndianDataOutputStream",
      "com.google.common.collect.RegularImmutableSet",
      "org.apache.commons.logging.impl.Jdk13LumberjackLogger",
      "org.apache.parquet.hadoop.codec.SnappyCompressor",
      "com.google.common.collect.MapMaker$NullConcurrentMap",
      "com.pinterest.secor.common.LogFilePath",
      "com.google.common.collect.ImmutableListMultimap",
      "org.apache.parquet.column.values.rle.RunLengthBitPackingHybridEncoder",
      "org.apache.parquet.io.ColumnIO",
      "com.google.common.base.Equivalence$1",
      "org.apache.hadoop.util.ReflectionUtils$1",
      "org.apache.hadoop.metrics2.lib.MutableCounter",
      "org.apache.hadoop.metrics2.util.SampleQuantiles",
      "org.apache.parquet.column.ValuesType",
      "com.google.common.collect.ImmutableAsList",
      "org.apache.parquet.filter.RecordFilter",
      "com.google.common.base.MoreObjects$ToStringHelper$ValueHolder",
      "com.google.common.collect.SingletonImmutableSet",
      "org.apache.hadoop.classification.InterfaceStability$Evolving",
      "org.apache.hadoop.fs.permission.FsAction",
      "org.apache.hadoop.metrics2.lib.Interns$Tags$1",
      "com.google.common.collect.ImmutableSetMultimap$Builder",
      "com.google.common.collect.ImmutableMapEntrySet",
      "org.apache.hadoop.mapreduce.QueueAclsInfo",
      "org.apache.commons.configuration.tree.UnionCombiner",
      "org.apache.hadoop.security.token.TokenIdentifier",
      "org.apache.parquet.filter2.compat.FilterCompat$1",
      "com.google.common.collect.MapMakerInternalMap$HashIterator",
      "org.apache.parquet.thrift.struct.ThriftType$BoolType",
      "com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy",
      "com.google.common.collect.ImmutableMultiset",
      "org.apache.parquet.thrift.struct.ThriftType$SetType",
      "com.google.common.collect.ImmutableMultimap$Keys",
      "org.apache.hadoop.metrics2.lib.Interns$CacheWith2Keys$2",
      "org.apache.hadoop.metrics2.lib.Interns$CacheWith2Keys$1",
      "org.apache.commons.configuration.XMLPropertiesConfiguration",
      "org.apache.commons.configuration.AbstractFileConfiguration",
      "com.google.common.collect.AbstractIterator",
      "com.google.common.base.CharMatcher$And",
      "org.apache.parquet.filter2.predicate.Operators$And",
      "org.apache.commons.configuration.XMLPropertiesConfiguration$1",
      "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
      "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet$1",
      "org.apache.hadoop.conf.Configuration$ParsedTimeDuration",
      "org.apache.hadoop.fs.FileContext$Util",
      "org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream",
      "com.google.common.collect.MapMaker$RemovalNotification",
      "org.apache.commons.collections.map.UnmodifiableMap",
      "org.apache.hadoop.metrics2.MetricsTag",
      "com.google.common.collect.EmptyImmutableSortedSet",
      "org.codehaus.jackson.sym.CharsToNameCanonicalizer",
      "org.apache.hadoop.ipc.ProtocolSignature$ProtocolSigFingerprint",
      "org.apache.hadoop.mapred.OutputCommitter",
      "org.apache.hadoop.io.Text$Comparator",
      "org.apache.parquet.bytes.BytesInput",
      "org.apache.hadoop.mapred.InputFormat",
      "com.google.common.collect.MapMakerInternalMap$WeakValueReference",
      "org.apache.parquet.bytes.BytesInput$CapacityBAOSBytesInput",
      "org.apache.commons.collections.map.UnmodifiableEntrySet",
      "org.apache.parquet.hadoop.metadata.Canonicalizer",
      "org.apache.commons.configuration.ConfigurationBuilder",
      "org.apache.parquet.filter2.predicate.UserDefinedPredicate",
      "com.google.common.base.Converter",
      "org.apache.commons.lang.text.StrTokenizer",
      "com.google.common.collect.MapMakerInternalMap$Strength$2",
      "com.google.common.collect.MapMakerInternalMap$Strength$1",
      "org.apache.hadoop.yarn.api.records.ReservationId$1",
      "org.apache.hadoop.metrics2.impl.MetricsRecordBuilderImpl",
      "com.google.common.collect.Multiset$Entry",
      "com.google.common.collect.MapMakerInternalMap$Strength$3",
      "org.apache.hadoop.mapreduce.Mapper",
      "org.apache.parquet.column.values.rle.RunLengthBitPackingHybridValuesReader",
      "org.apache.hadoop.metrics2.impl.SinkQueue$Consumer",
      "org.apache.hadoop.fs.FileContext$FileContextFinalizer",
      "org.apache.parquet.format.CompressionCodec",
      "org.apache.hadoop.fs.permission.AccessControlException",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.util.concurrent.ThreadFactoryBuilder",
      "org.apache.hadoop.fs.HasFileDescriptor",
      "org.apache.parquet.column.page.DataPage",
      "org.apache.hadoop.mapreduce.counters.AbstractCounters",
      "org.apache.parquet.thrift.struct.ThriftType$MapType",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.CompoundOrdering",
      "org.apache.hadoop.metrics2.MetricsVisitor",
      "com.google.common.collect.MapMakerInternalMap$WeakEntry",
      "org.apache.commons.configuration.ConversionException",
      "org.apache.parquet.thrift.TBaseRecordConverter",
      "com.google.common.collect.Ordering$IncomparableValueException",
      "com.google.common.collect.ImmutableMultiset$1",
      "org.apache.hadoop.fs.permission.AclStatus",
      "org.apache.parquet.column.page.PageReadStore",
      "org.apache.commons.configuration.BaseConfiguration",
      "org.apache.commons.configuration.VerifiableOutputStream",
      "org.apache.parquet.thrift.struct.ThriftField$Requirement",
      "org.apache.parquet.column.values.dictionary.DictionaryValuesWriter$PlainIntegerDictionaryValuesWriter",
      "org.apache.commons.logging.impl.SLF4JLogFactory",
      "org.apache.hadoop.yarn.api.records.ReservationId",
      "com.google.common.collect.ReverseNaturalOrdering",
      "org.apache.commons.configuration.interpol.EnvironmentLookup",
      "org.apache.parquet.hadoop.thrift.ThriftReadSupport",
      "org.apache.hadoop.mapreduce.counters.LimitExceededException",
      "org.apache.thrift.protocol.TProtocol",
      "org.apache.parquet.column.values.plain.PlainValuesReader$FloatPlainValuesReader",
      "org.apache.parquet.thrift.ThriftRecordConverter$FieldStringConverter",
      "shaded.parquet.org.codehaus.jackson.annotate.JsonTypeInfo$None",
      "com.google.common.collect.Iterators$MergingIterator",
      "org.apache.log4j.spi.LoggerRepository",
      "org.apache.parquet.bytes.BytesInput$IntBytesInput",
      "org.apache.hadoop.mapreduce.counters.CounterGroupFactory$FrameworkGroupFactory",
      "org.apache.hadoop.security.KerberosInfo",
      "org.apache.parquet.it.unimi.dsi.fastutil.objects.ObjectSet",
      "com.google.common.collect.Lists$RandomAccessPartition",
      "com.google.common.collect.MapMaker$NullComputingConcurrentMap",
      "org.apache.hadoop.io.Writable",
      "org.apache.parquet.thrift.ParquetWriteProtocol$MapWriteProtocol",
      "org.apache.hadoop.fs.AbstractFileSystem",
      "com.google.common.collect.ComputingConcurrentHashMap",
      "org.apache.parquet.it.unimi.dsi.fastutil.objects.ObjectCollection",
      "org.apache.hadoop.mapreduce.Job$JobState",
      "org.apache.parquet.it.unimi.dsi.fastutil.doubles.DoubleIterable",
      "org.apache.hadoop.mapreduce.TaskReport",
      "org.apache.hadoop.classification.InterfaceAudience$Private",
      "org.apache.hadoop.security.Groups$TimerToTickerAdapter",
      "org.apache.hadoop.mapreduce.Counters$GroupFactory",
      "org.apache.hadoop.io.SequenceFile$Metadata",
      "org.apache.commons.collections.MapIterator",
      "org.apache.hadoop.mapred.Counters$Counter",
      "org.apache.hadoop.fs.InvalidPathException",
      "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod",
      "org.apache.hadoop.fs.FileSystem$Statistics$StatisticsData",
      "org.apache.commons.codec.binary.BaseNCodec",
      "org.apache.parquet.filter2.compat.FilterCompat",
      "org.apache.hadoop.metrics2.lib.Interns$CacheWith2Keys",
      "com.google.common.collect.ImmutableMultimap$Values",
      "org.apache.parquet.column.values.plain.BooleanPlainValuesWriter",
      "org.codehaus.jackson.impl.JsonWriteContext",
      "com.google.common.collect.ByFunctionOrdering",
      "com.google.common.collect.AbstractMapEntry",
      "org.apache.hadoop.fs.FsStatus",
      "org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter",
      "com.google.common.collect.EmptyImmutableBiMap",
      "org.apache.commons.configuration.tree.NodeAddData",
      "com.google.common.collect.ImmutableListMultimap$Builder",
      "org.apache.parquet.thrift.ParquetProtocol",
      "shaded.parquet.org.codehaus.jackson.annotate.JsonSubTypes",
      "org.apache.log4j.Layout",
      "org.apache.hadoop.metrics2.filter.AbstractPatternFilter",
      "org.apache.parquet.io.api.Binary$FromCharSequenceBinary$1",
      "org.apache.parquet.column.values.dictionary.DictionaryValuesWriter$PlainLongDictionaryValuesWriter",
      "org.apache.hadoop.metrics2.lib.MetricsSourceBuilder",
      "org.apache.parquet.column.values.dictionary.DictionaryValuesWriter$PlainFixedLenArrayDictionaryValuesWriter",
      "org.apache.commons.configuration.tree.DefaultConfigurationNode$SubNodes",
      "org.apache.parquet.filter2.predicate.Operators$BinaryLogicalFilterPredicate",
      "org.apache.hadoop.mapreduce.counters.CounterGroupBase",
      "org.apache.parquet.column.page.Page",
      "org.apache.hadoop.io.WritableComparator",
      "org.apache.hadoop.mapred.SplitLocationInfo",
      "com.google.common.collect.Lists",
      "org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo",
      "org.apache.hadoop.security.UserGroupInformation",
      "com.google.common.collect.UnmodifiableListIterator",
      "org.apache.parquet.thrift.ThriftParquetReader",
      "org.apache.parquet.it.unimi.dsi.fastutil.ints.Int2IntMap",
      "org.apache.commons.configuration.DataConfiguration",
      "com.twitter.elephantbird.thrift.TStructDescriptor$Field",
      "org.apache.parquet.filter2.predicate.FilterPredicate$Visitor",
      "org.apache.parquet.hadoop.codec.SnappyCodec",
      "org.apache.commons.io.Charsets",
      "org.apache.parquet.it.unimi.dsi.fastutil.longs.LongSet",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.parquet.column.values.dictionary.PlainValuesDictionary",
      "org.apache.hadoop.mapreduce.InputSplit",
      "com.google.common.collect.Maps$BiMapConverter",
      "org.apache.parquet.column.values.plain.PlainValuesReader$LongPlainValuesReader",
      "org.apache.parquet.filter2.predicate.Operators$Not",
      "org.apache.parquet.thrift.struct.ThriftType$I16Type",
      "org.apache.hadoop.mapreduce.Partitioner",
      "org.apache.hadoop.mapreduce.Counters$GroupFactory$1",
      "org.apache.hadoop.mapred.TaskCompletionEvent$Status",
      "org.apache.hadoop.mapred.JobContext",
      "org.apache.hadoop.mapreduce.OutputCommitter",
      "org.apache.commons.lang.ObjectUtils$Null",
      "org.apache.hadoop.mapreduce.JobStatus",
      "com.google.common.collect.Interners$WeakInterner$Dummy",
      "com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment",
      "org.apache.hadoop.mapred.InputSplit",
      "org.apache.commons.logging.impl.SimpleLog$1",
      "com.google.common.base.Preconditions",
      "org.apache.parquet.bytes.BytesInput$BAOSBytesInput",
      "org.apache.hadoop.util.ReflectionUtils",
      "com.google.common.collect.MapMaker$ComputingMapAdapter",
      "org.apache.hadoop.util.LogAdapter",
      "org.apache.hadoop.security.token.TokenInfo",
      "org.apache.hadoop.security.authorize.AccessControlList",
      "org.apache.thrift.protocol.TSet",
      "com.pinterest.secor.message.Message",
      "org.apache.log4j.or.ObjectRenderer",
      "org.codehaus.jackson.impl.Utf8Generator",
      "org.codehaus.jackson.JsonNode",
      "org.apache.hadoop.metrics2.lib.DefaultMetricsSystem",
      "com.google.common.collect.ImmutableMultiset$EntrySet$1",
      "org.apache.hadoop.fs.permission.FsPermission",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$FileExtensionConfigurationProvider",
      "org.apache.hadoop.conf.Configuration$NegativeCacheSentinel",
      "org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream",
      "org.apache.hadoop.metrics2.lib.MutableCounterInt",
      "com.pinterest.secor.io.impl.ThriftParquetFileReaderWriterFactory$ThriftParquetFileReader",
      "com.google.common.collect.ImmutableSet",
      "org.apache.parquet.hadoop.codec.NonBlockedDecompressorStream",
      "com.google.common.collect.ImmutableMapEntry",
      "org.apache.commons.configuration.AbstractConfiguration$2",
      "org.apache.parquet.column.values.deltalengthbytearray.DeltaLengthByteArrayValuesReader",
      "org.apache.hadoop.metrics2.util.Quantile",
      "org.apache.commons.configuration.AbstractConfiguration$1",
      "org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter",
      "org.apache.parquet.filter2.predicate.Operators$Or",
      "org.apache.hadoop.mapred.FileAlreadyExistsException",
      "org.apache.parquet.schema.Type$ID",
      "org.codehaus.jackson.JsonFactory",
      "com.google.common.cache.CacheLoader",
      "com.google.common.collect.MapMakerInternalMap$KeySet",
      "org.apache.commons.codec.binary.BaseNCodec$Context",
      "org.apache.parquet.bytes.BytesInput$ByteArrayBytesInput",
      "com.google.common.collect.ImmutableMultimap$EntryCollection",
      "org.apache.commons.lang.text.StrMatcher$CharSetMatcher",
      "org.apache.commons.configuration.tree.OverrideCombiner",
      "org.apache.log4j.spi.LoggerFactory",
      "com.google.common.collect.Lists$StringAsImmutableList",
      "org.apache.parquet.it.unimi.dsi.fastutil.objects.Object2IntFunction",
      "org.apache.hadoop.mapreduce.TaskID",
      "com.google.common.collect.Maps$FilteredEntryBiMap",
      "org.apache.commons.logging.impl.Jdk14Logger",
      "com.google.common.cache.CacheLoader$FunctionToCacheLoader",
      "com.google.common.base.Splitter$Strategy",
      "org.apache.log4j.spi.LocationInfo",
      "org.apache.parquet.filter2.predicate.Operators$Lt",
      "org.apache.parquet.it.unimi.dsi.fastutil.ints.Int2IntFunction",
      "org.apache.parquet.column.values.factory.ValuesWriterFactory",
      "com.google.common.collect.EmptyImmutableSet",
      "org.apache.parquet.column.values.dictionary.DictionaryValuesReader$1",
      "com.google.common.collect.Interners$InternerFunction",
      "org.apache.commons.lang.UnhandledException",
      "org.apache.hadoop.HadoopIllegalArgumentException",
      "com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry",
      "org.apache.thrift.protocol.TStruct",
      "org.apache.parquet.io.PrimitiveColumnIO",
      "org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer",
      "org.apache.parquet.it.unimi.dsi.fastutil.floats.Float2IntMap",
      "com.google.common.collect.MapMakerInternalMap$ReferenceEntry",
      "org.apache.hadoop.metrics2.lib.MetricsAnnotations",
      "org.apache.parquet.it.unimi.dsi.fastutil.doubles.DoubleCollection",
      "org.apache.hadoop.io.compress.CompressionInputStream",
      "org.codehaus.jackson.JsonLocation",
      "org.apache.parquet.schema.Type$Repetition",
      "org.apache.hadoop.mapreduce.TaskCounter",
      "org.apache.hadoop.mapred.JobConf",
      "org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData",
      "com.google.common.collect.MapMakerInternalMap$StrongEntry",
      "org.apache.log4j.Priority",
      "org.apache.commons.configuration.SubsetConfiguration",
      "org.apache.hadoop.metrics2.impl.MetricsSystemImpl$InitMode",
      "org.apache.parquet.column.values.factory.DefaultValuesWriterFactory",
      "com.google.common.collect.NaturalOrdering",
      "org.apache.parquet.io.RecordReader",
      "org.apache.parquet.it.unimi.dsi.fastutil.objects.ObjectIterable",
      "org.apache.parquet.io.MessageColumnIO$MessageColumnIORecordConsumer",
      "com.google.common.collect.ImmutableList$SubList",
      "com.google.common.base.FunctionalEquivalence",
      "com.google.common.collect.ListMultimap",
      "org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName$1",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName$3",
      "org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName$2",
      "org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName$5",
      "org.apache.hadoop.io.SequenceFile",
      "com.twitter.elephantbird.thrift.TStructDescriptor",
      "org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName$4",
      "org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName$7",
      "org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName$6",
      "org.apache.parquet.thrift.projection.FieldsPath",
      "org.apache.hadoop.mapreduce.Mapper$Context",
      "org.codehaus.jackson.Base64Variant",
      "org.apache.commons.lang.text.StrBuilder$StrBuilderReader",
      "org.apache.hadoop.mapreduce.JobCounter",
      "org.apache.commons.configuration.reloading.InvariantReloadingStrategy",
      "org.apache.hadoop.io.DataOutputBuffer$Buffer",
      "org.apache.commons.collections.set.AbstractSetDecorator",
      "org.apache.hadoop.metrics2.annotation.Metric$Type",
      "org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName$8",
      "org.apache.parquet.column.ColumnDescriptor",
      "org.apache.log4j.CategoryKey",
      "com.google.common.collect.ImmutableMultimap$1",
      "org.apache.parquet.column.Encoding$4",
      "org.apache.parquet.column.Encoding$3",
      "org.apache.parquet.column.Encoding$2",
      "org.apache.parquet.column.Encoding$1",
      "com.google.common.base.Present",
      "org.apache.hadoop.mapreduce.lib.output.FilterOutputFormat$FilterRecordWriter",
      "org.apache.parquet.column.Encoding$8",
      "org.apache.parquet.column.Encoding$7",
      "org.apache.parquet.column.Encoding$6",
      "com.google.common.collect.ImmutableMultimap$2",
      "org.apache.parquet.column.Encoding$5",
      "org.apache.commons.configuration.FileConfiguration",
      "org.apache.hadoop.conf.Configuration$DeprecationDelta",
      "com.google.common.collect.Maps$FilteredEntryMap",
      "org.codehaus.jackson.sym.BytesToNameCanonicalizer",
      "org.apache.hadoop.mapreduce.lib.output.TextOutputFormat",
      "org.apache.parquet.hadoop.api.ReadSupport",
      "org.apache.hadoop.fs.ContentSummary",
      "org.apache.hadoop.conf.Configuration$DeprecatedKeyInfo",
      "org.apache.hadoop.fs.FilterFileSystem",
      "org.apache.hadoop.metrics2.lib.Interns",
      "org.apache.parquet.thrift.ParquetWriteProtocol$PrimitiveWriteProtocol",
      "org.apache.parquet.column.values.rle.ZeroIntegerValuesReader",
      "com.google.common.collect.Lists$TransformingSequentialList",
      "org.apache.hadoop.security.UserGroupInformation$RealUser",
      "org.apache.hadoop.io.serializer.Serializer",
      "org.apache.hadoop.fs.FileAlreadyExistsException",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.hadoop.mapred.Reporter",
      "org.apache.log4j.spi.ErrorHandler",
      "com.google.common.base.CharMatcher$NegatedMatcher",
      "org.apache.parquet.thrift.ParquetWriteProtocol",
      "org.apache.hadoop.security.token.Token",
      "org.codehaus.jackson.JsonParser$NumberType",
      "org.apache.hadoop.fs.Options$CreateOpts$BlockSize",
      "org.apache.log4j.spi.RendererSupport",
      "org.apache.parquet.bytes.ByteBufferAllocator",
      "com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet",
      "org.apache.hadoop.fs.Options$Rename",
      "com.google.common.collect.MapMakerInternalMap$WriteThroughEntry",
      "org.apache.parquet.thrift.TBaseRecordConverter$1",
      "org.apache.hadoop.metrics2.impl.MsInfo",
      "org.apache.parquet.it.unimi.dsi.fastutil.ints.IntCollection",
      "org.apache.hadoop.mapreduce.ID",
      "org.apache.hadoop.security.token.TokenSelector",
      "com.google.common.collect.MapMakerInternalMap$NullEntry",
      "org.codehaus.jackson.util.ByteArrayBuilder",
      "org.apache.hadoop.fs.ChecksumException",
      "org.apache.commons.collections.keyvalue.AbstractMapEntryDecorator",
      "org.apache.commons.configuration.beanutils.BeanDeclaration",
      "org.apache.parquet.OutputStreamCloseException",
      "com.google.common.collect.MapMakerInternalMap$ValueIterator",
      "com.google.common.collect.Lists$RandomAccessListWrapper",
      "org.apache.hadoop.mapreduce.lib.output.SequenceFileAsBinaryOutputFormat$1",
      "com.google.common.collect.ImmutableMultiset$EntrySet",
      "org.apache.parquet.thrift.ThriftRecordConverter$StructConverter$1",
      "org.apache.parquet.thrift.ThriftRecordConverter$StructConverter$2",
      "org.apache.hadoop.mapreduce.TaskTrackerInfo",
      "com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry",
      "org.apache.parquet.thrift.ThriftRecordConverter$StructConverter$3",
      "org.apache.parquet.io.api.PrimitiveConverter",
      "org.apache.hadoop.metrics2.MetricsException",
      "org.apache.hadoop.metrics2.lib.MethodMetric",
      "org.apache.hadoop.metrics2.lib.Interns$Tags",
      "com.google.common.base.Splitter",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.commons.configuration.tree.ExpressionEngine",
      "org.apache.commons.codec.Encoder",
      "org.codehaus.jackson.format.MatchStrength",
      "org.apache.parquet.column.values.rle.RunLengthBitPackingHybridDecoder",
      "org.apache.parquet.column.ColumnWriteStore",
      "com.google.common.collect.ComparatorOrdering",
      "com.google.common.collect.AbstractIndexedListIterator",
      "org.apache.parquet.bytes.BytesInput$UnsignedVarLongBytesInput",
      "org.apache.parquet.io.api.RecordMaterializer$RecordMaterializationException",
      "com.google.common.collect.Maps$1",
      "org.apache.hadoop.util.Shell$ShellTimeoutTimerTask",
      "org.apache.parquet.it.unimi.dsi.fastutil.longs.Long2IntMap",
      "org.apache.commons.codec.BinaryDecoder",
      "com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry",
      "org.apache.parquet.schema.MessageType",
      "org.apache.hadoop.metrics2.lib.Interns$Info$1",
      "org.apache.parquet.hadoop.ParquetWriter",
      "org.apache.parquet.column.values.plain.PlainValuesReader",
      "org.apache.parquet.column.values.factory.DefaultV2ValuesWriterFactory",
      "org.apache.hadoop.mapreduce.Job",
      "org.apache.parquet.io.ParquetEncodingException",
      "org.apache.commons.lang.text.StrMatcher$NoMatcher",
      "org.apache.parquet.hadoop.api.InitContext",
      "org.codehaus.jackson.JsonParser$Feature",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.thrift.protocol.TMap",
      "org.apache.commons.lang.text.StrBuilder",
      "org.apache.commons.collections.KeyValue",
      "org.apache.parquet.hadoop.metadata.ColumnPath",
      "org.apache.commons.configuration.resolver.DefaultEntityResolver",
      "org.codehaus.jackson.io.CharacterEscapes",
      "org.apache.commons.configuration.ConfigurationUtils",
      "org.apache.parquet.column.ColumnWriter",
      "org.apache.parquet.column.statistics.IntStatistics",
      "org.apache.parquet.hadoop.thrift.AbstractThriftWriteSupport",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "org.apache.hadoop.io.BinaryComparable",
      "org.apache.parquet.column.page.DictionaryPage",
      "com.google.common.collect.Multimap",
      "org.apache.commons.configuration.reloading.ManagedReloadingStrategy",
      "org.apache.hadoop.io.ByteBufferPool",
      "org.apache.commons.logging.impl.Log4JLogger",
      "com.google.common.collect.ForwardingConcurrentMap",
      "org.apache.hadoop.io.SequenceFile$ValueBytes",
      "org.apache.log4j.Appender",
      "org.apache.hadoop.security.UserGroupInformation$UgiMetrics",
      "com.google.common.base.Splitter$1$1",
      "org.apache.hadoop.conf.Configuration$Resource",
      "org.apache.hadoop.security.SaslRpcServer$AuthMethod",
      "org.apache.parquet.thrift.struct.ThriftType$StructType$StructOrUnionType",
      "org.apache.parquet.column.page.DataPage$Visitor",
      "com.google.common.base.PairwiseEquivalence",
      "org.apache.hadoop.fs.PositionedReadable",
      "org.apache.parquet.bytes.BytesInput$ByteBufferBytesInput",
      "org.apache.hadoop.io.BytesWritable",
      "com.pinterest.secor.io.FileWriter",
      "org.apache.hadoop.classification.InterfaceStability$Unstable",
      "org.apache.hadoop.io.serializer.Serialization",
      "org.apache.parquet.thrift.ThriftRecordConverter$FieldPrimitiveConverter",
      "org.apache.hadoop.ipc.VersionedProtocol",
      "org.apache.parquet.thrift.struct.ThriftField",
      "org.apache.hadoop.io.WritableFactory",
      "com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry",
      "org.apache.log4j.spi.LoggingEvent",
      "org.apache.hadoop.metrics2.impl.MetricsCollectorImpl",
      "org.apache.commons.configuration.event.ConfigurationErrorEvent",
      "com.google.common.base.CharMatcher$Or",
      "org.apache.commons.configuration.tree.ConfigurationNode",
      "org.apache.commons.logging.impl.LogKitLogger",
      "org.apache.parquet.column.values.bitpacking.ByteBitPackingValuesReader",
      "org.apache.log4j.spi.ThrowableInformation",
      "com.google.common.base.AbstractIterator",
      "org.apache.commons.configuration.tree.MergeCombiner",
      "org.apache.hadoop.fs.permission.FsPermission$1",
      "org.apache.parquet.column.page.PageWriter",
      "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSOutputSummer",
      "org.apache.parquet.it.unimi.dsi.fastutil.doubles.Double2IntMap",
      "org.apache.parquet.hadoop.api.WriteSupport$FinalizedWriteContext",
      "org.apache.parquet.io.api.RecordConsumer",
      "org.apache.commons.configuration.interpol.ConstantLookup",
      "org.apache.hadoop.util.Shell$OSType",
      "org.apache.hadoop.mapreduce.QueueInfo",
      "org.apache.commons.logging.impl.SimpleLog",
      "org.apache.hadoop.io.SequenceFile$CompressionType",
      "org.apache.parquet.it.unimi.dsi.fastutil.doubles.Double2IntFunction",
      "org.apache.hadoop.fs.permission.AclEntryScope",
      "org.apache.hadoop.metrics2.lib.MutableQuantiles",
      "org.apache.thrift.protocol.TBinaryProtocol",
      "org.apache.hadoop.mapreduce.OutputFormat",
      "org.apache.parquet.thrift.ParquetWriteProtocol$EnumWriteProtocol",
      "org.apache.commons.lang.exception.NestableException",
      "org.apache.parquet.it.unimi.dsi.fastutil.floats.FloatCollection",
      "org.apache.thrift.TBase",
      "org.apache.parquet.it.unimi.dsi.fastutil.ints.IntIterator",
      "org.apache.hadoop.classification.InterfaceStability$Stable",
      "org.apache.hadoop.metrics2.lib.Interns$Info",
      "org.apache.commons.lang.text.StrLookup$MapStrLookup",
      "org.apache.hadoop.mapreduce.lib.output.FilterOutputFormat",
      "com.google.common.collect.RegularImmutableBiMap",
      "org.apache.hadoop.fs.FileChecksum",
      "org.apache.parquet.thrift.ThriftRecordConverter$Counter",
      "org.apache.commons.configuration.PropertiesConfiguration$DefaultIOFactory",
      "org.apache.commons.collections.IterableMap",
      "org.apache.parquet.thrift.projection.FieldProjectionFilter",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBuilderProvider",
      "org.apache.hadoop.io.compress.Decompressor",
      "org.apache.parquet.filter2.predicate.Operators$Column",
      "com.google.common.collect.ImmutableBiMap$Builder",
      "org.apache.hadoop.metrics2.lib.UniqueNames",
      "org.apache.parquet.thrift.ThriftRecordConverter$SetConverter$1",
      "org.apache.parquet.hadoop.metadata.CompressionCodecName",
      "com.google.common.collect.ImmutableMapEntry$TerminalEntry",
      "shaded.parquet.org.codehaus.jackson.annotate.JsonTypeInfo$As",
      "com.google.common.collect.NullsFirstOrdering",
      "org.apache.parquet.column.UnknownColumnTypeException",
      "org.apache.hadoop.metrics2.impl.MetricsSinkAdapter",
      "org.apache.log4j.Hierarchy",
      "org.apache.parquet.column.statistics.StatisticsClassException",
      "org.apache.hadoop.io.serializer.SerializationFactory",
      "org.apache.hadoop.fs.Syncable",
      "org.codehaus.jackson.JsonEncoding",
      "org.apache.hadoop.mapreduce.TaskCompletionEvent",
      "org.apache.hadoop.mapred.ID",
      "org.apache.hadoop.io.SequenceFile$Writer$Option",
      "org.apache.hadoop.io.DataInputBuffer",
      "org.apache.log4j.spi.OptionHandler",
      "org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket",
      "org.apache.hadoop.io.compress.CompressorStream",
      "com.google.common.base.Equivalence$Equals",
      "org.codehaus.jackson.impl.JsonParserMinimalBase",
      "com.google.common.base.CharMatcher$5",
      "org.apache.parquet.io.ValidatingRecordConsumer",
      "com.google.common.base.CharMatcher$4",
      "com.google.common.base.CharMatcher$3",
      "com.google.common.base.CharMatcher$2",
      "com.google.common.base.CharMatcher$9",
      "com.google.common.base.Equivalence$Wrapper",
      "com.google.common.base.CharMatcher$8",
      "com.google.common.base.CharMatcher$7",
      "com.google.common.base.CharMatcher$6",
      "org.apache.hadoop.security.Groups",
      "org.apache.parquet.column.values.fallback.FallbackValuesWriter",
      "org.apache.hadoop.metrics2.MetricsSystem$Callback",
      "org.codehaus.jackson.impl.JsonGeneratorBase",
      "com.google.common.base.CharMatcher$1",
      "com.google.common.collect.ImmutableMapValues",
      "org.apache.parquet.column.values.dictionary.PlainValuesDictionary$PlainDoubleDictionary",
      "com.google.common.base.CharMatcher$FastMatcher",
      "com.google.common.collect.MapMakerInternalMap$ValueReference",
      "com.google.common.base.Converter$ConverterComposition",
      "org.apache.hadoop.util.Progressable",
      "com.google.common.collect.EmptyImmutableSetMultimap",
      "org.codehaus.jackson.JsonToken",
      "org.apache.commons.configuration.JNDIConfiguration",
      "org.apache.hadoop.util.Timer",
      "com.google.common.collect.AbstractNavigableMap",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.MapMakerInternalMap$StrongValueReference",
      "org.apache.hadoop.fs.FileSystem$3",
      "org.apache.commons.lang.exception.NestableDelegate",
      "com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry",
      "org.apache.thrift.transport.TTransport",
      "com.google.common.collect.MapMakerInternalMap$EvictionQueue",
      "org.apache.hadoop.mapreduce.v2.LogParams",
      "com.google.common.collect.ImmutableCollection$Builder",
      "org.apache.parquet.thrift.ParquetWriteProtocol$StructWriteProtocol",
      "org.apache.parquet.it.unimi.dsi.fastutil.longs.Long2IntFunction",
      "org.apache.hadoop.mapreduce.lib.partition.KeyFieldBasedComparator",
      "org.apache.commons.configuration.HierarchicalConfiguration",
      "org.apache.parquet.bytes.BytesInput$SequenceBytesIn",
      "org.codehaus.jackson.JsonGenerationException",
      "org.apache.parquet.schema.DecimalMetadata",
      "org.ietf.jgss.GSSException",
      "org.apache.hadoop.mapred.RecordWriter",
      "org.apache.commons.lang.ObjectUtils",
      "org.apache.parquet.thrift.struct.ThriftType$StateVisitor",
      "com.google.common.collect.Interners$1",
      "org.codehaus.jackson.util.BufferRecycler",
      "org.apache.parquet.filter2.compat.FilterCompat$Visitor",
      "org.apache.hadoop.fs.ChecksumFileSystem$1",
      "org.apache.commons.configuration.HierarchicalConfiguration$DefinedVisitor",
      "org.apache.hadoop.metrics2.util.SampleStat",
      "com.google.common.base.Ticker$1",
      "org.apache.thrift.TFieldIdEnum",
      "com.pinterest.secor.io.FileReaderWriterFactory",
      "org.apache.hadoop.metrics2.lib.MutableRate",
      "org.apache.parquet.it.unimi.dsi.fastutil.doubles.DoubleSet",
      "com.google.common.collect.RegularImmutableMap$NonTerminalMapEntry",
      "org.apache.hadoop.fs.FsServerDefaults",
      "org.apache.hadoop.metrics2.MetricType",
      "org.codehaus.jackson.JsonGenerator$Feature",
      "com.google.common.util.concurrent.ListenableFuture",
      "com.google.common.collect.Multiset",
      "com.google.common.collect.ImmutableSetMultimap$EntrySet",
      "org.apache.hadoop.security.token.SecretManager$InvalidToken",
      "org.apache.parquet.io.GroupColumnIO",
      "org.apache.parquet.column.values.dictionary.DictionaryValuesWriter",
      "org.apache.commons.configuration.XMLPropertiesConfiguration$XMLPropertiesHandler",
      "org.apache.hadoop.metrics2.lib.DefaultMetricsFactory",
      "org.apache.hadoop.security.UserGroupInformation$DynamicConfiguration",
      "org.apache.hadoop.mapreduce.task.JobContextImpl",
      "org.apache.hadoop.fs.permission.AclEntryType",
      "org.apache.hadoop.mapreduce.FileSystemCounter",
      "org.apache.commons.configuration.reloading.Reloadable",
      "org.apache.parquet.thrift.struct.ThriftType$DoubleType",
      "org.apache.parquet.it.unimi.dsi.fastutil.floats.FloatIterator",
      "com.google.common.collect.ImmutableList",
      "org.apache.hadoop.fs.FileSystem$Cache$ClientFinalizer",
      "org.apache.hadoop.io.compress.Compressor",
      "org.apache.parquet.bytes.BytesInput$EmptyBytesInput",
      "org.apache.commons.configuration.tree.ConfigurationNodeVisitor",
      "org.apache.commons.configuration.MultiFileHierarchicalConfiguration$1",
      "org.apache.hadoop.mapreduce.JobID",
      "org.apache.commons.configuration.MultiFileHierarchicalConfiguration$2",
      "org.apache.commons.configuration.HierarchicalConfiguration$NodeVisitor",
      "org.apache.hadoop.mapreduce.lib.output.LazyOutputFormat$LazyRecordWriter",
      "org.apache.commons.configuration.resolver.EntityRegistry",
      "com.google.common.collect.MapMakerInternalMap$Values",
      "org.codehaus.jackson.util.BufferRecycler$CharBufferType",
      "com.google.common.collect.MapMaker$RemovalListener",
      "org.apache.commons.configuration.HierarchicalConfiguration$BuilderVisitor",
      "org.apache.commons.lang.exception.Nestable",
      "org.apache.hadoop.io.compress.DecompressorStream",
      "org.apache.parquet.thrift.struct.ThriftType$ListType",
      "com.google.common.collect.MapMaker$1",
      "org.apache.parquet.hadoop.api.WriteSupport$WriteContext",
      "com.google.common.collect.MapMakerInternalMap",
      "org.apache.parquet.column.values.plain.BinaryPlainValuesReader",
      "org.apache.parquet.bytes.BytesInput$UnsignedVarIntBytesInput",
      "org.apache.parquet.it.unimi.dsi.fastutil.longs.LongIterator",
      "org.apache.hadoop.fs.Options$CreateOpts$BytesPerChecksum",
      "org.apache.parquet.column.Encoding",
      "org.codehaus.jackson.map.JsonMappingException$Reference",
      "org.apache.hadoop.mapreduce.RecordWriter",
      "org.apache.commons.codec.EncoderException",
      "org.apache.hadoop.fs.FSInputChecker",
      "org.apache.hadoop.io.Text",
      "org.apache.hadoop.util.DataChecksum$Type",
      "org.apache.commons.configuration.CompositeConfiguration",
      "org.apache.hadoop.mapred.Reporter$1",
      "org.codehaus.jackson.JsonProcessingException",
      "org.apache.parquet.thrift.ThriftReader",
      "org.apache.commons.lang.BooleanUtils",
      "org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter",
      "com.google.common.base.Optional",
      "org.codehaus.jackson.JsonGenerator",
      "org.apache.hadoop.security.GroupMappingServiceProvider",
      "org.apache.parquet.bytes.BytesInput$StreamBytesInput",
      "org.apache.hadoop.metrics2.MetricsPlugin",
      "org.apache.hadoop.metrics2.lib.MutableGaugeInt",
      "org.apache.parquet.bytes.ByteBufferInputStream",
      "org.apache.hadoop.fs.FileSystem$Statistics",
      "org.apache.parquet.column.values.delta.DeltaBinaryPackingValuesWriterForLong",
      "org.apache.commons.codec.DecoderException",
      "com.google.common.base.CharMatcher$NegatedFastMatcher",
      "org.apache.hadoop.metrics2.util.SampleStat$MinMax",
      "org.apache.hadoop.metrics2.lib.MutableStat",
      "org.apache.parquet.column.values.RequiresFallback",
      "org.apache.commons.configuration.EnvironmentConfiguration",
      "org.apache.hadoop.metrics2.AbstractMetric",
      "org.apache.hadoop.security.token.TokenRenewer",
      "com.google.common.collect.LexicographicalOrdering",
      "org.apache.commons.configuration.reloading.ReloadingStrategy",
      "org.apache.parquet.column.values.bitpacking.DevNullValuesWriter",
      "com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry",
      "org.apache.hadoop.fs.ChecksumFileSystem",
      "org.apache.parquet.hadoop.codec.SnappyDecompressor",
      "org.apache.parquet.column.values.dictionary.PlainValuesDictionary$PlainIntegerDictionary",
      "org.apache.hadoop.mapreduce.protocol.ClientProtocolProvider",
      "org.apache.hadoop.fs.RemoteIterator",
      "org.apache.parquet.io.api.Binary$ByteBufferBackedBinary",
      "org.apache.commons.configuration.ConfigurationException",
      "org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader",
      "org.apache.hadoop.fs.FSOutputSummer",
      "org.codehaus.jackson.Versioned",
      "org.apache.parquet.hadoop.BadConfigurationException",
      "com.google.common.collect.GenericMapMaker$NullListener",
      "com.google.common.base.MoreObjects$ToStringHelper",
      "org.apache.parquet.thrift.ThriftParquetReader$Builder",
      "com.google.common.collect.RegularImmutableAsList",
      "org.apache.log4j.helpers.Loader",
      "org.apache.parquet.io.api.Binary$ByteArrayBackedBinary",
      "org.apache.hadoop.mapreduce.JobStatus$State",
      "com.google.common.cache.CacheLoader$SupplierToCacheLoader",
      "com.google.common.util.concurrent.ThreadFactoryBuilder$1",
      "org.codehaus.jackson.impl.ReaderBasedParser",
      "org.apache.hadoop.mapreduce.JobPriority",
      "org.apache.hadoop.fs.FSError",
      "org.apache.hadoop.fs.XAttrSetFlag",
      "org.codehaus.jackson.util.BufferRecycler$ByteBufferType",
      "com.google.common.collect.ObjectArrays",
      "org.apache.commons.logging.impl.SLF4JLocationAwareLog",
      "org.apache.hadoop.conf.Configuration$IntegerRanges",
      "org.apache.hadoop.io.Text$2",
      "com.google.common.collect.GenericMapMaker",
      "com.google.common.base.MoreObjects",
      "org.apache.hadoop.fs.HasEnhancedByteBufferAccess",
      "org.apache.commons.configuration.DatabaseConfiguration",
      "org.apache.commons.configuration.tree.ConfigurationNodeVisitorAdapter",
      "org.apache.parquet.hadoop.thrift.TBaseWriteSupport",
      "com.google.common.collect.ImmutableList$1",
      "org.apache.hadoop.mapred.JobPriority",
      "org.apache.hadoop.mapreduce.util.ConfigUtil",
      "org.apache.parquet.filter2.predicate.Operators$ColumnFilterPredicate",
      "org.apache.parquet.column.statistics.LongStatistics",
      "com.google.common.collect.SortedIterable",
      "org.apache.hadoop.mapreduce.JobContext",
      "org.apache.parquet.thrift.ThriftRecordConverter$1",
      "org.apache.hadoop.io.Text$1",
      "org.apache.hadoop.metrics2.impl.MetricsBufferBuilder",
      "com.google.common.collect.UnmodifiableIterator",
      "shaded.parquet.org.codehaus.jackson.annotate.JsonTypeInfo$Id",
      "org.apache.commons.configuration.CombinedConfiguration",
      "org.apache.parquet.thrift.ThriftRecordConverter$ElementConverter",
      "org.apache.hadoop.metrics2.annotation.Metric",
      "org.apache.parquet.thrift.struct.ThriftType",
      "org.apache.thrift.transport.TTransportException",
      "org.apache.parquet.thrift.projection.FieldProjectionFilter$1",
      "com.google.common.collect.MapMaker$RemovalCause",
      "org.apache.commons.configuration.ConfigurationKey",
      "com.google.common.collect.ImmutableMapKeySet$1",
      "org.apache.commons.configuration.FileSystem",
      "org.apache.parquet.column.values.dictionary.DictionaryValuesWriter$PlainDoubleDictionaryValuesWriter",
      "org.apache.hadoop.util.ReflectionUtils$CopyInCopyOutBuffer",
      "org.apache.hadoop.metrics2.annotation.Metrics",
      "org.apache.parquet.filter2.predicate.Operators$NotEq",
      "org.apache.parquet.thrift.ThriftSchemaConverter",
      "com.google.common.collect.MapMakerInternalMap$KeyIterator",
      "org.apache.commons.collections.map.AbstractMapDecorator",
      "org.apache.parquet.filter2.compat.FilterCompat$NoOpFilter",
      "org.apache.hadoop.mapreduce.TaskType",
      "org.apache.commons.configuration.event.ConfigurationListener",
      "org.apache.commons.collections.map.UnmodifiableEntrySet$UnmodifiableEntry",
      "org.apache.hadoop.fs.Path",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider",
      "org.apache.hadoop.conf.Configurable",
      "org.apache.hadoop.classification.InterfaceAudience$Public",
      "org.apache.parquet.thrift.ParquetWriteProtocol$MessageWriteProtocol",
      "org.apache.hadoop.mapred.TaskAttemptID",
      "org.apache.hadoop.metrics2.lib.MetricsSourceBuilder$1",
      "com.google.common.base.CharMatcher$RangesMatcher",
      "com.google.common.collect.SingletonImmutableList",
      "org.apache.hadoop.metrics2.MetricsFilter",
      "org.apache.hadoop.mapred.OutputFormat",
      "com.google.common.collect.MapMakerInternalMap$SoftEvictableEntry",
      "com.google.common.base.Function",
      "com.pinterest.secor.common.SecorConfig$1",
      "com.google.common.collect.ImmutableMap",
      "org.codehaus.jackson.ObjectCodec",
      "org.apache.parquet.filter2.predicate.Operators$Gt",
      "org.apache.hadoop.metrics2.MetricsSystemMXBean",
      "org.apache.commons.collections.collection.AbstractCollectionDecorator",
      "org.apache.parquet.thrift.ThriftRecordConverter$ListConverter",
      "org.apache.hadoop.util.PlatformName",
      "org.apache.parquet.column.values.factory.DefaultV1ValuesWriterFactory",
      "org.apache.commons.configuration.DynamicCombinedConfiguration$1",
      "org.apache.hadoop.io.DataInputBuffer$Buffer",
      "com.google.common.collect.ForwardingMap",
      "org.apache.hadoop.mapreduce.counters.CounterGroupFactory",
      "org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileOutputStream",
      "org.apache.commons.configuration.event.ConfigurationErrorListener",
      "com.google.common.collect.ExplicitOrdering",
      "org.apache.commons.lang.text.StrMatcher",
      "org.codehaus.jackson.JsonParser$1",
      "shaded.parquet.org.codehaus.jackson.annotate.JacksonAnnotation",
      "org.codehaus.jackson.impl.WriterBasedGenerator",
      "org.apache.hadoop.mapreduce.counters.Limits",
      "org.apache.parquet.column.ParquetProperties$1",
      "org.apache.commons.configuration.beanutils.BeanHelper",
      "org.apache.parquet.thrift.struct.ThriftType$EnumType",
      "org.apache.hadoop.metrics2.MetricsSink",
      "com.google.common.collect.MapMakerInternalMap$CleanupMapTask",
      "org.apache.hadoop.security.authorize.AccessControlList$1",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.hadoop.ipc.ProtocolSignature$1",
      "com.google.common.collect.Interners$WeakInterner",
      "org.apache.hadoop.metrics2.impl.MetricsSystemImpl",
      "org.apache.log4j.spi.ThrowableRenderer",
      "org.apache.commons.configuration.resolver.EntityResolverSupport",
      "com.google.common.collect.ImmutableMultiset$Builder",
      "com.google.common.collect.SingletonImmutableBiMap",
      "org.apache.hadoop.fs.ParentNotDirectoryException",
      "org.apache.parquet.Log",
      "org.apache.thrift.TSerializable",
      "org.codehaus.jackson.JsonParser",
      "org.apache.parquet.schema.Type$Repetition$1",
      "org.apache.hadoop.metrics2.impl.MetricsSourceAdapter",
      "com.google.common.base.Equivalence",
      "org.apache.parquet.filter2.predicate.Operators$Eq",
      "org.apache.parquet.schema.Type$Repetition$3",
      "org.apache.parquet.schema.Type$Repetition$2",
      "com.google.common.collect.Interners",
      "org.apache.parquet.schema.TypeConverter",
      "org.apache.parquet.thrift.ThriftRecordConverter$MapKeyValueConverter",
      "org.apache.commons.configuration.PatternSubtreeConfigurationWrapper",
      "com.google.common.collect.Maps",
      "com.google.common.collect.SetMultimap",
      "com.google.common.collect.MapMakerInternalMap$SoftEntry",
      "org.apache.commons.configuration.HierarchicalINIConfiguration",
      "org.apache.hadoop.security.UserGroupInformation$HadoopLoginModule",
      "org.apache.hadoop.fs.Options$CreateOpts$ChecksumParam",
      "com.google.common.collect.DescendingImmutableSortedSet",
      "org.apache.parquet.column.values.delta.DeltaBinaryPackingValuesWriterForInteger",
      "org.apache.commons.configuration.XMLConfiguration",
      "org.codehaus.jackson.io.UTF8Writer",
      "com.google.common.base.Splitter$SplittingIterator",
      "org.apache.hadoop.security.AccessControlException",
      "org.apache.commons.collections.Unmodifiable",
      "org.apache.hadoop.fs.FileSystem$Cache",
      "org.apache.commons.lang.StringEscapeUtils",
      "org.apache.parquet.column.values.dictionary.DictionaryValuesReader",
      "org.apache.hadoop.io.SequenceFile$Writer",
      "com.google.common.collect.MapMakerInternalMap$EntrySet",
      "org.apache.commons.configuration.beanutils.DefaultBeanFactory",
      "org.apache.commons.configuration.PropertiesConfiguration$IOFactory",
      "org.apache.parquet.it.unimi.dsi.fastutil.doubles.DoubleIterator",
      "org.apache.hadoop.fs.FileStatus",
      "org.apache.hadoop.fs.CanUnbuffer",
      "org.apache.commons.configuration.AbstractConfiguration",
      "org.apache.parquet.thrift.struct.ThriftType$I32Type",
      "org.apache.parquet.column.page.PageWriteStore",
      "org.apache.hadoop.metrics2.MetricsRecordBuilder",
      "org.apache.log4j.Level",
      "org.apache.commons.configuration.MapConfiguration",
      "com.google.common.base.Splitter$MapSplitter",
      "org.apache.parquet.column.values.dictionary.PlainValuesDictionary$PlainBinaryDictionary",
      "org.apache.hadoop.fs.StorageType",
      "org.apache.parquet.io.api.Binary$ByteArraySliceBackedBinary",
      "org.apache.hadoop.metrics2.MetricsSystem",
      "com.google.common.base.Converter$IdentityConverter",
      "org.ietf.jgss.Oid",
      "org.apache.parquet.thrift.ParquetWriteProtocol$Events",
      "org.apache.hadoop.metrics2.impl.MetricsSystemImpl$3",
      "org.apache.hadoop.metrics2.impl.MetricsSystemImpl$1",
      "com.google.common.collect.Iterators$12",
      "com.google.common.collect.Iterators$11",
      "com.google.common.collect.ImmutableEnumMap$1",
      "com.google.common.base.Predicate",
      "org.apache.hadoop.fs.CanSetReadahead",
      "org.codehaus.jackson.type.TypeReference",
      "org.apache.commons.lang.text.StrSubstitutor",
      "com.google.common.collect.ImmutableEnumMap$2",
      "org.apache.parquet.thrift.ThriftParquetReader$1",
      "org.apache.parquet.thrift.struct.ThriftType$EnumValue",
      "org.apache.hadoop.mapred.RecordReader",
      "org.apache.commons.configuration.PropertyConverter",
      "org.apache.parquet.filter2.compat.FilterCompat$Filter",
      "org.apache.commons.lang.exception.CloneFailedException",
      "org.apache.parquet.thrift.struct.ThriftType$TypeVisitor",
      "org.apache.hadoop.fs.FSDataOutputStream$PositionCache",
      "org.apache.commons.configuration.Configuration",
      "org.apache.hadoop.io.WritableComparable",
      "org.apache.hadoop.security.UserGroupInformation$TestingGroups",
      "com.google.common.collect.Iterators$13",
      "org.apache.commons.lang.text.StrMatcher$CharMatcher",
      "org.apache.hadoop.io.SequenceFile$BlockCompressWriter",
      "org.apache.commons.configuration.DefaultConfigurationBuilder",
      "org.apache.hadoop.fs.CanSetDropBehind",
      "org.apache.commons.configuration.PropertiesConfiguration",
      "com.google.common.collect.ImmutableMultimap",
      "org.apache.commons.configuration.XMLConfiguration$XMLNode",
      "com.google.common.collect.ImmutableSortedSet",
      "org.apache.commons.configuration.reloading.ManagedReloadingStrategyMBean",
      "org.apache.parquet.thrift.ThriftRecordConverter$MapConverter",
      "org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName",
      "org.apache.parquet.thrift.struct.ThriftType$StructType",
      "org.apache.hadoop.fs.FileSystem$Cache$Key",
      "com.google.common.collect.MapMakerInternalMap$Segment",
      "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1",
      "com.google.common.base.CharMatcher",
      "org.apache.commons.logging.impl.NoOpLog",
      "com.google.common.base.Joiner$MapJoiner",
      "org.apache.commons.configuration.HierarchicalConfiguration$Node",
      "org.apache.parquet.column.values.dictionary.PlainValuesDictionary$PlainLongDictionary",
      "org.apache.hadoop.fs.UnsupportedFileSystemException",
      "org.apache.commons.configuration.XMLConfiguration$XMLFileConfigurationDelegate",
      "com.google.common.collect.MapMaker",
      "org.apache.hadoop.metrics2.impl.MetricsConfig",
      "org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket",
      "org.apache.parquet.bytes.CapacityByteArrayOutputStream",
      "org.apache.parquet.filter2.predicate.FilterPredicate",
      "com.google.common.collect.MapMakerInternalMap$EntryIterator",
      "org.apache.hadoop.mapreduce.lib.output.TextOutputFormat$LineRecordWriter",
      "org.apache.parquet.thrift.ParquetReadProtocol",
      "org.apache.parquet.column.page.PageReader",
      "org.apache.hadoop.mapred.JobID",
      "org.apache.hadoop.fs.Seekable",
      "org.apache.hadoop.metrics2.lib.MutableMetricsFactory",
      "org.apache.hadoop.metrics2.lib.MutableRates",
      "com.pinterest.secor.io.FileReader",
      "org.apache.thrift.protocol.TProtocolException",
      "org.apache.parquet.column.values.plain.FixedLenByteArrayPlainValuesWriter",
      "com.google.common.collect.Iterators$6",
      "com.google.common.collect.BiMap",
      "com.google.common.collect.Iterators$7",
      "org.apache.hadoop.io.serializer.Deserializer",
      "org.apache.parquet.schema.GroupType",
      "org.apache.parquet.thrift.struct.ThriftType$ByteType",
      "org.apache.parquet.schema.PrimitiveType$PrimitiveTypeNameConverter",
      "org.apache.commons.configuration.PropertiesConfigurationLayout",
      "com.google.common.collect.ImmutableSortedAsList",
      "org.apache.hadoop.metrics2.impl.MetricsRecordImpl",
      "com.google.common.collect.Iterators$1",
      "com.google.common.collect.Iterators$2",
      "com.google.common.collect.Iterators$3",
      "org.apache.hadoop.metrics2.lib.MutableGaugeLong",
      "org.apache.hadoop.fs.Options$CreateOpts$ReplicationFactor",
      "org.apache.hadoop.mapreduce.TaskCompletionEvent$Status",
      "org.apache.log4j.spi.Configurator",
      "org.apache.avro.reflect.Stringable",
      "org.apache.commons.logging.impl.SLF4JLog",
      "com.google.common.collect.RegularImmutableBiMap$Inverse",
      "com.google.common.collect.ImmutableMultimap$Builder",
      "org.apache.commons.codec.BinaryEncoder",
      "org.codehaus.jackson.Version",
      "org.apache.parquet.io.api.Converter",
      "org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSelector",
      "com.google.common.collect.AbstractMultimap",
      "org.apache.hadoop.fs.PathFilter",
      "org.apache.parquet.thrift.ThriftMetaData",
      "org.apache.commons.lang.text.StrLookup",
      "org.apache.hadoop.mapreduce.QueueState",
      "org.apache.commons.configuration.beanutils.BeanFactory",
      "org.codehaus.jackson.map.JsonMappingException",
      "com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference",
      "org.apache.commons.configuration.AbstractHierarchicalFileConfiguration",
      "org.apache.hadoop.mapreduce.Job$TaskStatusFilter",
      "org.apache.hadoop.mapred.TaskAttemptContext",
      "org.apache.commons.codec.Decoder",
      "org.apache.hadoop.metrics2.impl.MetricsSystemImpl$4",
      "org.apache.hadoop.metrics2.lib.MetricsRegistry",
      "org.codehaus.jackson.JsonStreamContext",
      "org.apache.hadoop.mapreduce.lib.map.RegexMapper",
      "org.apache.hadoop.security.Groups$GroupCacheLoader",
      "org.apache.parquet.it.unimi.dsi.fastutil.objects.ObjectIterator",
      "org.apache.parquet.column.ParquetProperties",
      "org.apache.commons.configuration.tree.DefaultConfigurationKey",
      "org.apache.parquet.thrift.struct.ThriftType$StringType",
      "org.apache.hadoop.util.Shell$ShellCommandExecutor",
      "org.apache.parquet.filter.UnboundRecordFilter",
      "org.apache.thrift.TEnum",
      "org.apache.hadoop.metrics2.impl.AbstractMetricsRecord",
      "com.google.common.collect.ImmutableMap$Builder",
      "com.google.common.base.Converter$FunctionBasedConverter",
      "org.apache.commons.configuration.tree.DefaultConfigurationNode",
      "org.apache.hadoop.io.RawComparator",
      "org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat$1",
      "org.apache.parquet.thrift.ThriftRecordConverter",
      "org.apache.hadoop.security.UserGroupInformation$HadoopConfiguration",
      "org.apache.parquet.hadoop.api.WriteSupport",
      "org.apache.log4j.LogManager",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBeanFactory",
      "org.apache.hadoop.metrics2.impl.MetricsRecordFiltered",
      "org.apache.parquet.hadoop.ParquetReader$Builder",
      "org.apache.parquet.thrift.struct.ThriftTypeID",
      "org.apache.parquet.thrift.ThriftRecordConverter$MapConverter$1",
      "com.pinterest.secor.util.ThriftUtil",
      "org.apache.log4j.or.RendererMap",
      "org.apache.commons.configuration.HierarchicalConfiguration$3",
      "com.google.common.collect.ComputationException",
      "org.apache.commons.configuration.HierarchicalConfiguration$4",
      "com.google.common.collect.RegularImmutableList",
      "org.apache.commons.configuration.HierarchicalConfiguration$5",
      "org.apache.parquet.thrift.ThriftRecordConverter$ListConverter$1",
      "org.apache.hadoop.fs.Options$CreateOpts$CreateParent",
      "org.apache.hadoop.mapreduce.MRJobConfig",
      "org.codehaus.jackson.sym.NameN",
      "org.apache.commons.configuration.SystemConfiguration",
      "org.apache.parquet.hadoop.metadata.ColumnPath$1",
      "org.apache.hadoop.mapred.TaskCompletionEvent",
      "com.google.common.collect.Lists$TransformingRandomAccessList",
      "com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException",
      "org.apache.hadoop.mapreduce.lib.partition.KeyFieldHelper$KeyDescription",
      "com.google.common.collect.RegularImmutableBiMap$NonTerminalBiMapEntry",
      "org.apache.hadoop.fs.FSDataInputStream",
      "org.apache.commons.configuration.HierarchicalConfiguration$1",
      "org.apache.parquet.schema.TypeVisitor",
      "org.apache.commons.configuration.HierarchicalConfiguration$2",
      "com.google.common.collect.ImmutableMapKeySet",
      "org.apache.parquet.column.values.bitpacking.BytePackerForLong",
      "org.apache.hadoop.mapreduce.Counters",
      "org.apache.parquet.bytes.BytesInput$BAOS",
      "org.apache.hadoop.mapreduce.TaskAttemptID",
      "org.apache.hadoop.mapred.InvalidJobConfException",
      "com.google.common.base.Ticker",
      "org.codehaus.jackson.sym.Name1",
      "org.apache.hadoop.fs.ByteBufferReadable",
      "org.codehaus.jackson.sym.Name2",
      "org.apache.parquet.filter2.predicate.Statistics",
      "org.codehaus.jackson.sym.Name3",
      "org.apache.hadoop.metrics2.MetricsSystem$AbstractCallback",
      "org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat",
      "org.apache.commons.configuration.FileOptionsProvider",
      "org.apache.parquet.schema.Type",
      "com.google.common.collect.Maps$AbstractFilteredMap",
      "com.pinterest.secor.io.impl.ThriftParquetFileReaderWriterFactory$ThriftParquetFileWriter",
      "org.apache.commons.configuration.SubsetConfiguration$SubsetIterator",
      "org.apache.hadoop.fs.FsServerDefaults$1",
      "org.codehaus.jackson.io.IOContext",
      "org.apache.parquet.filter2.predicate.Operators$LogicalNotUserDefined",
      "org.apache.parquet.it.unimi.dsi.fastutil.ints.IntSet",
      "com.google.common.collect.MapMakerInternalMap$SerializationProxy",
      "com.google.common.collect.ImmutableSet$Builder",
      "org.apache.hadoop.mapreduce.MapContext",
      "org.apache.log4j.ProvisionNode",
      "org.apache.hadoop.fs.FileContext$1",
      "shaded.parquet.org.codehaus.jackson.annotate.JsonTypeInfo",
      "com.google.common.collect.MapMaker$RemovalCause$4",
      "org.apache.hadoop.fs.FSDataOutputStream",
      "com.google.common.collect.MapMaker$RemovalCause$5",
      "com.google.common.collect.MapMaker$RemovalCause$2",
      "com.google.common.collect.MapMaker$RemovalCause$3",
      "org.apache.parquet.column.values.dictionary.PlainValuesDictionary$PlainFloatDictionary",
      "com.google.common.collect.UsingToStringOrdering",
      "com.google.common.collect.MapMaker$RemovalCause$1",
      "org.apache.hadoop.util.StringInterner",
      "org.apache.hadoop.fs.RawLocalFileSystem",
      "org.apache.thrift.TException",
      "org.apache.commons.configuration.tree.ViewNode",
      "com.google.common.collect.MapDifference",
      "org.apache.hadoop.mapreduce.lib.output.FileOutputFormat",
      "org.apache.hadoop.fs.Options$CreateOpts$Perms",
      "com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry",
      "org.codehaus.jackson.JsonParseException",
      "shaded.parquet.org.apache.thrift.TEnum",
      "org.apache.commons.configuration.tree.DefaultExpressionEngine",
      "org.apache.hadoop.classification.InterfaceAudience$LimitedPrivate",
      "org.apache.hadoop.metrics2.filter.GlobFilter",
      "com.google.common.collect.MapMakerInternalMap$SoftValueReference",
      "com.google.common.collect.Maps$FilteredEntryNavigableMap",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$FileConfigurationProvider",
      "org.apache.parquet.schema.PrimitiveType",
      "org.apache.parquet.filter2.predicate.Operators$UserDefined",
      "com.google.common.base.CharMatcher$12",
      "org.apache.parquet.ParquetRuntimeException",
      "com.google.common.base.CharMatcher$11",
      "org.apache.hadoop.util.Shell",
      "com.google.common.base.CharMatcher$10",
      "org.apache.hadoop.fs.UnresolvedLinkException",
      "org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader",
      "com.google.common.base.CharMatcher$15",
      "com.google.common.base.CharMatcher$14",
      "com.google.common.base.CharMatcher$13",
      "org.apache.log4j.Logger",
      "org.apache.parquet.column.statistics.BooleanStatistics",
      "org.codehaus.jackson.io.OutputDecorator",
      "org.apache.hadoop.conf.Configured",
      "org.apache.hadoop.fs.Options$ChecksumOpt",
      "com.google.common.collect.ImmutableList$ReverseImmutableList",
      "org.apache.hadoop.metrics2.lib.MutableGauge",
      "org.apache.parquet.column.values.plain.BooleanPlainValuesReader",
      "org.codehaus.jackson.FormatSchema",
      "org.apache.parquet.column.values.ValuesWriter",
      "org.apache.hadoop.mapred.Counters$CountersExceededException",
      "org.apache.parquet.io.api.GroupConverter",
      "org.apache.parquet.io.api.Binary$FromStringBinary",
      "org.apache.commons.configuration.reloading.FileChangedReloadingStrategy",
      "org.apache.parquet.column.ParquetProperties$WriterVersion",
      "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter",
      "org.apache.log4j.spi.RepositorySelector",
      "org.apache.hadoop.metrics2.lib.MetricsInfoImpl",
      "org.apache.parquet.io.api.Binary",
      "org.apache.parquet.it.unimi.dsi.fastutil.floats.FloatSet",
      "org.apache.parquet.it.unimi.dsi.fastutil.Function",
      "org.apache.parquet.thrift.ThriftRecordConverter$StructConverter",
      "org.apache.parquet.column.values.dictionary.DictionaryValuesWriter$PlainBinaryDictionaryValuesWriter",
      "org.apache.hadoop.fs.permission.AclEntry",
      "org.codehaus.jackson.util.CharTypes",
      "org.apache.commons.configuration.event.ConfigurationEvent",
      "org.apache.hadoop.ipc.ProtocolSignature",
      "org.apache.commons.configuration.HierarchicalReloadableConfiguration",
      "org.apache.commons.configuration.MultiFileHierarchicalConfiguration",
      "com.google.common.collect.ForwardingObject",
      "org.apache.commons.configuration.AbstractHierarchicalFileConfiguration$FileConfigurationDelegate",
      "org.apache.hadoop.metrics2.lib.MutableCounterLong",
      "org.apache.parquet.filter2.compat.FilterCompat$FilterPredicateCompat",
      "org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker",
      "com.google.common.collect.ImmutableBiMap",
      "org.apache.parquet.hadoop.codec.NonBlockedCompressorStream",
      "org.apache.parquet.io.api.Binary$FromCharSequenceBinary",
      "com.google.common.collect.RegularImmutableBiMap$1",
      "org.codehaus.jackson.type.JavaType",
      "org.apache.hadoop.security.authentication.util.KerberosUtil",
      "org.apache.hadoop.fs.CreateFlag",
      "com.google.common.collect.MapMakerInternalMap$2",
      "org.apache.parquet.schema.OriginalType",
      "com.pinterest.secor.io.impl.ThriftParquetFileReaderWriterFactory",
      "com.google.common.collect.MapMakerInternalMap$1",
      "org.apache.parquet.thrift.ThriftRecordConverter$CollectionConverter",
      "org.apache.parquet.column.ParquetProperties$Builder",
      "org.apache.parquet.filter2.predicate.Operators$LtEq",
      "org.apache.log4j.spi.HierarchyEventListener",
      "org.apache.hadoop.metrics2.MetricsCollector",
      "com.google.common.collect.RegularImmutableMap$EntrySet",
      "org.apache.hadoop.fs.Options$CreateOpts$BufferSize",
      "org.apache.hadoop.mapreduce.lib.partition.KeyFieldBasedPartitioner",
      "org.apache.parquet.thrift.ParquetWriteProtocol$ListWriteProtocol",
      "org.apache.hadoop.metrics2.MetricsInfo",
      "org.apache.parquet.column.statistics.DoubleStatistics",
      "com.google.common.base.Splitter$1",
      "org.apache.commons.configuration.ConfigurationRuntimeException",
      "com.google.common.collect.MapMakerInternalMap$EntryFactory",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$XMLConfigurationProvider",
      "org.apache.parquet.thrift.struct.ThriftType$I64Type",
      "org.apache.parquet.column.values.delta.DeltaBinaryPackingValuesWriter",
      "org.apache.hadoop.util.Time",
      "com.google.common.collect.RegularImmutableSortedSet",
      "org.apache.hadoop.fs.LocalFileSystem",
      "org.apache.commons.configuration.beanutils.XMLBeanDeclaration"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ThriftParquetFileReaderWriterFactory_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.pinterest.secor.io.impl.ThriftParquetFileReaderWriterFactory",
      "com.pinterest.secor.io.impl.ThriftParquetFileReaderWriterFactory$ThriftParquetFileReader",
      "com.pinterest.secor.io.impl.ThriftParquetFileReaderWriterFactory$ThriftParquetFileWriter",
      "org.apache.commons.configuration.event.EventSource",
      "org.apache.commons.configuration.AbstractConfiguration",
      "org.apache.commons.configuration.BaseConfiguration",
      "org.apache.commons.configuration.AbstractFileConfiguration",
      "org.apache.commons.configuration.PropertiesConfiguration$DefaultIOFactory",
      "org.apache.commons.configuration.PropertiesConfiguration",
      "org.apache.commons.configuration.XMLPropertiesConfiguration",
      "org.apache.commons.logging.impl.NoOpLog",
      "org.apache.commons.configuration.Lock",
      "org.apache.commons.configuration.DefaultFileSystem",
      "org.apache.commons.logging.impl.SLF4JLogFactory",
      "org.apache.commons.logging.impl.SLF4JLocationAwareLog",
      "org.apache.commons.configuration.FileSystem",
      "org.apache.commons.configuration.reloading.InvariantReloadingStrategy",
      "org.apache.commons.configuration.AbstractConfiguration$2",
      "org.apache.commons.configuration.ConfigurationUtils",
      "org.apache.commons.lang.StringUtils",
      "org.apache.commons.lang.exception.NestableException",
      "org.apache.commons.configuration.ConfigurationException",
      "org.apache.commons.lang.exception.NestableDelegate",
      "com.pinterest.secor.common.SecorConfig$1",
      "com.pinterest.secor.common.SecorConfig",
      "com.pinterest.secor.common.LogFilePath",
      "org.apache.parquet.hadoop.codec.SnappyCodec",
      "org.apache.commons.configuration.PropertiesConfigurationLayout",
      "com.pinterest.secor.util.ThriftUtil",
      "org.apache.commons.configuration.PrefixedKeysIterator",
      "org.apache.commons.configuration.PropertyConverter",
      "org.apache.thrift.protocol.TBinaryProtocol$Factory",
      "com.pinterest.secor.util.ParquetUtil",
      "org.apache.commons.lang.BooleanUtils",
      "com.pinterest.secor.message.Message",
      "com.pinterest.secor.message.ParsedMessage",
      "org.apache.hadoop.fs.Path",
      "org.apache.commons.lang.text.StrBuilder",
      "org.apache.parquet.format.CompressionCodec",
      "org.apache.parquet.hadoop.metadata.CompressionCodecName",
      "org.apache.parquet.column.ParquetProperties$WriterVersion",
      "org.apache.parquet.column.values.factory.DefaultV1ValuesWriterFactory",
      "org.apache.parquet.column.values.factory.DefaultV2ValuesWriterFactory",
      "org.apache.parquet.column.values.factory.DefaultValuesWriterFactory",
      "org.apache.parquet.column.ParquetProperties",
      "org.apache.parquet.hadoop.ParquetWriter",
      "org.apache.parquet.thrift.ThriftParquetWriter",
      "org.apache.parquet.hadoop.api.WriteSupport",
      "org.apache.parquet.Log",
      "org.apache.parquet.hadoop.thrift.AbstractThriftWriteSupport",
      "org.apache.parquet.hadoop.thrift.TBaseWriteSupport",
      "org.apache.parquet.thrift.ThriftSchemaConverter",
      "com.google.common.base.Joiner",
      "com.google.common.base.Preconditions",
      "com.google.common.base.Joiner$1",
      "com.google.common.collect.Collections2",
      "com.google.common.base.Joiner$MapJoiner",
      "com.google.common.collect.Maps",
      "com.twitter.elephantbird.thrift.TStructDescriptor",
      "org.apache.thrift.meta_data.FieldMetaData",
      "org.apache.commons.lang.text.StrMatcher$CharMatcher",
      "org.apache.commons.lang.text.StrMatcher$CharSetMatcher",
      "org.apache.commons.lang.text.StrMatcher$TrimMatcher",
      "org.apache.commons.lang.text.StrMatcher$NoMatcher",
      "org.apache.commons.lang.text.StrMatcher",
      "org.apache.commons.lang.text.StrMatcher$StringMatcher",
      "org.apache.commons.lang.text.StrSubstitutor",
      "org.apache.commons.lang.text.StrLookup$MapStrLookup",
      "org.apache.commons.lang.text.StrLookup",
      "org.apache.commons.configuration.interpol.ConstantLookup",
      "org.apache.commons.configuration.interpol.EnvironmentLookup",
      "org.apache.commons.configuration.MapConfiguration",
      "org.apache.commons.configuration.EnvironmentConfiguration",
      "org.apache.commons.configuration.interpol.ConfigurationInterpolator",
      "org.apache.commons.configuration.AbstractConfiguration$1",
      "org.apache.parquet.hadoop.codec.SnappyDecompressor",
      "org.apache.commons.lang.ObjectUtils$Null",
      "org.apache.commons.lang.ObjectUtils",
      "org.apache.commons.configuration.event.ConfigurationEvent",
      "org.apache.commons.configuration.PropertiesConfigurationLayout$PropertyLayoutData",
      "org.apache.parquet.hadoop.ParquetReader",
      "org.apache.parquet.thrift.ThriftParquetReader",
      "org.apache.parquet.thrift.ThriftParquetReader$Builder",
      "org.apache.parquet.Preconditions",
      "org.apache.hadoop.conf.Configuration$DeprecationDelta",
      "org.apache.hadoop.conf.Configuration$DeprecationContext",
      "org.apache.hadoop.conf.Configuration$DeprecatedKeyInfo",
      "org.apache.commons.collections.map.AbstractMapDecorator",
      "org.apache.commons.collections.map.UnmodifiableMap",
      "org.apache.hadoop.conf.Configuration",
      "org.apache.parquet.filter2.compat.FilterCompat$NoOpFilter",
      "org.apache.parquet.filter2.compat.FilterCompat",
      "org.apache.commons.configuration.reloading.FileChangedReloadingStrategy",
      "org.apache.commons.codec.binary.BaseNCodec",
      "org.apache.commons.codec.binary.Base64",
      "org.apache.commons.codec.binary.BaseNCodec$Context",
      "org.apache.parquet.hadoop.codec.SnappyCompressor",
      "org.apache.hadoop.io.compress.CompressionOutputStream",
      "org.apache.hadoop.io.compress.CompressorStream",
      "org.apache.parquet.hadoop.codec.NonBlockedCompressorStream",
      "com.pinterest.secor.io.KeyValue",
      "org.apache.hadoop.conf.Configuration$Resource",
      "com.google.common.collect.Interners",
      "com.google.common.collect.GenericMapMaker",
      "com.google.common.collect.MapMaker",
      "com.google.common.collect.Interners$1",
      "com.google.common.collect.Interners$WeakInterner",
      "com.google.common.collect.MapMakerInternalMap$Strength",
      "com.google.common.base.Equivalence",
      "com.google.common.base.Equivalence$Equals",
      "com.google.common.collect.MapMakerInternalMap$1",
      "com.google.common.collect.MapMakerInternalMap$2",
      "com.google.common.collect.MapMakerInternalMap",
      "com.google.common.base.MoreObjects",
      "com.google.common.base.Equivalence$Identity",
      "com.google.common.collect.MapMakerInternalMap$EntryFactory",
      "com.google.common.base.Ticker$1",
      "com.google.common.base.Ticker",
      "com.google.common.collect.GenericMapMaker$NullListener",
      "com.google.common.collect.MapMakerInternalMap$Segment",
      "org.apache.hadoop.util.StringInterner",
      "com.google.common.collect.Interners$WeakInterner$Dummy",
      "com.google.common.collect.MapMakerInternalMap$WeakEntry",
      "com.google.common.collect.MapMakerInternalMap$StrongValueReference",
      "org.apache.hadoop.io.compress.CompressionInputStream",
      "org.apache.hadoop.io.compress.DecompressorStream",
      "org.apache.parquet.hadoop.codec.NonBlockedDecompressorStream",
      "org.apache.commons.configuration.HierarchicalConfiguration",
      "org.apache.commons.configuration.AbstractHierarchicalFileConfiguration",
      "org.apache.commons.configuration.XMLConfiguration",
      "org.apache.commons.configuration.beanutils.DefaultBeanFactory",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$FileConfigurationProvider",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$FileExtensionConfigurationProvider",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$XMLConfigurationProvider",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBuilderProvider",
      "org.apache.commons.configuration.DefaultConfigurationBuilder",
      "org.apache.commons.configuration.tree.DefaultConfigurationNode",
      "org.apache.commons.configuration.HierarchicalConfiguration$Node",
      "org.apache.commons.configuration.tree.DefaultConfigurationNode$SubNodes",
      "org.apache.commons.configuration.AbstractHierarchicalFileConfiguration$FileConfigurationDelegate",
      "org.apache.commons.configuration.XMLConfiguration$XMLFileConfigurationDelegate",
      "org.apache.commons.configuration.resolver.DefaultEntityResolver",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$1",
      "org.apache.commons.configuration.beanutils.BeanHelper",
      "org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBeanFactory",
      "com.google.common.collect.MapMaker$RemovalCause",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.collect.Iterators$1",
      "com.google.common.collect.Iterators$2",
      "com.google.common.collect.Iterators",
      "org.apache.commons.configuration.MultiFileHierarchicalConfiguration$1",
      "org.apache.commons.configuration.MultiFileHierarchicalConfiguration",
      "org.apache.commons.lang.exception.NestableRuntimeException",
      "org.apache.commons.configuration.ConfigurationRuntimeException",
      "org.apache.commons.configuration.DataConfiguration",
      "org.apache.commons.logging.impl.Jdk13LumberjackLogger",
      "org.apache.hadoop.util.Shell$OSType",
      "org.apache.hadoop.util.Shell$ShellCommandExecutor",
      "org.apache.hadoop.util.Time",
      "org.apache.hadoop.util.Shell",
      "org.apache.hadoop.util.StringUtils",
      "org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader",
      "org.apache.commons.configuration.HierarchicalINIConfiguration",
      "org.apache.commons.configuration.PatternSubtreeConfigurationWrapper$1",
      "org.apache.commons.configuration.PatternSubtreeConfigurationWrapper",
      "org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter",
      "org.apache.commons.lang.StringEscapeUtils",
      "org.apache.commons.configuration.reloading.ManagedReloadingStrategy",
      "org.apache.commons.configuration.HierarchicalReloadableConfiguration",
      "org.apache.commons.configuration.tree.DefaultExpressionEngine",
      "org.apache.commons.configuration.tree.NodeCombiner",
      "org.apache.commons.configuration.tree.UnionCombiner",
      "org.apache.commons.configuration.CombinedConfiguration",
      "org.apache.commons.configuration.tree.ViewNode",
      "org.apache.commons.configuration.tree.DefaultConfigurationKey",
      "org.apache.commons.configuration.tree.DefaultConfigurationKey$KeyIterator",
      "org.apache.commons.configuration.DynamicCombinedConfiguration$1",
      "org.apache.commons.configuration.DynamicCombinedConfiguration",
      "org.apache.commons.configuration.tree.ConfigurationNodeVisitorAdapter",
      "org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor",
      "org.apache.commons.configuration.MultiFileHierarchicalConfiguration$2",
      "org.apache.commons.configuration.XMLPropertiesConfiguration$1",
      "org.apache.commons.configuration.XMLPropertiesConfiguration$XMLPropertiesHandler",
      "org.apache.commons.configuration.SubsetConfiguration",
      "org.apache.commons.configuration.HierarchicalConfiguration$DefinedKeysVisitor",
      "org.apache.commons.configuration.tree.MergeCombiner",
      "org.apache.commons.configuration.HierarchicalConfiguration$4",
      "org.apache.commons.configuration.CompositeConfiguration",
      "org.apache.commons.configuration.tree.OverrideCombiner",
      "org.apache.commons.logging.impl.SimpleLog$1",
      "org.apache.commons.logging.impl.SimpleLog",
      "org.codehaus.jackson.JsonParser$Feature",
      "org.codehaus.jackson.JsonGenerator$Feature",
      "org.codehaus.jackson.JsonFactory",
      "org.codehaus.jackson.sym.CharsToNameCanonicalizer",
      "org.codehaus.jackson.sym.BytesToNameCanonicalizer",
      "org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo",
      "org.codehaus.jackson.io.IOContext",
      "org.codehaus.jackson.util.BufferRecycler",
      "org.codehaus.jackson.util.BufferRecycler$ByteBufferType",
      "org.codehaus.jackson.util.BufferRecycler$CharBufferType",
      "org.codehaus.jackson.JsonGenerator",
      "org.codehaus.jackson.impl.JsonGeneratorBase",
      "org.codehaus.jackson.util.CharTypes",
      "org.codehaus.jackson.impl.WriterBasedGenerator",
      "org.codehaus.jackson.JsonStreamContext",
      "org.codehaus.jackson.impl.JsonWriteContext",
      "org.apache.commons.logging.impl.LogKitLogger",
      "org.apache.commons.logging.impl.Jdk14Logger",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.commons.logging.impl.Log4JLogger",
      "org.apache.commons.configuration.HierarchicalConfiguration$3",
      "org.apache.commons.configuration.SubsetConfiguration$SubsetIterator",
      "org.apache.log4j.CategoryKey",
      "org.apache.commons.configuration.SubnodeConfiguration",
      "org.apache.commons.configuration.HierarchicalConfiguration$2",
      "org.apache.commons.configuration.DatabaseConfiguration",
      "org.apache.commons.configuration.ConversionException"
    );
  }
}
