/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 21 07:39:08 GMT 2019
 */

package com.pinterest.secor.uploader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.pinterest.secor.common.FileRegistry;
import com.pinterest.secor.common.LogFilePath;
import com.pinterest.secor.common.OffsetTracker;
import com.pinterest.secor.common.SecorConfig;
import com.pinterest.secor.common.TopicPartition;
import com.pinterest.secor.common.ZookeeperConnector;
import com.pinterest.secor.monitoring.MetricCollector;
import com.pinterest.secor.monitoring.OstrichMetricCollector;
import com.pinterest.secor.uploader.HadoopS3UploadManager;
import com.pinterest.secor.uploader.UploadManager;
import com.pinterest.secor.uploader.Uploader;
import org.apache.commons.configuration.XMLPropertiesConfiguration;
import org.apache.parquet.hadoop.codec.SnappyCodec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Uploader_ESTest extends Uploader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Uploader uploader0 = new Uploader();
      XMLPropertiesConfiguration xMLPropertiesConfiguration0 = new XMLPropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(xMLPropertiesConfiguration0);
      FileRegistry fileRegistry0 = new FileRegistry(secorConfig0);
      HadoopS3UploadManager hadoopS3UploadManager0 = new HadoopS3UploadManager(secorConfig0);
      // Undeclared exception!
      try { 
        uploader0.init(secorConfig0, (OffsetTracker) null, fileRegistry0, (UploadManager) hadoopS3UploadManager0, (ZookeeperConnector) null, (MetricCollector) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to find required configuration option 'secor.kafka.upload_at_minute_mark.topic_filter'.
         //
         verifyException("com.pinterest.secor.common.SecorConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Uploader uploader0 = new Uploader();
      OffsetTracker offsetTracker0 = new OffsetTracker();
      FileRegistry fileRegistry0 = new FileRegistry((SecorConfig) null);
      OstrichMetricCollector ostrichMetricCollector0 = new OstrichMetricCollector();
      // Undeclared exception!
      try { 
        uploader0.init((SecorConfig) null, offsetTracker0, fileRegistry0, (UploadManager) null, (ZookeeperConnector) null, (MetricCollector) ostrichMetricCollector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.uploader.Uploader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileRegistry fileRegistry0 = new FileRegistry((SecorConfig) null);
      Uploader uploader0 = new Uploader();
      HadoopS3UploadManager hadoopS3UploadManager0 = new HadoopS3UploadManager((SecorConfig) null);
      // Undeclared exception!
      try { 
        uploader0.init((SecorConfig) null, (OffsetTracker) null, fileRegistry0, (UploadManager) hadoopS3UploadManager0, (MetricCollector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.common.ZookeeperConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Uploader uploader0 = new Uploader();
      OffsetTracker offsetTracker0 = new OffsetTracker();
      uploader0.mOffsetTracker = offsetTracker0;
      TopicPartition topicPartition0 = new TopicPartition((String) null, 0);
      try { 
        uploader0.uploadFiles(topicPartition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.uploader.Uploader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Uploader uploader0 = new Uploader();
      FileRegistry fileRegistry0 = new FileRegistry((SecorConfig) null);
      uploader0.mFileRegistry = fileRegistry0;
      TopicPartition topicPartition0 = new TopicPartition("location", 0);
      try { 
        uploader0.checkTopicPartition(topicPartition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.common.FileRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Uploader uploader0 = new Uploader();
      TopicPartition topicPartition0 = new TopicPartition("", (-5206));
      try { 
        uploader0.trimFiles(topicPartition0, (-5206));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.uploader.Uploader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Uploader uploader0 = new Uploader();
      XMLPropertiesConfiguration xMLPropertiesConfiguration0 = new XMLPropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(xMLPropertiesConfiguration0);
      OffsetTracker offsetTracker0 = new OffsetTracker();
      // Undeclared exception!
      try { 
        uploader0.init(secorConfig0, offsetTracker0, (FileRegistry) null, (UploadManager) null, (MetricCollector) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.pinterest.secor.common.ZookeeperConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Uploader uploader0 = new Uploader();
      try { 
        uploader0.applyPolicy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.uploader.Uploader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Uploader uploader0 = new Uploader();
      FileRegistry fileRegistry0 = new FileRegistry((SecorConfig) null);
      uploader0.mFileRegistry = fileRegistry0;
      uploader0.applyPolicy();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Uploader uploader0 = new Uploader();
      FileRegistry fileRegistry0 = new FileRegistry((SecorConfig) null);
      uploader0.mFileRegistry = fileRegistry0;
      TopicPartition topicPartition0 = new TopicPartition(" is n3t al array of the specified class (", 0);
      uploader0.trimFiles(topicPartition0, 0);
      assertEquals(" is n3t al array of the specified class (", topicPartition0.getTopic());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SnappyCodec snappyCodec0 = new SnappyCodec();
      Uploader uploader0 = new Uploader();
      try { 
        uploader0.createReader((LogFilePath) null, snappyCodec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.uploader.Uploader", e);
      }
  }
}
