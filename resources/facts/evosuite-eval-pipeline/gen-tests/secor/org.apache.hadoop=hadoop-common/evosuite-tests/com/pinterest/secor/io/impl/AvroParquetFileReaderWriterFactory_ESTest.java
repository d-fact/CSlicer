/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 21 07:22:28 GMT 2019
 */

package com.pinterest.secor.io.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.pinterest.secor.common.SecorConfig;
import com.pinterest.secor.io.impl.AvroParquetFileReaderWriterFactory;
import java.util.LinkedList;
import org.apache.avro.Schema;
import org.apache.avro.generic.GenericRecord;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.specific.SpecificDatumWriter;
import org.apache.commons.configuration.PropertiesConfiguration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AvroParquetFileReaderWriterFactory_ESTest extends AvroParquetFileReaderWriterFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SpecificDatumWriter<GenericRecord> specificDatumWriter0 = new SpecificDatumWriter<GenericRecord>();
      SpecificData specificData0 = SpecificData.get();
      Schema schema0 = specificData0.induce((Object) null);
      specificDatumWriter0.setSchema(schema0);
      byte[] byteArray0 = AvroParquetFileReaderWriterFactory.serializeAvroRecord(specificDatumWriter0, (GenericRecord) null);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SpecificDatumWriter<GenericRecord> specificDatumWriter0 = new SpecificDatumWriter<GenericRecord>();
      Schema schema0 = Schema.createRecord((String) null, "", (String) null, false);
      specificDatumWriter0.setSchema(schema0);
      // Undeclared exception!
      try { 
        AvroParquetFileReaderWriterFactory.serializeAvroRecord(specificDatumWriter0, (GenericRecord) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Schema fields not set yet
         //
         verifyException("org.apache.avro.Schema$RecordSchema", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SpecificDatumWriter<GenericRecord> specificDatumWriter0 = new SpecificDatumWriter<GenericRecord>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Schema schema0 = Schema.createEnum((String) null, "", "", linkedList0);
      specificDatumWriter0.setSchema(schema0);
      // Undeclared exception!
      try { 
        AvroParquetFileReaderWriterFactory.serializeAvroRecord(specificDatumWriter0, (GenericRecord) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not an enum: null
         //
         verifyException("org.apache.avro.generic.GenericDatumWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Schema schema0 = Schema.createArray((Schema) null);
      SpecificDatumWriter<GenericRecord> specificDatumWriter0 = new SpecificDatumWriter<GenericRecord>(schema0);
      // Undeclared exception!
      try { 
        AvroParquetFileReaderWriterFactory.serializeAvroRecord(specificDatumWriter0, (GenericRecord) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null of array
         //
         verifyException("org.apache.avro.generic.GenericDatumWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PropertiesConfiguration propertiesConfiguration0 = new PropertiesConfiguration();
      SecorConfig secorConfig0 = new SecorConfig(propertiesConfiguration0);
      AvroParquetFileReaderWriterFactory avroParquetFileReaderWriterFactory0 = null;
      try {
        avroParquetFileReaderWriterFactory0 = new AvroParquetFileReaderWriterFactory(secorConfig0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Failed to find required configuration option 'schema.registry.url'.
         //
         verifyException("com.pinterest.secor.common.SecorSchemaRegistryClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AvroParquetFileReaderWriterFactory avroParquetFileReaderWriterFactory0 = null;
      try {
        avroParquetFileReaderWriterFactory0 = new AvroParquetFileReaderWriterFactory((SecorConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pinterest.secor.util.ParquetUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SpecificDatumWriter<GenericRecord> specificDatumWriter0 = new SpecificDatumWriter<GenericRecord>();
      // Undeclared exception!
      try { 
        AvroParquetFileReaderWriterFactory.serializeAvroRecord(specificDatumWriter0, (GenericRecord) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.avro.generic.GenericDatumWriter", e);
      }
  }
}
