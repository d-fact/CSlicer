/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 09:51:02 GMT 2019
 */

package org.restheart.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.restheart.utils.ResourcesExtractor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResourcesExtractor_ESTest extends ResourcesExtractor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      File file0 = ResourcesExtractor.extract("");
      file0.mkdirs();
      File file1 = ResourcesExtractor.extract("");
      assertTrue(file1.canRead());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/cgzhu/projects/gitslice/resources/facts/evosuite-eval-pipeline/_downloads/restheart/target/classes");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      File file0 = ResourcesExtractor.extract("");
      assertEquals(0L, file0.getUsableSpace());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourcesExtractor.isResourceInJar((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourcesExtractor.extract((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockFile mockFile0 = new MockFile("*");
      // Undeclared exception!
      try { 
        ResourcesExtractor.deleteTempDir("J", mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      boolean boolean0 = ResourcesExtractor.isResourceInJar("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      try { 
        ResourcesExtractor.extract("2~>Y");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no resource to extract from path 2~>Y
         //
         verifyException("org.restheart.utils.ResourcesExtractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      File file0 = ResourcesExtractor.extract("");
      ResourcesExtractor.deleteTempDir("", file0);
      assertFalse(file0.exists());
  }
}
