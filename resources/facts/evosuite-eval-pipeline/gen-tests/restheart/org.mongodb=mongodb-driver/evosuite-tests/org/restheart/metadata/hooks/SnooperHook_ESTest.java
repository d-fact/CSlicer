/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 10:15:09 GMT 2019
 */

package org.restheart.metadata.hooks;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.undertow.server.HttpServerExchange;
import io.undertow.server.ServerConnection;
import org.bson.BsonDocument;
import org.bson.BsonValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.restheart.handlers.RequestContext;
import org.restheart.metadata.hooks.SnooperHook;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SnooperHook_ESTest extends SnooperHook_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SnooperHook snooperHook0 = new SnooperHook();
      HttpServerExchange httpServerExchange0 = new HttpServerExchange((ServerConnection) null, 0L);
      // Undeclared exception!
      try { 
        snooperHook0.hook(httpServerExchange0, (RequestContext) null, (BsonValue) null, (BsonDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.metadata.hooks.SnooperHook", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SnooperHook snooperHook0 = new SnooperHook();
      boolean boolean0 = snooperHook0.doesSupportRequests((RequestContext) null);
      assertTrue(boolean0);
  }
}
