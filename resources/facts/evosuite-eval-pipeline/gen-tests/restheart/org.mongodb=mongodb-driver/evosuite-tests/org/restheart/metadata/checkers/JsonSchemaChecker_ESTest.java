/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 10:03:28 GMT 2019
 */

package org.restheart.metadata.checkers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.undertow.server.HttpServerExchange;
import io.undertow.server.ServerConnection;
import io.undertow.util.HeaderMap;
import org.bson.BsonBinarySubType;
import org.bson.BsonDocument;
import org.bson.BsonDocumentWrapper;
import org.bson.BsonValue;
import org.bson.RawBsonDocument;
import org.bson.codecs.Codec;
import org.bson.codecs.StringCodec;
import org.bson.codecs.configuration.CodecRegistry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.restheart.handlers.RequestContext;
import org.restheart.metadata.checkers.JsonSchemaChecker;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JsonSchemaChecker_ESTest extends JsonSchemaChecker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JsonSchemaChecker jsonSchemaChecker0 = new JsonSchemaChecker();
      // Undeclared exception!
      try { 
        jsonSchemaChecker0.getPhase((RequestContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.metadata.checkers.JsonSchemaChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JsonSchemaChecker jsonSchemaChecker0 = new JsonSchemaChecker();
      // Undeclared exception!
      try { 
        jsonSchemaChecker0.doesSupportRequests((RequestContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.metadata.checkers.CheckersUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JsonSchemaChecker jsonSchemaChecker0 = new JsonSchemaChecker();
      HeaderMap headerMap0 = new HeaderMap();
      HttpServerExchange httpServerExchange0 = new HttpServerExchange((ServerConnection) null, headerMap0, headerMap0, 3065L);
      byte[] byteArray0 = new byte[7];
      RawBsonDocument rawBsonDocument0 = new RawBsonDocument(byteArray0);
      // Undeclared exception!
      try { 
        jsonSchemaChecker0.check(httpServerExchange0, (RequestContext) null, (BsonDocument) rawBsonDocument0, (BsonValue) rawBsonDocument0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected size to be 0, not 5.
         //
         verifyException("org.bson.BsonBinaryReader$Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JsonSchemaChecker jsonSchemaChecker0 = new JsonSchemaChecker();
      HeaderMap headerMap0 = new HeaderMap();
      HttpServerExchange httpServerExchange0 = new HttpServerExchange((ServerConnection) null, headerMap0, headerMap0, 3065L);
      StringCodec stringCodec0 = new StringCodec();
      CodecRegistry codecRegistry0 = mock(CodecRegistry.class, new ViolatedAssumptionAnswer());
      doReturn(stringCodec0).when(codecRegistry0).get(nullable(java.lang.Class.class));
      BsonDocument bsonDocument0 = BsonDocumentWrapper.asBsonDocument(headerMap0, codecRegistry0);
      // Undeclared exception!
      try { 
        jsonSchemaChecker0.check(httpServerExchange0, (RequestContext) null, bsonDocument0, (BsonValue) bsonDocument0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // io.undertow.util.HeaderMap cannot be cast to java.lang.String
         //
         verifyException("org.bson.codecs.StringCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JsonSchemaChecker jsonSchemaChecker0 = new JsonSchemaChecker();
      HeaderMap headerMap0 = new HeaderMap();
      HttpServerExchange httpServerExchange0 = new HttpServerExchange((ServerConnection) null, headerMap0, headerMap0, 3065L);
      Codec<BsonBinarySubType> codec0 = (Codec<BsonBinarySubType>) mock(Codec.class, new ViolatedAssumptionAnswer());
      CodecRegistry codecRegistry0 = mock(CodecRegistry.class, new ViolatedAssumptionAnswer());
      doReturn(codec0).when(codecRegistry0).get(nullable(java.lang.Class.class));
      BsonDocument bsonDocument0 = BsonDocumentWrapper.asBsonDocument(headerMap0, codecRegistry0);
      // Undeclared exception!
      try { 
        jsonSchemaChecker0.check(httpServerExchange0, (RequestContext) null, bsonDocument0, (BsonValue) bsonDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // missing property 'schemaId' in metadata property 'args'
         //
         verifyException("java.util.Objects", e);
      }
  }
}
