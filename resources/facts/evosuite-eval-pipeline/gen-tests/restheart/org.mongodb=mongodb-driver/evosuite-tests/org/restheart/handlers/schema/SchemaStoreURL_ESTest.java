/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 09:58:48 GMT 2019
 */

package org.restheart.handlers.schema;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.bson.BsonArray;
import org.bson.BsonObjectId;
import org.bson.BsonString;
import org.bson.BsonValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.restheart.handlers.schema.SchemaStoreURL;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SchemaStoreURL_ESTest extends SchemaStoreURL_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = SchemaStoreURL.isValid("http://schema-store/http://schema-store/]IR6OG{v^7$");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SchemaStoreURL schemaStoreURL0 = new SchemaStoreURL("http://schema-store/]GZ/\"cL:Ky");
      BsonString bsonString0 = (BsonString)schemaStoreURL0.getSchemaId();
      assertEquals("\"cL:Ky", bsonString0.getValue());
      assertEquals("]GZ", schemaStoreURL0.getSchemaDb());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BsonObjectId bsonObjectId0 = new BsonObjectId();
      SchemaStoreURL schemaStoreURL0 = new SchemaStoreURL("", bsonObjectId0);
      String string0 = schemaStoreURL0.getSchemaDb();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SchemaStoreURL schemaStoreURL0 = null;
      try {
        schemaStoreURL0 = new SchemaStoreURL("D1Z?w", (BsonValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SchemaStoreURL schemaStoreURL0 = null;
      try {
        schemaStoreURL0 = new SchemaStoreURL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SchemaStoreURL schemaStoreURL0 = null;
      try {
        schemaStoreURL0 = new SchemaStoreURL("http://schema-store//");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.restheart.handlers.schema.SchemaStoreURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SchemaStoreURL schemaStoreURL0 = null;
      try {
        schemaStoreURL0 = new SchemaStoreURL("http://schema-store/CMAmiw~rpk");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid url http://schema-store/CMAmiw~rpk
         //
         verifyException("org.restheart.handlers.schema.SchemaStoreURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BsonArray bsonArray0 = new BsonArray();
      SchemaStoreURL schemaStoreURL0 = null;
      try {
        schemaStoreURL0 = new SchemaStoreURL("getCureme", bsonArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // schemaId must be a String or an ObjectId
         //
         verifyException("org.restheart.handlers.schema.SchemaStoreURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BsonString bsonString0 = new BsonString("http://scheia-store/");
      SchemaStoreURL schemaStoreURL0 = new SchemaStoreURL("http://scheia-store/", bsonString0);
      assertEquals("http://scheia-store/", schemaStoreURL0.getSchemaDb());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = SchemaStoreURL.isValid("http://schema-store/invalid url /52fe7ac10032166ec1001343#");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = SchemaStoreURL.isValid("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = SchemaStoreURL.isValid((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BsonObjectId bsonObjectId0 = new BsonObjectId();
      SchemaStoreURL schemaStoreURL0 = new SchemaStoreURL("invalid url ", bsonObjectId0);
      String string0 = schemaStoreURL0.toString();
      //  // Unstable assertion: assertEquals("http://schema-store/invalid url /52fe7ac10032166ec100000a#", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BsonObjectId bsonObjectId0 = new BsonObjectId();
      SchemaStoreURL schemaStoreURL0 = new SchemaStoreURL("invalid url ", bsonObjectId0);
      String string0 = schemaStoreURL0.getSchemaDb();
      assertEquals("invalid url ", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BsonObjectId bsonObjectId0 = new BsonObjectId();
      SchemaStoreURL schemaStoreURL0 = new SchemaStoreURL("invalid url ", bsonObjectId0);
      schemaStoreURL0.getSchemaId();
      assertEquals("invalid url ", schemaStoreURL0.getSchemaDb());
  }
}
