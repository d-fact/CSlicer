/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 09:48:47 GMT 2019
 */

package org.restheart.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.file.Path;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.restheart.utils.FileUtils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileUtils_ESTest extends FileUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("unexpected content in pid file");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "rA");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Path path0 = FileUtils.getFileAbsoultePath("unexpected content in pid file");
      int int0 = FileUtils.getPidFromFile(path0);
      assertEquals((-2), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Path path0 = FileUtils.getFileAbsoultePath("mvX,*-Gwe^itgkmr5");
      int int0 = FileUtils.getFileAbsoultePathHash(path0);
      assertEquals((-229464578), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getPidFromFile((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "createPidFile() is not supported on windows.";
      try { 
        FileUtils.getConfiguration(stringArray0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // configuration file not found
         //
         verifyException("org.restheart.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        FileUtils.getConfiguration(stringArray0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "pid file not found";
      try { 
        FileUtils.getConfiguration(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // configuration file not found
         //
         verifyException("org.restheart.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getConfiguration((String[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/mongodb/ReadPreference
         //
         verifyException("com.mongodb.MongoClientOptions$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "--fork";
      // Undeclared exception!
      try { 
        FileUtils.getConfigurationFilePath(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Path path0 = FileUtils.getConfigurationFilePath((String[]) null);
      assertNull(path0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getConfiguration((Path) null, false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/mongodb/ReadPreference
         //
         verifyException("com.mongodb.MongoClientOptions$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("unexpected content in pid file");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "unexpected content in pid file");
      Path path0 = FileUtils.getFileAbsoultePath("unexpected content in pid file");
      int int0 = FileUtils.getPidFromFile(path0);
      assertEquals((-3), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = ":2N0\"t>G";
      Path path0 = FileUtils.getConfigurationFilePath(stringArray0);
      // Undeclared exception!
      try { 
        FileUtils.createPidFile(path0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.sun.akuma.CLibrary
         //
         verifyException("org.restheart.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.createPidFile((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.utils.FileUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          // Undeclared exception!
          try { 
            FileUtils.getPidFilePath(1515175);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"/var/run\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // sun.nio.fs.UnixPath.checkWrite(UnixPath.java:801)
             // sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:294)
             // java.nio.file.Files.isAccessible(Files.java:2455)
             // java.nio.file.Files.isWritable(Files.java:2521)
             // org.restheart.utils.FileUtils.getPidFilePath(FileUtils.java:99)
             // sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[11];
      stringArray0[0] = "--fork";
      // Undeclared exception!
      try { 
        FileUtils.getConfiguration(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Path path0 = FileUtils.getConfigurationFilePath(stringArray0);
      assertNull(path0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = ">47icKL{.uvO!63M";
      Path path0 = FileUtils.getConfigurationFilePath(stringArray0);
      try { 
        FileUtils.getConfiguration(path0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // configuration file not found
         //
         verifyException("org.restheart.Configuration", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = FileUtils.getFileAbsoultePathHash((Path) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = " ";
      Path path0 = FileUtils.getConfigurationFilePath(stringArray0);
      int int0 = FileUtils.getFileAbsoultePathHash(path0);
      assertEquals(1800443046, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Path path0 = FileUtils.getFileAbsoultePath((String) null);
      assertNull(path0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Path path0 = FileUtils.getFileAbsoultePath("");
      assertNotNull(path0);
      
      int int0 = FileUtils.getPidFromFile(path0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Path path0 = FileUtils.getTmpDirPath();
      FileUtils.createPidFile(path0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtils.getConfiguration((String[]) null, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/mongodb/ReadPreference
         //
         verifyException("com.mongodb.MongoClientOptions$Builder", e);
      }
  }
}
