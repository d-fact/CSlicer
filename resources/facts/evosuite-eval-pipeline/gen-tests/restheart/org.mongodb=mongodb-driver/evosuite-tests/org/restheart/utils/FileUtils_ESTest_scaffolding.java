/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Aug 22 09:48:47 GMT 2019
 */

package org.restheart.utils;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;

@EvoSuiteClassExclude
public class FileUtils_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  protected static ExecutorService executor; 

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.restheart.utils.FileUtils"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    executor.shutdownNow(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "SG"); 
    java.lang.System.setProperty("user.dir", "/home/cgzhu/projects/gitslice/resources/facts/evosuite-eval-pipeline/gen-tests/restheart/org.mongodb=mongodb-driver"); 
    java.lang.System.setProperty("user.home", "/home/cgzhu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "cgzhu"); 
    java.lang.System.setProperty("user.timezone", "Asia/Singapore"); 
    java.lang.System.setProperty("sun.jnu.encoding", "UTF-8"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FileUtils_ESTest_scaffolding.class.getClassLoader() ,
      "org.yaml.snakeyaml.parser.ParserImpl",
      "org.yaml.snakeyaml.nodes.SequenceNode",
      "org.yaml.snakeyaml.introspector.BeanAccess",
      "org.bson.BsonReaderMark",
      "org.restheart.handlers.RequestContext$REPRESENTATION_FORMAT",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentBoolean",
      "org.yaml.snakeyaml.scanner.ScannerImpl$Chomping",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentList",
      "org.yaml.snakeyaml.nodes.Node",
      "org.yaml.snakeyaml.introspector.MissingProperty",
      "org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject",
      "org.yaml.snakeyaml.composer.Composer",
      "org.yaml.snakeyaml.tokens.FlowMappingStartToken",
      "org.yaml.snakeyaml.constructor.SafeConstructor",
      "org.yaml.snakeyaml.events.SequenceEndEvent",
      "org.yaml.snakeyaml.events.MappingStartEvent",
      "org.restheart.utils.FileUtils",
      "org.yaml.snakeyaml.parser.Parser",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseBlockSequenceFirstEntry",
      "org.bson.codecs.EncoderContext",
      "org.yaml.snakeyaml.parser.Production",
      "org.bson.BsonObjectId",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlBool",
      "org.bson.json.JsonParseException",
      "org.bson.codecs.Decoder",
      "org.yaml.snakeyaml.error.MarkedYAMLException",
      "org.bson.json.ExtendedJsonBinaryConverter",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlFloat",
      "org.yaml.snakeyaml.error.Mark",
      "org.yaml.snakeyaml.events.DocumentEndEvent",
      "org.yaml.snakeyaml.tokens.DocumentEndToken",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseBlockSequenceEntry",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.Escaper",
      "org.bson.BsonDecimal128",
      "org.yaml.snakeyaml.scanner.ScannerImpl",
      "org.bson.BsonWriterSettings",
      "org.yaml.snakeyaml.reader.UnicodeReader",
      "com.mongodb.MongoClientURI",
      "org.bson.json.RelaxedExtendedJsonDateTimeConverter",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlOmap",
      "org.bson.BsonBoolean",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart",
      "org.bson.json.ShellRegularExpressionConverter",
      "org.bson.BsonDocument",
      "org.bson.conversions.Bson",
      "org.bson.BsonInvalidOperationException",
      "org.bson.BsonInt64",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet",
      "org.yaml.snakeyaml.resolver.Resolver",
      "org.bson.json.LegacyExtendedJsonRegularExpressionConverter",
      "org.bson.json.ShellMinKeyConverter",
      "org.bson.json.ShellMaxKeyConverter",
      "org.yaml.snakeyaml.tokens.Token",
      "org.yaml.snakeyaml.events.SequenceStartEvent",
      "org.bson.json.ExtendedJsonInt64Converter",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlMap",
      "org.bson.json.JsonWriterSettings$Builder",
      "org.bson.json.ShellObjectIdConverter",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentContent",
      "org.yaml.snakeyaml.constructor.Constructor",
      "org.yaml.snakeyaml.scanner.ScannerException",
      "org.bson.json.ExtendedJsonDecimal128Converter",
      "org.restheart.Configuration",
      "org.bson.json.JsonStringConverter",
      "org.yaml.snakeyaml.nodes.NodeTuple",
      "org.yaml.snakeyaml.constructor.AbstractConstruct",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceFirstEntry",
      "org.bson.json.StrictJsonWriter",
      "org.yaml.snakeyaml.nodes.CollectionNode",
      "org.bson.BSONException",
      "org.bson.BsonRegularExpression",
      "org.yaml.snakeyaml.util.PlatformFeatureDetector",
      "org.yaml.snakeyaml.parser.VersionTagsTuple",
      "org.yaml.snakeyaml.events.MappingEndEvent",
      "org.bson.diagnostics.Loggers",
      "org.yaml.snakeyaml.DumperOptions$FlowStyle",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue",
      "org.yaml.snakeyaml.events.DocumentStartEvent",
      "org.bson.json.RelaxedExtendedJsonInt64Converter",
      "org.yaml.snakeyaml.tokens.FlowMappingEndToken",
      "org.bson.BsonReader",
      "org.bson.BsonValue",
      "org.yaml.snakeyaml.representer.BaseRepresenter",
      "org.yaml.snakeyaml.tokens.FlowSequenceEndToken",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlBinary",
      "org.bson.json.ShellInt64Converter",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue",
      "org.yaml.snakeyaml.tokens.TagTuple",
      "org.restheart.ConfigurationException",
      "org.bson.json.ExtendedJsonInt32Converter",
      "org.bson.BsonNull",
      "org.yaml.snakeyaml.events.Event$ID",
      "org.yaml.snakeyaml.DumperOptions$LineBreak",
      "org.restheart.handlers.RequestContext$TYPE",
      "org.bson.json.ExtendedJsonMinKeyConverter",
      "org.bson.json.LegacyExtendedJsonDateTimeConverter",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentEnum",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingKey",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentPrimitiveArray",
      "org.bson.codecs.Encoder",
      "org.yaml.snakeyaml.parser.ParserException",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined",
      "org.yaml.snakeyaml.events.CollectionStartEvent",
      "org.bson.json.ExtendedJsonTimestampConverter",
      "org.restheart.utils.OSChecker",
      "org.bson.json.ExtendedJsonObjectIdConverter",
      "io.undertow.security.idm.Account",
      "org.yaml.snakeyaml.DumperOptions$ScalarStyle",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey",
      "org.yaml.snakeyaml.constructor.BaseConstructor",
      "org.bson.json.ExtendedJsonMaxKeyConverter",
      "org.bson.BsonType",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentByteArray",
      "org.yaml.snakeyaml.nodes.MappingNode",
      "org.yaml.snakeyaml.constructor.Constructor$ConstructScalar",
      "org.yaml.snakeyaml.scanner.SimpleKey",
      "org.bson.json.JsonInt32Converter",
      "org.yaml.snakeyaml.tokens.DirectiveToken",
      "org.bson.BsonUndefined",
      "org.yaml.snakeyaml.representer.Represent",
      "org.restheart.handlers.RequestContext$DOC_ID_TYPE",
      "org.bson.codecs.DecoderContext",
      "org.bson.diagnostics.Logger",
      "org.yaml.snakeyaml.tokens.Token$ID",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingValue",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd",
      "org.yaml.snakeyaml.scanner.Scanner",
      "org.bson.json.LegacyExtendedJsonBinaryConverter",
      "org.yaml.snakeyaml.events.NodeEvent",
      "org.bson.json.JsonDoubleConverter",
      "org.bson.json.ExtendedJsonDateTimeConverter",
      "org.bson.BsonInt32",
      "org.yaml.snakeyaml.serializer.NumberAnchorGenerator",
      "org.bson.BsonBinary",
      "org.yaml.snakeyaml.composer.ComposerException",
      "org.yaml.snakeyaml.representer.Representer$RepresentJavaBean",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.PercentEscaper",
      "org.yaml.snakeyaml.events.Event",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt",
      "io.undertow.util.HttpString",
      "org.bson.BsonNumber",
      "org.yaml.snakeyaml.emitter.Emitable",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingFirstKey",
      "org.yaml.snakeyaml.nodes.NodeId",
      "org.bson.json.ShellDecimal128Converter",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentArray",
      "org.bson.BsonDbPointer",
      "org.yaml.snakeyaml.tokens.AnchorToken",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate",
      "org.yaml.snakeyaml.introspector.Property",
      "org.yaml.snakeyaml.DumperOptions$Version",
      "org.yaml.snakeyaml.tokens.StreamStartToken",
      "org.yaml.snakeyaml.constructor.ConstructorException",
      "org.yaml.snakeyaml.introspector.PropertySubstitute",
      "org.yaml.snakeyaml.representer.SafeRepresenter$IteratorWrapper",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNull",
      "org.bson.BsonJavaScriptWithScope",
      "org.bson.BsonWriter",
      "org.yaml.snakeyaml.introspector.PropertyUtils",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingEnd",
      "org.yaml.snakeyaml.events.StreamStartEvent",
      "org.yaml.snakeyaml.error.YAMLException",
      "org.bson.json.ShellDateTimeConverter",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseBlockNode",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper",
      "org.bson.json.JsonWriterSettings",
      "org.bson.codecs.configuration.CodecRegistry",
      "org.bson.BsonString",
      "org.bson.codecs.DecoderContext$Builder",
      "org.bson.BsonMaxKey",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlNull",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlStr",
      "org.yaml.snakeyaml.events.CollectionEndEvent",
      "org.bson.BsonMinKey",
      "org.yaml.snakeyaml.DumperOptions",
      "org.bson.BsonDateTime",
      "org.bson.json.ShellTimestampConverter",
      "org.bson.json.JsonMode",
      "org.bson.json.Converter",
      "com.mongodb.MongoClientOptions",
      "org.restheart.Configuration$METRICS_GATHERING_LEVEL",
      "org.bson.types.Decimal128",
      "org.yaml.snakeyaml.constructor.Constructor$ConstructMapping",
      "org.yaml.snakeyaml.tokens.ScalarToken",
      "org.bson.json.ExtendedJsonDoubleConverter",
      "org.yaml.snakeyaml.LoaderOptions",
      "org.yaml.snakeyaml.resolver.ResolverTuple",
      "org.bson.BsonDouble",
      "org.bson.BsonJavaScript",
      "org.yaml.snakeyaml.tokens.TagToken",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue",
      "org.yaml.snakeyaml.nodes.ScalarNode",
      "org.bson.types.ObjectId",
      "org.yaml.snakeyaml.TypeDescription",
      "org.yaml.snakeyaml.events.AliasEvent",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet",
      "org.bson.json.JsonNullConverter",
      "org.yaml.snakeyaml.constructor.Constructor$ConstructSequence",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSeq",
      "org.yaml.snakeyaml.reader.ReaderException",
      "org.yaml.snakeyaml.tokens.DocumentStartToken",
      "org.yaml.snakeyaml.util.UriEncoder",
      "org.bson.BsonSymbol",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$2",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey",
      "org.bson.json.ExtendedJsonUndefinedConverter",
      "org.yaml.snakeyaml.tokens.FlowSequenceStartToken",
      "org.bson.BsonArray",
      "org.bson.diagnostics.SLF4JLogger",
      "org.bson.assertions.Assertions",
      "org.restheart.handlers.RequestContext",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart",
      "org.yaml.snakeyaml.constructor.Construct",
      "org.bson.json.ShellUndefinedConverter",
      "org.yaml.snakeyaml.scanner.Constant",
      "org.yaml.snakeyaml.representer.SafeRepresenter",
      "com.mongodb.MongoClientOptions$Builder",
      "org.yaml.snakeyaml.tokens.AliasToken",
      "org.bson.codecs.Codec",
      "org.bson.json.RelaxedExtendedJsonDoubleConverter",
      "org.bson.codecs.EncoderContext$Builder",
      "org.restheart.handlers.RequestContext$METHOD",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseStreamStart",
      "org.yaml.snakeyaml.serializer.AnchorGenerator",
      "org.yaml.snakeyaml.tokens.StreamEndToken",
      "org.restheart.handlers.RequestContext$HAL_MODE",
      "org.restheart.handlers.RequestContext$ETAG_CHECK_POLICY",
      "org.bson.json.ExtendedJsonRegularExpressionConverter",
      "org.yaml.snakeyaml.representer.BaseRepresenter$1",
      "org.yaml.snakeyaml.Yaml",
      "org.bson.json.JsonSymbolConverter",
      "org.yaml.snakeyaml.resolver.Resolver$1",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingFirstKey",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentIterator",
      "org.bson.BsonTimestamp",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntry",
      "org.yaml.snakeyaml.events.StreamEndEvent",
      "org.restheart.db.OperationResult",
      "org.yaml.snakeyaml.nodes.Tag",
      "org.yaml.snakeyaml.util.ArrayStack",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentUuid",
      "org.yaml.snakeyaml.events.ImplicitTuple",
      "org.restheart.db.CursorPool$EAGER_CURSOR_ALLOCATION_POLICY",
      "org.bson.json.JsonBooleanConverter",
      "org.yaml.snakeyaml.representer.Representer",
      "org.yaml.snakeyaml.reader.StreamReader",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry",
      "org.bson.json.ShellBinaryConverter",
      "org.yaml.snakeyaml.events.ScalarEvent"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FileUtils_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.restheart.utils.FileUtils",
      "org.restheart.utils.OSChecker",
      "org.restheart.handlers.RequestContext$REPRESENTATION_FORMAT",
      "org.restheart.handlers.RequestContext$ETAG_CHECK_POLICY",
      "org.restheart.Configuration",
      "org.yaml.snakeyaml.Yaml",
      "org.yaml.snakeyaml.constructor.BaseConstructor",
      "org.yaml.snakeyaml.constructor.AbstractConstruct",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined",
      "org.yaml.snakeyaml.constructor.SafeConstructor",
      "org.yaml.snakeyaml.constructor.Constructor",
      "org.yaml.snakeyaml.TypeDescription",
      "org.yaml.snakeyaml.nodes.NodeId",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$2",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper",
      "org.yaml.snakeyaml.external.com.google.gdata.util.common.base.PercentEscaper",
      "org.yaml.snakeyaml.util.UriEncoder",
      "org.yaml.snakeyaml.nodes.Tag",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlNull",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlBool",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlFloat",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlBinary",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlOmap",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlStr",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSeq",
      "org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlMap",
      "org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject",
      "org.yaml.snakeyaml.constructor.Constructor$ConstructScalar",
      "org.yaml.snakeyaml.constructor.Constructor$ConstructMapping",
      "org.yaml.snakeyaml.constructor.Constructor$ConstructSequence",
      "org.yaml.snakeyaml.introspector.PropertyUtils",
      "org.yaml.snakeyaml.util.PlatformFeatureDetector",
      "org.yaml.snakeyaml.introspector.BeanAccess",
      "org.yaml.snakeyaml.representer.BaseRepresenter",
      "org.yaml.snakeyaml.representer.SafeRepresenter",
      "org.yaml.snakeyaml.representer.Representer",
      "org.yaml.snakeyaml.DumperOptions$FlowStyle",
      "org.yaml.snakeyaml.representer.BaseRepresenter$1",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNull",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentBoolean",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentUuid",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentByteArray",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentPrimitiveArray",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentList",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentIterator",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentArray",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate",
      "org.yaml.snakeyaml.representer.SafeRepresenter$RepresentEnum",
      "org.yaml.snakeyaml.representer.Representer$RepresentJavaBean",
      "org.yaml.snakeyaml.DumperOptions",
      "org.yaml.snakeyaml.DumperOptions$ScalarStyle",
      "org.yaml.snakeyaml.DumperOptions$LineBreak",
      "org.yaml.snakeyaml.serializer.NumberAnchorGenerator",
      "org.yaml.snakeyaml.LoaderOptions",
      "org.yaml.snakeyaml.resolver.Resolver",
      "org.yaml.snakeyaml.resolver.ResolverTuple",
      "org.restheart.ConfigurationException",
      "com.mongodb.MongoClientURI",
      "com.mongodb.MongoClientOptions$Builder",
      "org.yaml.snakeyaml.reader.StreamReader",
      "org.yaml.snakeyaml.reader.UnicodeReader",
      "org.yaml.snakeyaml.composer.Composer",
      "org.yaml.snakeyaml.parser.ParserImpl",
      "org.yaml.snakeyaml.scanner.ScannerImpl",
      "org.yaml.snakeyaml.util.ArrayStack",
      "org.yaml.snakeyaml.error.Mark",
      "org.yaml.snakeyaml.tokens.Token",
      "org.yaml.snakeyaml.tokens.StreamStartToken",
      "org.yaml.snakeyaml.parser.VersionTagsTuple",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseStreamStart",
      "org.yaml.snakeyaml.events.Event",
      "org.yaml.snakeyaml.events.StreamStartEvent",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart",
      "org.yaml.snakeyaml.events.Event$ID",
      "org.yaml.snakeyaml.tokens.Token$ID",
      "org.yaml.snakeyaml.scanner.Constant",
      "org.yaml.snakeyaml.scanner.SimpleKey",
      "org.yaml.snakeyaml.tokens.ScalarToken",
      "org.yaml.snakeyaml.events.DocumentStartEvent",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseBlockNode",
      "org.yaml.snakeyaml.events.ImplicitTuple",
      "org.yaml.snakeyaml.events.NodeEvent",
      "org.yaml.snakeyaml.events.ScalarEvent",
      "org.yaml.snakeyaml.resolver.Resolver$1",
      "org.yaml.snakeyaml.nodes.Node",
      "org.yaml.snakeyaml.nodes.ScalarNode",
      "org.yaml.snakeyaml.tokens.StreamEndToken",
      "org.yaml.snakeyaml.events.DocumentEndEvent",
      "org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart",
      "org.yaml.snakeyaml.events.StreamEndEvent",
      "org.yaml.snakeyaml.error.YAMLException",
      "org.yaml.snakeyaml.error.MarkedYAMLException",
      "org.yaml.snakeyaml.scanner.ScannerException",
      "org.yaml.snakeyaml.reader.ReaderException"
    );
  }
}
