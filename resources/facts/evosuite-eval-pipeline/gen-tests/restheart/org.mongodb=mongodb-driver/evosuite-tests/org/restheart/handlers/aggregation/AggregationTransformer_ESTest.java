/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 08:50:50 GMT 2019
 */

package org.restheart.handlers.aggregation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.undertow.server.HttpServerExchange;
import org.bson.BsonDocument;
import org.bson.BsonDocumentWrapper;
import org.bson.BsonObjectId;
import org.bson.BsonString;
import org.bson.BsonValue;
import org.bson.codecs.Codec;
import org.bson.codecs.configuration.CodecRegistry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.restheart.handlers.RequestContext;
import org.restheart.handlers.aggregation.AggregationTransformer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AggregationTransformer_ESTest extends AggregationTransformer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AggregationTransformer aggregationTransformer0 = new AggregationTransformer();
      Codec<AggregationTransformer> codec0 = (Codec<AggregationTransformer>) mock(Codec.class, new ViolatedAssumptionAnswer());
      CodecRegistry codecRegistry0 = mock(CodecRegistry.class, new ViolatedAssumptionAnswer());
      doReturn(codec0).when(codecRegistry0).get(nullable(java.lang.Class.class));
      BsonDocument bsonDocument0 = BsonDocumentWrapper.asBsonDocument(aggregationTransformer0, codecRegistry0);
      // Undeclared exception!
      try { 
        aggregationTransformer0.transform((HttpServerExchange) null, (RequestContext) null, (BsonValue) bsonDocument0, (BsonValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.handlers.aggregation.AggregationTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AggregationTransformer aggregationTransformer0 = new AggregationTransformer();
      BsonString bsonString0 = new BsonString("rh:coll");
      aggregationTransformer0.transform((HttpServerExchange) null, (RequestContext) null, (BsonValue) null, (BsonValue) bsonString0, (BsonValue) null);
      assertFalse(bsonString0.isNumber());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AggregationTransformer aggregationTransformer0 = new AggregationTransformer();
      aggregationTransformer0.transform((HttpServerExchange) null, (RequestContext) null, (BsonValue) null, (BsonValue) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AggregationTransformer aggregationTransformer0 = new AggregationTransformer();
      BsonObjectId bsonObjectId0 = new BsonObjectId();
      // Undeclared exception!
      try { 
        aggregationTransformer0.transform((HttpServerExchange) null, (RequestContext) null, (BsonValue) bsonObjectId0, (BsonValue) bsonObjectId0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // content to transform is not a document
         //
         verifyException("org.restheart.handlers.aggregation.AggregationTransformer", e);
      }
  }
}
