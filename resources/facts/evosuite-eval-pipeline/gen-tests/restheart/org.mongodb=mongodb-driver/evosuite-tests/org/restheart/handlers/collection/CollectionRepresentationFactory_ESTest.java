/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 10:26:02 GMT 2019
 */

package org.restheart.handlers.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.undertow.server.HttpServerExchange;
import io.undertow.server.ServerConnection;
import io.undertow.util.HeaderMap;
import java.util.Vector;
import org.bson.BsonDocument;
import org.bson.BsonDocumentWrapper;
import org.bson.codecs.Codec;
import org.bson.codecs.StringCodec;
import org.bson.codecs.configuration.CodecRegistry;
import org.bson.types.ObjectId;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.restheart.hal.Representation;
import org.restheart.handlers.RequestContext;
import org.restheart.handlers.collection.CollectionRepresentationFactory;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CollectionRepresentationFactory_ESTest extends CollectionRepresentationFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CollectionRepresentationFactory collectionRepresentationFactory0 = new CollectionRepresentationFactory();
      HttpServerExchange httpServerExchange0 = new HttpServerExchange((ServerConnection) null, (HeaderMap) null, (HeaderMap) null, (-903L));
      Vector<BsonDocument> vector0 = new Vector<BsonDocument>();
      // Undeclared exception!
      try { 
        collectionRepresentationFactory0.getRepresentation(httpServerExchange0, (RequestContext) null, vector0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.handlers.collection.CollectionRepresentationFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Representation representation0 = new Representation();
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.TYPE.ROOT;
      ObjectId objectId0 = new ObjectId();
      CodecRegistry codecRegistry0 = mock(CodecRegistry.class, new ViolatedAssumptionAnswer());
      doReturn((Codec) null).when(codecRegistry0).get(nullable(java.lang.Class.class));
      BsonDocument bsonDocument0 = BsonDocumentWrapper.asBsonDocument(objectId0, codecRegistry0);
      // Undeclared exception!
      try { 
        CollectionRepresentationFactory.addSpecialProperties(representation0, requestContext_TYPE0, bsonDocument0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can not unwrap a BsonDocumentWrapper with no Encoder
         //
         verifyException("org.bson.BsonDocumentWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.TYPE.SCHEMA;
      BsonDocument bsonDocument0 = new BsonDocument();
      // Undeclared exception!
      try { 
        CollectionRepresentationFactory.addSpecialProperties((Representation) null, requestContext_TYPE0, bsonDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.handlers.collection.CollectionRepresentationFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Representation representation0 = new Representation();
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.TYPE.DB;
      ObjectId objectId0 = new ObjectId();
      StringCodec stringCodec0 = new StringCodec();
      CodecRegistry codecRegistry0 = mock(CodecRegistry.class, new ViolatedAssumptionAnswer());
      doReturn(stringCodec0).when(codecRegistry0).get(nullable(java.lang.Class.class));
      BsonDocument bsonDocument0 = BsonDocumentWrapper.asBsonDocument(objectId0, codecRegistry0);
      // Undeclared exception!
      try { 
        CollectionRepresentationFactory.addSpecialProperties(representation0, requestContext_TYPE0, bsonDocument0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.bson.types.ObjectId cannot be cast to java.lang.String
         //
         verifyException("org.bson.codecs.StringCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Representation representation0 = new Representation();
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.TYPE.FILE;
      BsonDocument bsonDocument0 = new BsonDocument();
      CollectionRepresentationFactory.addSpecialProperties(representation0, requestContext_TYPE0, bsonDocument0);
      assertFalse(bsonDocument0.isTimestamp());
  }
}
