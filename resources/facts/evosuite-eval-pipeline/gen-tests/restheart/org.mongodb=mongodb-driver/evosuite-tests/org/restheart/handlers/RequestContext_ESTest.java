/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 08:40:03 GMT 2019
 */

package org.restheart.handlers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.undertow.server.HttpServerExchange;
import io.undertow.server.ServerConnection;
import io.undertow.util.HttpString;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.restheart.handlers.RequestContext;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RequestContext_ESTest extends RequestContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        RequestContext.selectRequestMethod((HttpString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.handlers.RequestContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        RequestContext.isReservedResourceDb((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HttpServerExchange httpServerExchange0 = new HttpServerExchange((ServerConnection) null);
      RequestContext requestContext0 = null;
      try {
        requestContext0 = new RequestContext(httpServerExchange0, "JCh9AWqAfim@ ", "JCh9AWqAfim@ ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HttpServerExchange httpServerExchange0 = new HttpServerExchange((ServerConnection) null);
      RequestContext requestContext0 = null;
      try {
        requestContext0 = new RequestContext(httpServerExchange0, "?rnN7:;", "checkEtag.files");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.handlers.RequestContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RequestContext requestContext0 = null;
      try {
        requestContext0 = new RequestContext((HttpServerExchange) null, "/Pp9#hY#", "/Pp9#hY#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.handlers.RequestContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RequestContext requestContext0 = null;
      try {
        requestContext0 = new RequestContext((HttpServerExchange) null, "/# [>Qu<", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.handlers.RequestContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RequestContext requestContext0 = null;
      try {
        requestContext0 = new RequestContext((HttpServerExchange) null, (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.handlers.RequestContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.TYPE.COLLECTION_INDEXES;
      boolean boolean0 = RequestContext.isReservedResourceDocument(requestContext_TYPE0, "_schemas");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.TYPE.COLLECTION_INDEXES;
      boolean boolean0 = RequestContext.isReservedResourceDocument(requestContext_TYPE0, "_minkey");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.TYPE.FILES_BUCKET;
      boolean boolean0 = RequestContext.isReservedResourceDocument(requestContext_TYPE0, (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.TYPE.DB;
      boolean boolean0 = RequestContext.isReservedResourceDocument(requestContext_TYPE0, "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = RequestContext.isReservedResourceCollection("# [>Qu</:");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = RequestContext.isReservedResourceCollection("_schemas");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = RequestContext.isReservedResourceCollection("_MinKey");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = RequestContext.isReservedResourceCollection((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = RequestContext.isReservedResourceDb("org.bson.json.ExtendedJsonMinKeyConverter");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[2] = "JCh9AWqAfim@ ";
      stringArray0[3] = "";
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.selectRequestType(stringArray0);
      assertEquals(RequestContext.TYPE.DOCUMENT, requestContext_TYPE0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[3] = "*";
      stringArray0[2] = "";
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.selectRequestType(stringArray0);
      assertEquals(RequestContext.TYPE.BULK_DOCUMENTS, requestContext_TYPE0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[2] = "checkEtag";
      stringArray0[3] = "q8(!K}Vj2jR<Sa~pDJ0";
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.selectRequestType(stringArray0);
      assertEquals(RequestContext.TYPE.DOCUMENT, requestContext_TYPE0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[2] = "JCh9AWqAfim@ ";
      // Undeclared exception!
      try { 
        RequestContext.selectRequestType(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[2] = "";
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.selectRequestType(stringArray0);
      assertEquals(RequestContext.TYPE.COLLECTION, requestContext_TYPE0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[2] = "checkEtag.files";
      stringArray0[3] = "q8(!K}Vj2jR<SaZ~pDJ0";
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.selectRequestType(stringArray0);
      assertEquals(RequestContext.TYPE.FILE, requestContext_TYPE0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[0];
      RequestContext.TYPE requestContext_TYPE0 = RequestContext.selectRequestType(stringArray0);
      assertEquals(RequestContext.TYPE.ROOT, requestContext_TYPE0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HttpString httpString0 = HttpString.EMPTY;
      RequestContext.METHOD requestContext_METHOD0 = RequestContext.selectRequestMethod(httpString0);
      assertEquals(RequestContext.METHOD.OTHER, requestContext_METHOD0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HttpServerExchange httpServerExchange0 = new HttpServerExchange((ServerConnection) null, (-1013L));
      RequestContext requestContext0 = null;
      try {
        requestContext0 = new RequestContext(httpServerExchange0, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.handlers.RequestContext", e);
      }
  }
}
