/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 10:29:33 GMT 2019
 */

package org.restheart.security.handlers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.undertow.security.api.AuthenticationMode;
import io.undertow.security.api.SecurityContext;
import io.undertow.security.api.SecurityContextFactory;
import io.undertow.security.idm.IdentityManager;
import io.undertow.server.HttpServerExchange;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.restheart.handlers.PipedHttpHandler;
import org.restheart.security.handlers.SecurityInitialHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SecurityInitialHandler_ESTest extends SecurityInitialHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        SecurityInitialHandler.setSecurityContext((HttpServerExchange) null, (SecurityContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.restheart.security.handlers.SecurityInitialHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AuthenticationMode authenticationMode0 = AuthenticationMode.CONSTRAINT_DRIVEN;
      SecurityInitialHandler securityInitialHandler0 = null;
      try {
        securityInitialHandler0 = new SecurityInitialHandler(authenticationMode0, (IdentityManager) null, (PipedHttpHandler) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.restheart.db.DbsDAO
         //
         verifyException("org.restheart.handlers.PipedHttpHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AuthenticationMode authenticationMode0 = AuthenticationMode.CONSTRAINT_DRIVEN;
      SecurityInitialHandler securityInitialHandler0 = null;
      try {
        securityInitialHandler0 = new SecurityInitialHandler(authenticationMode0, (IdentityManager) null, "lG4-^mNBB$ :R", (PipedHttpHandler) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.restheart.db.DbsDAO
         //
         verifyException("org.restheart.handlers.PipedHttpHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AuthenticationMode authenticationMode0 = AuthenticationMode.CONSTRAINT_DRIVEN;
      SecurityContextFactory securityContextFactory0 = mock(SecurityContextFactory.class, new ViolatedAssumptionAnswer());
      SecurityInitialHandler securityInitialHandler0 = null;
      try {
        securityInitialHandler0 = new SecurityInitialHandler(authenticationMode0, (IdentityManager) null, "Rns(df-=PP", securityContextFactory0, (PipedHttpHandler) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.restheart.db.DbsDAO
         //
         verifyException("org.restheart.handlers.PipedHttpHandler", e);
      }
  }
}
