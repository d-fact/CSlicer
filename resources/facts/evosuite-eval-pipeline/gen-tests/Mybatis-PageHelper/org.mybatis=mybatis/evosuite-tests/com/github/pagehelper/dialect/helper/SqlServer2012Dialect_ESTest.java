/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 10:01:18 GMT 2019
 */

package com.github.pagehelper.dialect.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.pagehelper.Page;
import com.github.pagehelper.dialect.helper.SqlServer2012Dialect;
import java.util.HashMap;
import java.util.List;
import org.apache.ibatis.cache.CacheKey;
import org.apache.ibatis.cache.NullCacheKey;
import org.apache.ibatis.mapping.BoundSql;
import org.apache.ibatis.mapping.Environment;
import org.apache.ibatis.mapping.MappedStatement;
import org.apache.ibatis.mapping.ParameterMapping;
import org.apache.ibatis.session.Configuration;
import org.apache.ibatis.transaction.TransactionFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.hsqldb.jdbc.JDBCPool;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SqlServer2012Dialect_ESTest extends SqlServer2012Dialect_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SqlServer2012Dialect sqlServer2012Dialect0 = new SqlServer2012Dialect();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Page<MockFileInputStream> page0 = new Page<MockFileInputStream>();
      Configuration configuration0 = new Configuration();
      Page<ParameterMapping> page1 = new Page<ParameterMapping>((-1244), (-1244));
      BoundSql boundSql0 = new BoundSql(configuration0, "", page1, (Object) null);
      NullCacheKey nullCacheKey0 = (NullCacheKey)CacheKey.NULL_CACHE_KEY;
      // Undeclared exception!
      try { 
        sqlServer2012Dialect0.processPageParameter((MappedStatement) null, hashMap0, page0, boundSql0, nullCacheKey0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not allowed to update a NullCacheKey instance.
         //
         verifyException("org.apache.ibatis.cache.NullCacheKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SqlServer2012Dialect sqlServer2012Dialect0 = new SqlServer2012Dialect();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Page<MockFileInputStream> page0 = new Page<MockFileInputStream>();
      CacheKey cacheKey0 = new CacheKey();
      // Undeclared exception!
      try { 
        sqlServer2012Dialect0.processPageParameter((MappedStatement) null, hashMap0, page0, (BoundSql) null, cacheKey0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.pagehelper.dialect.AbstractHelperDialect", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SqlServer2012Dialect sqlServer2012Dialect0 = new SqlServer2012Dialect();
      Page<Object> page0 = new Page<Object>(460, 460, true);
      NullCacheKey nullCacheKey0 = (NullCacheKey)CacheKey.NULL_CACHE_KEY;
      // Undeclared exception!
      try { 
        sqlServer2012Dialect0.getPageSql("y", (Page) page0, (CacheKey) nullCacheKey0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not allowed to update a NullCacheKey instance.
         //
         verifyException("org.apache.ibatis.cache.NullCacheKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SqlServer2012Dialect sqlServer2012Dialect0 = new SqlServer2012Dialect();
      Object[] objectArray0 = new Object[4];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      // Undeclared exception!
      try { 
        sqlServer2012Dialect0.getPageSql("q0oe8'1+|TG*2", (Page) null, cacheKey0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.pagehelper.dialect.helper.SqlServer2012Dialect", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SqlServer2012Dialect sqlServer2012Dialect0 = new SqlServer2012Dialect();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Page<MockFileInputStream> page0 = new Page<MockFileInputStream>();
      Boolean boolean0 = new Boolean("]U!2_HK@-=*oKt");
      TransactionFactory transactionFactory0 = mock(TransactionFactory.class, new ViolatedAssumptionAnswer());
      JDBCPool jDBCPool0 = new JDBCPool();
      Environment environment0 = new Environment("]U!2_HK@-=*oKt", transactionFactory0, jDBCPool0);
      Configuration configuration0 = new Configuration(environment0);
      BoundSql boundSql0 = new BoundSql(configuration0, "]U!2_HK@-=*oKt", (List<ParameterMapping>) null, boolean0);
      Object[] objectArray0 = new Object[1];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      HashMap hashMap1 = (HashMap)sqlServer2012Dialect0.processPageParameter((MappedStatement) null, hashMap0, page0, boundSql0, cacheKey0);
      assertEquals(2, hashMap1.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SqlServer2012Dialect sqlServer2012Dialect0 = new SqlServer2012Dialect();
      Page<MockFileInputStream> page0 = new Page<MockFileInputStream>();
      Object[] objectArray0 = new Object[1];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      String string0 = sqlServer2012Dialect0.getPageSql("]U!2_HK@-=*oKt", page0, cacheKey0);
      assertEquals("]U!2_HK@-=*oKt OFFSET ? ROWS FETCH NEXT ? ROWS ONLY ", string0);
  }
}
