/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 09:44:59 GMT 2019
 */

package com.github.pagehelper.dialect.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.pagehelper.Page;
import com.github.pagehelper.dialect.helper.Db2Dialect;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import org.apache.ibatis.cache.CacheKey;
import org.apache.ibatis.cache.NullCacheKey;
import org.apache.ibatis.mapping.BoundSql;
import org.apache.ibatis.mapping.MappedStatement;
import org.apache.ibatis.mapping.ParameterMapping;
import org.apache.ibatis.session.Configuration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Db2Dialect_ESTest extends Db2Dialect_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Db2Dialect db2Dialect0 = new Db2Dialect();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Page<ParameterMapping> page0 = new Page<ParameterMapping>((-445), 0);
      NullCacheKey nullCacheKey0 = (NullCacheKey)CacheKey.NULL_CACHE_KEY;
      // Undeclared exception!
      try { 
        db2Dialect0.processPageParameter((MappedStatement) null, hashMap0, page0, (BoundSql) null, nullCacheKey0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not allowed to update a NullCacheKey instance.
         //
         verifyException("org.apache.ibatis.cache.NullCacheKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Db2Dialect db2Dialect0 = new Db2Dialect();
      Page<Object> page0 = new Page<Object>();
      Configuration configuration0 = new Configuration();
      LinkedList<ParameterMapping> linkedList0 = new LinkedList<ParameterMapping>();
      BoundSql boundSql0 = new BoundSql(configuration0, "", linkedList0, db2Dialect0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        db2Dialect0.processPageParameter((MappedStatement) null, hashMap0, page0, boundSql0, (CacheKey) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.pagehelper.dialect.helper.Db2Dialect", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Db2Dialect db2Dialect0 = new Db2Dialect();
      int[] intArray0 = new int[7];
      Page<String> page0 = new Page<String>(intArray0, false);
      NullCacheKey nullCacheKey0 = (NullCacheKey)CacheKey.NULL_CACHE_KEY;
      // Undeclared exception!
      try { 
        db2Dialect0.getPageSql((String) null, (Page) page0, (CacheKey) nullCacheKey0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.pagehelper.dialect.helper.Db2Dialect", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Db2Dialect db2Dialect0 = new Db2Dialect();
      NullCacheKey nullCacheKey0 = (NullCacheKey)CacheKey.NULL_CACHE_KEY;
      String string0 = db2Dialect0.getPageSql("First_PageHelper", (Page) null, (CacheKey) nullCacheKey0);
      assertEquals("SELECT * FROM (SELECT TMP_PAGE.*,ROWNUMBER() OVER() AS ROW_ID FROM ( First_PageHelper ) AS TMP_PAGE) TMP_PAGE WHERE ROW_ID BETWEEN ? AND ?", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Db2Dialect db2Dialect0 = new Db2Dialect();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Page<Object> page0 = new Page<Object>();
      Configuration configuration0 = new Configuration();
      Object[] objectArray0 = new Object[9];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      BoundSql boundSql0 = new BoundSql(configuration0, "bH\"cbq;;a&0#I", (List<ParameterMapping>) null, objectArray0[1]);
      HashMap hashMap1 = (HashMap)db2Dialect0.processPageParameter((MappedStatement) null, hashMap0, page0, boundSql0, cacheKey0);
      assertFalse(hashMap1.isEmpty());
  }
}
