/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 09:37:24 GMT 2019
 */

package com.github.pagehelper.dialect.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.pagehelper.Page;
import com.github.pagehelper.dialect.helper.OracleDialect;
import java.util.HashMap;
import java.util.List;
import org.apache.ibatis.cache.CacheKey;
import org.apache.ibatis.cache.NullCacheKey;
import org.apache.ibatis.mapping.BoundSql;
import org.apache.ibatis.mapping.Environment;
import org.apache.ibatis.mapping.MappedStatement;
import org.apache.ibatis.mapping.ParameterMapping;
import org.apache.ibatis.session.Configuration;
import org.apache.ibatis.transaction.TransactionFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hsqldb.jdbc.JDBCPool;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OracleDialect_ESTest extends OracleDialect_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OracleDialect oracleDialect0 = new OracleDialect();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      int[] intArray0 = new int[5];
      Page<Integer> page0 = new Page<Integer>(intArray0, false);
      Configuration configuration0 = new Configuration();
      BoundSql boundSql0 = new BoundSql(configuration0, "", (List<ParameterMapping>) null, "");
      Object[] objectArray0 = new Object[0];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      HashMap hashMap1 = (HashMap)oracleDialect0.processPageParameter((MappedStatement) null, hashMap0, page0, boundSql0, cacheKey0);
      assertFalse(hashMap1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OracleDialect oracleDialect0 = new OracleDialect();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Page<String> page0 = new Page<String>();
      NullCacheKey nullCacheKey0 = (NullCacheKey)CacheKey.NULL_CACHE_KEY;
      // Undeclared exception!
      try { 
        oracleDialect0.processPageParameter((MappedStatement) null, hashMap0, page0, (BoundSql) null, nullCacheKey0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not allowed to update a NullCacheKey instance.
         //
         verifyException("org.apache.ibatis.cache.NullCacheKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OracleDialect oracleDialect0 = new OracleDialect();
      Page<Integer> page0 = new Page<Integer>();
      NullCacheKey nullCacheKey0 = (NullCacheKey)CacheKey.NULL_CACHE_KEY;
      // Undeclared exception!
      try { 
        oracleDialect0.getPageSql((String) null, (Page) page0, (CacheKey) nullCacheKey0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.pagehelper.dialect.helper.OracleDialect", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OracleDialect oracleDialect0 = new OracleDialect();
      Object[] objectArray0 = new Object[0];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      TransactionFactory transactionFactory0 = mock(TransactionFactory.class, new ViolatedAssumptionAnswer());
      JDBCPool jDBCPool0 = new JDBCPool(1125);
      Environment environment0 = new Environment("", transactionFactory0, jDBCPool0);
      Configuration configuration0 = new Configuration(environment0);
      Page<ParameterMapping> page0 = new Page<ParameterMapping>();
      Integer integer0 = new Integer((-2522));
      BoundSql boundSql0 = new BoundSql(configuration0, "SELECT * FROM (  SELECT TMP_PAGE.*, ROWNUM ROW_ID FROM (  ) TMP_PAGE) WHERE ROW_ID <= ? AND ROW_ID > ?", page0, integer0);
      // Undeclared exception!
      try { 
        oracleDialect0.processPageParameter((MappedStatement) null, hashMap0, (Page) null, boundSql0, cacheKey0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.pagehelper.dialect.helper.OracleDialect", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OracleDialect oracleDialect0 = new OracleDialect();
      Object[] objectArray0 = new Object[0];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      String string0 = oracleDialect0.getPageSql("", (Page) null, cacheKey0);
      assertEquals("SELECT * FROM (  SELECT TMP_PAGE.*, ROWNUM ROW_ID FROM (  ) TMP_PAGE) WHERE ROW_ID <= ? AND ROW_ID > ?", string0);
  }
}
