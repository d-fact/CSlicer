/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 09:35:05 GMT 2019
 */

package com.github.pagehelper.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.pagehelper.cache.Cache;
import com.github.pagehelper.cache.CacheFactory;
import com.github.pagehelper.cache.SimpleCache;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CacheFactory_ESTest extends CacheFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        CacheFactory.createCache(".lck", ".script", properties0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Created Sql Cache [.lck] Error
         //
         verifyException("com.github.pagehelper.cache.CacheFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Properties properties0 = new Properties();
      Cache<String, SimpleCache<Integer, Properties>> cache0 = CacheFactory.createCache("com.github.pagehelper.cache.SimpleCache", "", properties0);
      assertNotNull(cache0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        CacheFactory.createCache("", "M//'H<%YbuC%;", (Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.pagehelper.cache.SimpleCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        CacheFactory.createCache("com.google.common.cache.Cache", "com.google.common.cache.Cache", properties0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Created Sql Cache [com.google.common.cache.Cache] Error
         //
         verifyException("com.github.pagehelper.cache.CacheFactory", e);
      }
  }
}
