/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 11:51:47 GMT 2019
 */

package com.google.template.soy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.template.soy.SoyCmdLineParser;
import com.google.template.soy.xliffmsgplugin.XliffMsgPlugin;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import org.kohsuke.args4j.Argument;
import org.kohsuke.args4j.CmdLineParser;
import org.kohsuke.args4j.OptionDef;
import org.kohsuke.args4j.spi.Parameters;
import org.kohsuke.args4j.spi.Setter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SoyCmdLineParser_ESTest extends SoyCmdLineParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyCmdLineParser soyCmdLineParser0 = new SoyCmdLineParser((Object) null, classLoader0);
      Setter<Object> setter0 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.ModuleOptionHandler soyCmdLineParser_ModuleOptionHandler0 = new SoyCmdLineParser.ModuleOptionHandler(soyCmdLineParser0, (OptionDef) null, setter0);
      Parameters parameters0 = mock(Parameters.class, new ViolatedAssumptionAnswer());
      doReturn("sso(o)").when(parameters0).getParameter(anyInt());
      // Undeclared exception!
      try { 
        soyCmdLineParser_ModuleOptionHandler0.parseArguments(parameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.SoyCmdLineParser$ModuleOptionHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      CmdLineParser cmdLineParser0 = new CmdLineParser(object0);
      Setter<Object> setter0 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.ModuleListOptionHandler soyCmdLineParser_ModuleListOptionHandler0 = new SoyCmdLineParser.ModuleListOptionHandler(cmdLineParser0, (OptionDef) null, setter0);
      // Undeclared exception!
      try { 
        soyCmdLineParser_ModuleListOptionHandler0.parseItem("Could not create BloomFilter of ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.SoyCmdLineParser$ModuleListOptionHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CmdLineParser cmdLineParser0 = new CmdLineParser((Object) null);
      Class<SoyCmdLineParser.ModuleOptionHandler> class0 = SoyCmdLineParser.ModuleOptionHandler.class;
      Argument argument0 = mock(Argument.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(argument0).handler();
      doReturn("").when(argument0).metaVar();
      doReturn(false).when(argument0).multiValued();
      doReturn(false).when(argument0).required();
      doReturn("").when(argument0).usage();
      OptionDef optionDef0 = new OptionDef(argument0, false);
      Setter<Object> setter0 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.ModuleOptionHandler soyCmdLineParser_ModuleOptionHandler0 = new SoyCmdLineParser.ModuleOptionHandler(cmdLineParser0, optionDef0, setter0);
      Setter<Object> setter1 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.MsgPluginOptionHandler soyCmdLineParser_MsgPluginOptionHandler0 = new SoyCmdLineParser.MsgPluginOptionHandler(cmdLineParser0, soyCmdLineParser_ModuleOptionHandler0.option, setter1);
      Parameters parameters0 = mock(Parameters.class, new ViolatedAssumptionAnswer());
      doReturn("").when(parameters0).getParameter(anyInt());
      int int0 = soyCmdLineParser_MsgPluginOptionHandler0.parseArguments(parameters0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyCmdLineParser soyCmdLineParser0 = new SoyCmdLineParser("com.google.template.soy.base.AutoValue_SourceLocation_Point", classLoader0);
      Setter<Object> setter0 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.MsgPluginOptionHandler soyCmdLineParser_MsgPluginOptionHandler0 = new SoyCmdLineParser.MsgPluginOptionHandler(soyCmdLineParser0, (OptionDef) null, setter0);
      Parameters parameters0 = mock(Parameters.class, new ViolatedAssumptionAnswer());
      doReturn("Sd~4Oohw").when(parameters0).getParameter(anyInt());
      // Undeclared exception!
      try { 
        soyCmdLineParser_MsgPluginOptionHandler0.parseArguments(parameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.SoyCmdLineParser$MsgPluginOptionHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CmdLineParser cmdLineParser0 = new CmdLineParser((Object) null);
      Class<SoyCmdLineParser.ModuleOptionHandler> class0 = SoyCmdLineParser.ModuleOptionHandler.class;
      Argument argument0 = mock(Argument.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(argument0).handler();
      doReturn("").when(argument0).metaVar();
      doReturn(false).when(argument0).multiValued();
      doReturn(false).when(argument0).required();
      doReturn("").when(argument0).usage();
      OptionDef optionDef0 = new OptionDef(argument0, false);
      Setter<Object> setter0 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.ModuleOptionHandler soyCmdLineParser_ModuleOptionHandler0 = new SoyCmdLineParser.ModuleOptionHandler(cmdLineParser0, optionDef0, setter0);
      Parameters parameters0 = mock(Parameters.class, new ViolatedAssumptionAnswer());
      doReturn("").when(parameters0).getParameter(anyInt());
      int int0 = soyCmdLineParser_ModuleOptionHandler0.parseArguments(parameters0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XliffMsgPlugin xliffMsgPlugin0 = new XliffMsgPlugin();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyCmdLineParser soyCmdLineParser0 = new SoyCmdLineParser(xliffMsgPlugin0, classLoader0);
      Class<SoyCmdLineParser.BooleanOptionHandler> class0 = SoyCmdLineParser.BooleanOptionHandler.class;
      Argument argument0 = mock(Argument.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(argument0).handler();
      doReturn("com.google.inject.util.Modules$CombinedModule").when(argument0).metaVar();
      doReturn(true).when(argument0).multiValued();
      doReturn(true).when(argument0).required();
      doReturn("com.google.inject.util.Modules$CombinedModule").when(argument0).usage();
      OptionDef optionDef0 = new OptionDef(argument0, true);
      Setter<String> setter0 = (Setter<String>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.StringListOptionHandler soyCmdLineParser_StringListOptionHandler0 = new SoyCmdLineParser.StringListOptionHandler(soyCmdLineParser0, optionDef0, setter0);
      Setter<Object> setter1 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.ModuleOptionHandler soyCmdLineParser_ModuleOptionHandler0 = new SoyCmdLineParser.ModuleOptionHandler(soyCmdLineParser_StringListOptionHandler0.owner, optionDef0, setter1);
      Parameters parameters0 = mock(Parameters.class, new ViolatedAssumptionAnswer());
      doReturn(",").when(parameters0).getParameter(anyInt());
      // Undeclared exception!
      try { 
        soyCmdLineParser_ModuleOptionHandler0.parseArguments(parameters0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.kohsuke.args4j.OptionDef cannot be cast to org.kohsuke.args4j.NamedOptionDef
         //
         verifyException("com.google.template.soy.SoyCmdLineParser$ModuleOptionHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XliffMsgPlugin xliffMsgPlugin0 = new XliffMsgPlugin();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyCmdLineParser soyCmdLineParser0 = new SoyCmdLineParser(xliffMsgPlugin0, classLoader0);
      Class<SoyCmdLineParser.MsgPluginOptionHandler> class0 = SoyCmdLineParser.MsgPluginOptionHandler.class;
      Argument argument0 = mock(Argument.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(argument0).handler();
      doReturn("&").when(argument0).metaVar();
      doReturn(true).when(argument0).multiValued();
      doReturn(true).when(argument0).required();
      doReturn("trvl_kk(;bv#").when(argument0).usage();
      OptionDef optionDef0 = new OptionDef(argument0, true);
      Setter<String> setter0 = (Setter<String>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.StringListOptionHandler soyCmdLineParser_StringListOptionHandler0 = new SoyCmdLineParser.StringListOptionHandler(soyCmdLineParser0, optionDef0, setter0);
      Parameters parameters0 = mock(Parameters.class, new ViolatedAssumptionAnswer());
      doReturn("&").when(parameters0).getParameter(anyInt());
      int int0 = soyCmdLineParser_StringListOptionHandler0.parseArguments(parameters0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XliffMsgPlugin xliffMsgPlugin0 = new XliffMsgPlugin();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyCmdLineParser soyCmdLineParser0 = new SoyCmdLineParser(xliffMsgPlugin0, classLoader0);
      Class<SoyCmdLineParser.MsgPluginOptionHandler> class0 = SoyCmdLineParser.MsgPluginOptionHandler.class;
      Argument argument0 = mock(Argument.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(argument0).handler();
      doReturn("").when(argument0).metaVar();
      doReturn(true).when(argument0).multiValued();
      doReturn(true).when(argument0).required();
      doReturn("trvl_kk(;bv#").when(argument0).usage();
      OptionDef optionDef0 = new OptionDef(argument0, true);
      Setter<String> setter0 = (Setter<String>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.StringListOptionHandler soyCmdLineParser_StringListOptionHandler0 = new SoyCmdLineParser.StringListOptionHandler(soyCmdLineParser0, optionDef0, setter0);
      Parameters parameters0 = mock(Parameters.class, new ViolatedAssumptionAnswer());
      doReturn("").when(parameters0).getParameter(anyInt());
      int int0 = soyCmdLineParser_StringListOptionHandler0.parseArguments(parameters0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XliffMsgPlugin xliffMsgPlugin0 = new XliffMsgPlugin();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyCmdLineParser soyCmdLineParser0 = new SoyCmdLineParser(xliffMsgPlugin0, classLoader0);
      Class<SoyCmdLineParser.ModuleOptionHandler> class0 = SoyCmdLineParser.ModuleOptionHandler.class;
      Argument argument0 = mock(Argument.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(argument0).handler();
      doReturn("{/$</jf0x").when(argument0).metaVar();
      doReturn(false).when(argument0).multiValued();
      doReturn(false).when(argument0).required();
      doReturn("{/$</jf0x").when(argument0).usage();
      OptionDef optionDef0 = new OptionDef(argument0, true);
      Setter<Object> setter0 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.BooleanOptionHandler soyCmdLineParser_BooleanOptionHandler0 = new SoyCmdLineParser.BooleanOptionHandler(soyCmdLineParser0, optionDef0, setter0);
      Parameters parameters0 = mock(Parameters.class, new ViolatedAssumptionAnswer());
      doReturn("efH*").when(parameters0).getParameter(anyInt());
      int int0 = soyCmdLineParser_BooleanOptionHandler0.parseArguments(parameters0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<SoyCmdLineParser.MsgPluginOptionHandler> class0 = SoyCmdLineParser.MsgPluginOptionHandler.class;
      Argument argument0 = mock(Argument.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(argument0).handler();
      doReturn(" !").when(argument0).metaVar();
      doReturn(true).when(argument0).multiValued();
      doReturn(true).when(argument0).required();
      doReturn("PyVtI").when(argument0).usage();
      OptionDef optionDef0 = new OptionDef(argument0, false);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyCmdLineParser soyCmdLineParser0 = new SoyCmdLineParser("ITEM,ITEM,...", classLoader0);
      Setter<Object> setter0 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.BooleanOptionHandler soyCmdLineParser_BooleanOptionHandler0 = new SoyCmdLineParser.BooleanOptionHandler(soyCmdLineParser0, optionDef0, setter0);
      Parameters parameters0 = mock(Parameters.class, new ViolatedAssumptionAnswer());
      doReturn("1").when(parameters0).getParameter(anyInt());
      int int0 = soyCmdLineParser_BooleanOptionHandler0.parseArguments(parameters0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(0);
      CmdLineParser cmdLineParser0 = new CmdLineParser(integer0);
      Class<SoyCmdLineParser.MsgPluginOptionHandler> class0 = SoyCmdLineParser.MsgPluginOptionHandler.class;
      Argument argument0 = mock(Argument.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(argument0).handler();
      doReturn(" !").when(argument0).metaVar();
      doReturn(true).when(argument0).multiValued();
      doReturn(true).when(argument0).required();
      doReturn("PyVtI").when(argument0).usage();
      OptionDef optionDef0 = new OptionDef(argument0, false);
      Setter<Object> setter0 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.StringListOptionHandler soyCmdLineParser_StringListOptionHandler0 = new SoyCmdLineParser.StringListOptionHandler(cmdLineParser0, optionDef0, setter0);
      String string0 = soyCmdLineParser_StringListOptionHandler0.getDefaultMetaVariable();
      assertEquals("ITEM,ITEM,...", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyCmdLineParser soyCmdLineParser0 = new SoyCmdLineParser("com.google.template.soy.base.AutoValue_SourceLocation_Point", classLoader0);
      Setter<Object> setter0 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.MsgPluginOptionHandler soyCmdLineParser_MsgPluginOptionHandler0 = new SoyCmdLineParser.MsgPluginOptionHandler(soyCmdLineParser0, (OptionDef) null, setter0);
      String string0 = soyCmdLineParser_MsgPluginOptionHandler0.getDefaultMetaVariable();
      assertEquals("com.foo.bar.BazModule", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer((-25));
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyCmdLineParser soyCmdLineParser0 = new SoyCmdLineParser(integer0, classLoader0);
      Class<SoyCmdLineParser.BooleanOptionHandler> class0 = SoyCmdLineParser.BooleanOptionHandler.class;
      Argument argument0 = mock(Argument.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(argument0).handler();
      doReturn("(]Enl").when(argument0).metaVar();
      doReturn(false).when(argument0).multiValued();
      doReturn(false).when(argument0).required();
      doReturn("(]Enl").when(argument0).usage();
      OptionDef optionDef0 = new OptionDef(argument0, true);
      Setter<Object> setter0 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.ModuleListOptionHandler soyCmdLineParser_ModuleListOptionHandler0 = new SoyCmdLineParser.ModuleListOptionHandler(soyCmdLineParser0, optionDef0, setter0);
      Setter<Object> setter1 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.FileListOptionHandler soyCmdLineParser_FileListOptionHandler0 = new SoyCmdLineParser.FileListOptionHandler(soyCmdLineParser0, soyCmdLineParser_ModuleListOptionHandler0.option, setter1);
      File file0 = soyCmdLineParser_FileListOptionHandler0.parseItem("Converter.from(");
      assertFalse(file0.isHidden());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyCmdLineParser soyCmdLineParser0 = new SoyCmdLineParser("com.google.template.soy.base.AutoValue_SourceLocation_Point", classLoader0);
      Setter<Object> setter0 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.MsgPluginOptionHandler soyCmdLineParser_MsgPluginOptionHandler0 = new SoyCmdLineParser.MsgPluginOptionHandler(soyCmdLineParser0, (OptionDef) null, setter0);
      Setter<Object> setter1 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.BooleanOptionHandler soyCmdLineParser_BooleanOptionHandler0 = new SoyCmdLineParser.BooleanOptionHandler(soyCmdLineParser_MsgPluginOptionHandler0.owner, (OptionDef) null, setter1);
      String string0 = soyCmdLineParser_BooleanOptionHandler0.getDefaultMetaVariable();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(0);
      CmdLineParser cmdLineParser0 = new CmdLineParser(integer0);
      Class<SoyCmdLineParser.MsgPluginOptionHandler> class0 = SoyCmdLineParser.MsgPluginOptionHandler.class;
      Argument argument0 = mock(Argument.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(argument0).handler();
      doReturn(" !").when(argument0).metaVar();
      doReturn(true).when(argument0).multiValued();
      doReturn(true).when(argument0).required();
      doReturn("PyVtI").when(argument0).usage();
      OptionDef optionDef0 = new OptionDef(argument0, false);
      Setter<Object> setter0 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.StringListOptionHandler soyCmdLineParser_StringListOptionHandler0 = new SoyCmdLineParser.StringListOptionHandler(cmdLineParser0, optionDef0, setter0);
      String string0 = soyCmdLineParser_StringListOptionHandler0.parseItem("ITEM,ITEM,...");
      assertEquals("ITEM,ITEM,...", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer((-25));
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyCmdLineParser soyCmdLineParser0 = new SoyCmdLineParser(integer0, classLoader0);
      Class<SoyCmdLineParser.BooleanOptionHandler> class0 = SoyCmdLineParser.BooleanOptionHandler.class;
      Argument argument0 = mock(Argument.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(argument0).handler();
      doReturn("(]Enl").when(argument0).metaVar();
      doReturn(false).when(argument0).multiValued();
      doReturn(false).when(argument0).required();
      doReturn("(]Enl").when(argument0).usage();
      OptionDef optionDef0 = new OptionDef(argument0, true);
      Setter<Object> setter0 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.ModuleListOptionHandler soyCmdLineParser_ModuleListOptionHandler0 = new SoyCmdLineParser.ModuleListOptionHandler(soyCmdLineParser0, optionDef0, setter0);
      Setter<Object> setter1 = (Setter<Object>) mock(Setter.class, new ViolatedAssumptionAnswer());
      SoyCmdLineParser.ModuleOptionHandler soyCmdLineParser_ModuleOptionHandler0 = new SoyCmdLineParser.ModuleOptionHandler(soyCmdLineParser_ModuleListOptionHandler0.owner, optionDef0, setter1);
      String string0 = soyCmdLineParser_ModuleOptionHandler0.getDefaultMetaVariable();
      assertEquals("com.foo.bar.BazModule", string0);
  }
}
