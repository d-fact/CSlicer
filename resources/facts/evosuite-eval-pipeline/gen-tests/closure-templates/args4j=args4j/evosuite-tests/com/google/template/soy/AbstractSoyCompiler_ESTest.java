/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 11:54:30 GMT 2019
 */

package com.google.template.soy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.inject.Injector;
import com.google.template.soy.AbstractSoyCompiler;
import com.google.template.soy.SoyFileSet;
import com.google.template.soy.SoyMsgPruner;
import com.google.template.soy.SoyToIncrementalDomSrcCompiler;
import com.google.template.soy.SoyToJsSrcCompiler;
import com.google.template.soy.SoyToPySrcCompiler;
import java.io.PrintStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractSoyCompiler_ESTest extends AbstractSoyCompiler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "obo,Mfct_k<=eKAK[vO";
      stringArray0[1] = "]NM2~v";
      stringArray0[2] = "BitArrays must be of equal length (%s != %s)";
      stringArray0[3] = "dgx6c!7npIaLUOp{";
      // Undeclared exception!
      try { 
        SoyMsgPruner.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyToJsSrcCompiler soyToJsSrcCompiler0 = new SoyToJsSrcCompiler(classLoader0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "&}gT!+";
      stringArray0[1] = "Found extra arguments passed on the command line. If these are sources, use --srcs=... instead.";
      stringArray0[2] = "5`*owx1;wGJ3ME";
      stringArray0[3] = "com.google.protobuf.StringValue$1";
      stringArray0[4] = "com.google.template.soy.AbstractSoyCompiler";
      MockFile mockFile0 = new MockFile("RLwAU|c1Upvc'Ot", "com.google.protobuf.StringValue$1");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      int int0 = soyToJsSrcCompiler0.run(stringArray0, mockPrintStream0);
      assertEquals(11937L, mockFile0.length());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyToJsSrcCompiler soyToJsSrcCompiler0 = new SoyToJsSrcCompiler(classLoader0);
      String[] stringArray0 = new String[5];
      MockFile mockFile0 = new MockFile("RLwAU|c1Upvc'Ot", "com.google.protobuf.StringValue$1");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      int int0 = soyToJsSrcCompiler0.run(stringArray0, mockPrintStream0);
      assertEquals(1, int0);
      assertEquals(235L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SoyToPySrcCompiler soyToPySrcCompiler0 = new SoyToPySrcCompiler();
      // Undeclared exception!
      try { 
        soyToPySrcCompiler0.validateFlags();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Must provide the Python runtime library path.
         //
         verifyException("com.google.template.soy.AbstractSoyCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SoyToIncrementalDomSrcCompiler soyToIncrementalDomSrcCompiler0 = new SoyToIncrementalDomSrcCompiler();
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        soyToIncrementalDomSrcCompiler0.run(stringArray0, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.AbstractSoyCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyToJsSrcCompiler soyToJsSrcCompiler0 = new SoyToJsSrcCompiler(classLoader0);
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        soyToJsSrcCompiler0.runMain(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractSoyCompiler.exitWithError("bad proto access");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: bad proto access
         //
         verifyException("com.google.template.soy.AbstractSoyCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SoyToIncrementalDomSrcCompiler soyToIncrementalDomSrcCompiler0 = new SoyToIncrementalDomSrcCompiler();
      soyToIncrementalDomSrcCompiler0.validateFlags();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SoyToPySrcCompiler soyToPySrcCompiler0 = new SoyToPySrcCompiler();
      Injector injector0 = mock(Injector.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        soyToPySrcCompiler0.compile((SoyFileSet.Builder) null, injector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.SoyToPySrcCompiler", e);
      }
  }
}
