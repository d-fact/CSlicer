/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 11:55:49 GMT 2019
 */

package com.google.template.soy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableBiMap;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Injector;
import com.google.template.soy.SoyFileSet;
import com.google.template.soy.SoyParseInfoGenerator;
import com.google.template.soy.base.internal.SoyFileKind;
import com.google.template.soy.shared.internal.BuiltinFunction;
import com.google.template.soy.shared.internal.GuiceSimpleScope;
import com.google.template.soy.shared.restricted.SoyPrintDirective;
import java.net.URL;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SoyParseInfoGenerator_ESTest extends SoyParseInfoGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyParseInfoGenerator soyParseInfoGenerator0 = new SoyParseInfoGenerator(classLoader0);
      soyParseInfoGenerator0.inputPrefix = "hb_jRxP2";
      GuiceSimpleScope guiceSimpleScope0 = new GuiceSimpleScope();
      ImmutableBiMap<String, BuiltinFunction> immutableBiMap0 = ImmutableBiMap.of();
      SoyFileSet.CoreDependencies soyFileSet_CoreDependencies0 = new SoyFileSet.CoreDependencies(guiceSimpleScope0, immutableBiMap0, (ImmutableMap<String, ? extends SoyPrintDirective>) null);
      SoyFileSet.Builder soyFileSet_Builder0 = new SoyFileSet.Builder(soyFileSet_CoreDependencies0);
      URL uRL0 = MockURL.getHttpExample();
      SoyFileKind soyFileKind0 = SoyFileKind.SRC;
      SoyFileSet.Builder soyFileSet_Builder1 = soyFileSet_Builder0.addWithKind(uRL0, soyFileKind0, "[sw?@/.=,PlLM^zU");
      Injector injector0 = mock(Injector.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        soyParseInfoGenerator0.compile(soyFileSet_Builder1, injector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyParseInfoGenerator soyParseInfoGenerator0 = new SoyParseInfoGenerator(classLoader0);
      soyParseInfoGenerator0.inputPrefix = null;
      // Undeclared exception!
      try { 
        soyParseInfoGenerator0.validateFlags();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Must provide Java package.
         //
         verifyException("com.google.template.soy.AbstractSoyCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SoyParseInfoGenerator soyParseInfoGenerator0 = new SoyParseInfoGenerator();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyParseInfoGenerator soyParseInfoGenerator0 = new SoyParseInfoGenerator(classLoader0);
      // Undeclared exception!
      try { 
        soyParseInfoGenerator0.compile((SoyFileSet.Builder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.SoyParseInfoGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyParseInfoGenerator soyParseInfoGenerator0 = new SoyParseInfoGenerator(classLoader0);
      GuiceSimpleScope guiceSimpleScope0 = new GuiceSimpleScope();
      ImmutableBiMap<String, BuiltinFunction> immutableBiMap0 = ImmutableBiMap.of();
      SoyFileSet.CoreDependencies soyFileSet_CoreDependencies0 = new SoyFileSet.CoreDependencies(guiceSimpleScope0, immutableBiMap0, (ImmutableMap<String, ? extends SoyPrintDirective>) null);
      SoyFileSet.Builder soyFileSet_Builder0 = new SoyFileSet.Builder(soyFileSet_CoreDependencies0);
      URL uRL0 = MockURL.getHttpExample();
      SoyFileKind soyFileKind0 = SoyFileKind.SRC;
      soyFileSet_Builder0.addWithKind(uRL0, soyFileKind0, "[sw?@/.=,PlLM^zU");
      // Undeclared exception!
      try { 
        soyParseInfoGenerator0.compile(soyFileSet_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SoyParseInfoGenerator soyParseInfoGenerator0 = new SoyParseInfoGenerator(classLoader0);
      GuiceSimpleScope guiceSimpleScope0 = new GuiceSimpleScope();
      BuiltinFunction builtinFunction0 = BuiltinFunction.CSS;
      ImmutableMap<String, BuiltinFunction> immutableMap0 = ImmutableMap.of("", builtinFunction0);
      SoyFileSet.CoreDependencies soyFileSet_CoreDependencies0 = new SoyFileSet.CoreDependencies(guiceSimpleScope0, immutableMap0, (ImmutableMap<String, ? extends SoyPrintDirective>) null);
      SoyFileSet.Builder soyFileSet_Builder0 = new SoyFileSet.Builder(soyFileSet_CoreDependencies0);
      // Undeclared exception!
      try { 
        soyParseInfoGenerator0.compile(soyFileSet_Builder0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must have non-zero number of input Soy files.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        SoyParseInfoGenerator.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
}
