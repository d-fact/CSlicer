/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 11:31:44 GMT 2019
 */

package com.github.searls.jasmine.mojo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.searls.jasmine.config.JasmineConfiguration;
import com.github.searls.jasmine.config.ServerConfiguration;
import com.github.searls.jasmine.driver.WebDriverFactory;
import com.github.searls.jasmine.format.FormatsScriptTags;
import com.github.searls.jasmine.format.JasmineResultLogger;
import com.github.searls.jasmine.io.IoUtilities;
import com.github.searls.jasmine.io.RelativizesFilePaths;
import com.github.searls.jasmine.io.ScansDirectory;
import com.github.searls.jasmine.io.scripts.ConvertsFileToUriString;
import com.github.searls.jasmine.io.scripts.FindsScriptLocationsInDirectory;
import com.github.searls.jasmine.io.scripts.ResolvesLocationOfPreloadSources;
import com.github.searls.jasmine.mojo.ReporterRetriever;
import com.github.searls.jasmine.mojo.ResourceRetriever;
import com.github.searls.jasmine.mojo.TestMojo;
import com.github.searls.jasmine.runner.CreatesRunner;
import com.github.searls.jasmine.runner.DefaultSpecRunnerHtmlGenerator;
import com.github.searls.jasmine.runner.HtmlGeneratorConfigurationFactory;
import com.github.searls.jasmine.runner.SpecRunnerExecutor;
import com.github.searls.jasmine.server.ResourceHandlerConfigurator;
import org.apache.maven.plugin.MojoExecutionException;
import org.apache.maven.project.MavenProject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TestMojo_ESTest extends TestMojo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReporterRetriever reporterRetriever0 = new ReporterRetriever((ResourceRetriever) null);
      WebDriverFactory webDriverFactory0 = new WebDriverFactory();
      JasmineResultLogger jasmineResultLogger0 = new JasmineResultLogger();
      RelativizesFilePaths relativizesFilePaths0 = new RelativizesFilePaths();
      FormatsScriptTags formatsScriptTags0 = new FormatsScriptTags();
      DefaultSpecRunnerHtmlGenerator defaultSpecRunnerHtmlGenerator0 = new DefaultSpecRunnerHtmlGenerator(formatsScriptTags0);
      IoUtilities ioUtilities0 = new IoUtilities();
      HtmlGeneratorConfigurationFactory htmlGeneratorConfigurationFactory0 = new HtmlGeneratorConfigurationFactory(ioUtilities0);
      ScansDirectory scansDirectory0 = new ScansDirectory();
      ConvertsFileToUriString convertsFileToUriString0 = new ConvertsFileToUriString();
      FindsScriptLocationsInDirectory findsScriptLocationsInDirectory0 = new FindsScriptLocationsInDirectory(scansDirectory0, convertsFileToUriString0);
      ResolvesLocationOfPreloadSources resolvesLocationOfPreloadSources0 = new ResolvesLocationOfPreloadSources(convertsFileToUriString0);
      CreatesRunner createsRunner0 = new CreatesRunner(defaultSpecRunnerHtmlGenerator0, htmlGeneratorConfigurationFactory0, findsScriptLocationsInDirectory0, resolvesLocationOfPreloadSources0, ioUtilities0);
      ResourceHandlerConfigurator resourceHandlerConfigurator0 = new ResourceHandlerConfigurator(relativizesFilePaths0, createsRunner0);
      TestMojo testMojo0 = new TestMojo((MavenProject) null, (ResourceRetriever) null, reporterRetriever0, webDriverFactory0, (SpecRunnerExecutor) null, jasmineResultLogger0, resourceHandlerConfigurator0);
      try { 
        testMojo0.run((ServerConfiguration) null, (JasmineConfiguration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.searls.jasmine.server.ResourceHandlerConfigurator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReporterRetriever reporterRetriever0 = new ReporterRetriever((ResourceRetriever) null);
      WebDriverFactory webDriverFactory0 = new WebDriverFactory();
      JasmineResultLogger jasmineResultLogger0 = new JasmineResultLogger();
      RelativizesFilePaths relativizesFilePaths0 = new RelativizesFilePaths();
      FormatsScriptTags formatsScriptTags0 = new FormatsScriptTags();
      DefaultSpecRunnerHtmlGenerator defaultSpecRunnerHtmlGenerator0 = new DefaultSpecRunnerHtmlGenerator(formatsScriptTags0);
      IoUtilities ioUtilities0 = new IoUtilities();
      HtmlGeneratorConfigurationFactory htmlGeneratorConfigurationFactory0 = new HtmlGeneratorConfigurationFactory(ioUtilities0);
      ScansDirectory scansDirectory0 = new ScansDirectory();
      ConvertsFileToUriString convertsFileToUriString0 = new ConvertsFileToUriString();
      FindsScriptLocationsInDirectory findsScriptLocationsInDirectory0 = new FindsScriptLocationsInDirectory(scansDirectory0, convertsFileToUriString0);
      ResolvesLocationOfPreloadSources resolvesLocationOfPreloadSources0 = new ResolvesLocationOfPreloadSources(convertsFileToUriString0);
      CreatesRunner createsRunner0 = new CreatesRunner(defaultSpecRunnerHtmlGenerator0, htmlGeneratorConfigurationFactory0, findsScriptLocationsInDirectory0, resolvesLocationOfPreloadSources0, ioUtilities0);
      ResourceHandlerConfigurator resourceHandlerConfigurator0 = new ResourceHandlerConfigurator(relativizesFilePaths0, createsRunner0);
      TestMojo testMojo0 = new TestMojo((MavenProject) null, (ResourceRetriever) null, reporterRetriever0, webDriverFactory0, (SpecRunnerExecutor) null, jasmineResultLogger0, resourceHandlerConfigurator0);
      testMojo0.setSkipTests(true);
      testMojo0.execute();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReporterRetriever reporterRetriever0 = new ReporterRetriever((ResourceRetriever) null);
      WebDriverFactory webDriverFactory0 = new WebDriverFactory();
      JasmineResultLogger jasmineResultLogger0 = new JasmineResultLogger();
      FormatsScriptTags formatsScriptTags0 = new FormatsScriptTags();
      DefaultSpecRunnerHtmlGenerator defaultSpecRunnerHtmlGenerator0 = new DefaultSpecRunnerHtmlGenerator(formatsScriptTags0);
      IoUtilities ioUtilities0 = new IoUtilities();
      HtmlGeneratorConfigurationFactory htmlGeneratorConfigurationFactory0 = new HtmlGeneratorConfigurationFactory(ioUtilities0);
      ScansDirectory scansDirectory0 = new ScansDirectory();
      ConvertsFileToUriString convertsFileToUriString0 = new ConvertsFileToUriString();
      FindsScriptLocationsInDirectory findsScriptLocationsInDirectory0 = new FindsScriptLocationsInDirectory(scansDirectory0, convertsFileToUriString0);
      ResolvesLocationOfPreloadSources resolvesLocationOfPreloadSources0 = new ResolvesLocationOfPreloadSources(convertsFileToUriString0);
      CreatesRunner createsRunner0 = new CreatesRunner(defaultSpecRunnerHtmlGenerator0, htmlGeneratorConfigurationFactory0, findsScriptLocationsInDirectory0, resolvesLocationOfPreloadSources0, ioUtilities0);
      ResourceHandlerConfigurator resourceHandlerConfigurator0 = new ResourceHandlerConfigurator((RelativizesFilePaths) null, createsRunner0);
      TestMojo testMojo0 = new TestMojo((MavenProject) null, (ResourceRetriever) null, reporterRetriever0, webDriverFactory0, (SpecRunnerExecutor) null, jasmineResultLogger0, resourceHandlerConfigurator0);
      try { 
        testMojo0.execute();
        fail("Expecting exception: MojoExecutionException");
      
      } catch(MojoExecutionException e) {
         //
         // The jasmine-maven-plugin encountered an exception:
         //
         verifyException("com.github.searls.jasmine.mojo.AbstractJasmineMojo", e);
      }
  }
}
