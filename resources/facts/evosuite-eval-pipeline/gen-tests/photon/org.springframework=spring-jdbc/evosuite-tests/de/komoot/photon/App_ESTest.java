/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 15:34:34 GMT 2019
 */

package de.komoot.photon;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.komoot.photon.App;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class App_ESTest extends App_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Gc<Tfr8sQBm'Hfj;+G#";
      stringArray0[1] = "f'de";
      stringArray0[2] = "]&BJ";
      stringArray0[3] = "O.%`8[f\"8Ft&";
      stringArray0[4] = "";
      stringArray0[5] = "*V1M*d?.wU";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      App.main(stringArray0);
      App.main(stringArray0);
      App.main(stringArray0);
      App.main(stringArray0);
      App.main(stringArray0);
      App.main(stringArray0);
      App.main(stringArray0);
      App.main(stringArray0);
      App.main(stringArray0);
      App.main(stringArray0);
      App.main(stringArray0);
      App.main(stringArray0);
      App.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      try { 
        App.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.beust.jcommander.JCommander", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          String[] stringArray0 = new String[0];
          try { 
            App.main(stringArray0);
            fail("Expecting exception: RuntimeException");
          
          } catch(RuntimeException e) {
             //
             // Can't create directories: 
             //
             verifyException("de.komoot.photon.elasticsearch.Server", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      App app0 = new App();
  }
}
