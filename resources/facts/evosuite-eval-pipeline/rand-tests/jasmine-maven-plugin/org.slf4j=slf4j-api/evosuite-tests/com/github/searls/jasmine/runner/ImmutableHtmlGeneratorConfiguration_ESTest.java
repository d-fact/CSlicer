/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 12 14:41:18 GMT 2019
 */

package com.github.searls.jasmine.runner;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.searls.jasmine.io.scripts.ContextPathScriptResolver;
import com.github.searls.jasmine.io.scripts.ScriptResolver;
import com.github.searls.jasmine.runner.HtmlGeneratorConfiguration;
import com.github.searls.jasmine.runner.ImmutableHtmlGeneratorConfiguration;
import com.github.searls.jasmine.runner.ReporterType;
import com.github.searls.jasmine.runner.SpecRunnerTemplate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ImmutableHtmlGeneratorConfiguration_ESTest extends ImmutableHtmlGeneratorConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder1.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withRunnerTemplate("WL&_");
      immutableHtmlGeneratorConfiguration1.hashCode();
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals("", immutableHtmlGeneratorConfiguration1.getSourceEncoding());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration1.getCustomRunnerConfiguration());
      assertEquals("WL&_", immutableHtmlGeneratorConfiguration1.getRunnerTemplate());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", "");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withSourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      immutableHtmlGeneratorConfiguration1.hashCode();
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals("", immutableHtmlGeneratorConfiguration1.getRunnerTemplate());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder1.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withAutoRefreshInterval((-6214));
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration2 = immutableHtmlGeneratorConfiguration1.withRunnerTemplate("WL&_");
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals((-6214), immutableHtmlGeneratorConfiguration2.getAutoRefreshInterval());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration2.getCustomRunnerConfiguration());
      assertEquals("", immutableHtmlGeneratorConfiguration2.getSourceEncoding());
      assertEquals("WL&_", immutableHtmlGeneratorConfiguration2.getRunnerTemplate());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder1.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withAutoRefreshInterval((-6214));
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration2 = immutableHtmlGeneratorConfiguration1.withCustomRunnerConfiguration("sourceEncoding");
      assertEquals((-6214), immutableHtmlGeneratorConfiguration2.getAutoRefreshInterval());
      assertEquals("", immutableHtmlGeneratorConfiguration2.getSourceEncoding());
      assertEquals("sourceEncoding", immutableHtmlGeneratorConfiguration2.getCustomRunnerConfiguration());
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals("", immutableHtmlGeneratorConfiguration2.getRunnerTemplate());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("customRunnerConfiguration");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("customRunnerConfiguration");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder3.reporterType(reporterType0);
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      String string0 = immutableHtmlGeneratorConfiguration0.getSourceEncoding();
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals("customRunnerConfiguration", string0);
      assertEquals("customRunnerConfiguration", immutableHtmlGeneratorConfiguration0.getRunnerTemplate());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration0.getCustomRunnerConfiguration());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      String string0 = immutableHtmlGeneratorConfiguration0.getRunnerTemplate();
      assertEquals("", string0);
      assertEquals("", immutableHtmlGeneratorConfiguration0.getSourceEncoding());
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration0.getCustomRunnerConfiguration());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder1.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval((-1488));
      immutableHtmlGeneratorConfiguration_Builder1.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder2.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = ImmutableHtmlGeneratorConfiguration.copyOf(immutableHtmlGeneratorConfiguration0);
      assertEquals("", immutableHtmlGeneratorConfiguration1.getSourceEncoding());
      assertSame(immutableHtmlGeneratorConfiguration1, immutableHtmlGeneratorConfiguration0);
      assertEquals((-1488), immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration1.getCustomRunnerConfiguration());
      assertEquals("", immutableHtmlGeneratorConfiguration1.getRunnerTemplate());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      // Undeclared exception!
      try { 
        immutableHtmlGeneratorConfiguration0.withSourceEncoding((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // sourceEncoding
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", "&h\"rxf\"");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      // Undeclared exception!
      try { 
        immutableHtmlGeneratorConfiguration0.withScriptResolver((ScriptResolver) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // scriptResolver
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      // Undeclared exception!
      try { 
        immutableHtmlGeneratorConfiguration0.withRunnerTemplate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // runnerTemplate
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      // Undeclared exception!
      try { 
        immutableHtmlGeneratorConfiguration0.withCustomRunnerConfiguration((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // customRunnerConfiguration
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      immutableHtmlGeneratorConfiguration0.getReporterType();
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals("", immutableHtmlGeneratorConfiguration0.getSourceEncoding());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration0.getCustomRunnerConfiguration());
      assertEquals("", immutableHtmlGeneratorConfiguration0.getRunnerTemplate());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", "");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      String string0 = immutableHtmlGeneratorConfiguration0.getSourceEncoding();
      assertEquals("", immutableHtmlGeneratorConfiguration0.getRunnerTemplate());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration0.getCustomRunnerConfiguration());
      assertEquals("", string0);
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      String string0 = immutableHtmlGeneratorConfiguration0.getCustomRunnerConfiguration();
      assertEquals("", immutableHtmlGeneratorConfiguration0.getSourceEncoding());
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", string0);
      assertEquals("", immutableHtmlGeneratorConfiguration0.getRunnerTemplate());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      immutableHtmlGeneratorConfiguration0.getSpecRunnerTemplate();
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration0.getCustomRunnerConfiguration());
      assertEquals("", immutableHtmlGeneratorConfiguration0.getRunnerTemplate());
      assertEquals("", immutableHtmlGeneratorConfiguration0.getSourceEncoding());
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "", "&h\"rxf\"");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      immutableHtmlGeneratorConfiguration0.getScriptResolver();
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", "&h\"rxf\"");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder4.build();
      int int0 = immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval();
      assertEquals("", immutableHtmlGeneratorConfiguration0.getSourceEncoding());
      assertEquals("", immutableHtmlGeneratorConfiguration0.getRunnerTemplate());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration0.getCustomRunnerConfiguration());
      assertEquals(821, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      immutableHtmlGeneratorConfiguration0.getRunnerTemplate();
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      immutableHtmlGeneratorConfiguration_Builder0.autoRefreshInterval(816);
      // Undeclared exception!
      try { 
        immutableHtmlGeneratorConfiguration_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot build HtmlGeneratorConfiguration, some of required attributes are not set [sourceEncoding, reporterType, runnerTemplate, specRunnerTemplate, scriptResolver, customRunnerConfiguration]
         //
         verifyException("com.github.searls.jasmine.runner.ImmutableHtmlGeneratorConfiguration$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("G>qkn}Ws&E4Xwa");
      // Undeclared exception!
      try { 
        immutableHtmlGeneratorConfiguration_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot build HtmlGeneratorConfiguration, some of required attributes are not set [sourceEncoding, reporterType, runnerTemplate, specRunnerTemplate, scriptResolver, autoRefreshInterval]
         //
         verifyException("com.github.searls.jasmine.runner.ImmutableHtmlGeneratorConfiguration$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com.github.searls.jasmine.runner.ImmutableHtmlGeneratorConfiguration", "&h\"rxf\"");
      immutableHtmlGeneratorConfiguration_Builder0.scriptResolver(contextPathScriptResolver0);
      // Undeclared exception!
      try { 
        immutableHtmlGeneratorConfiguration_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot build HtmlGeneratorConfiguration, some of required attributes are not set [sourceEncoding, reporterType, runnerTemplate, specRunnerTemplate, customRunnerConfiguration, autoRefreshInterval]
         //
         verifyException("com.github.searls.jasmine.runner.ImmutableHtmlGeneratorConfiguration$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder0.specRunnerTemplate(specRunnerTemplate0);
      // Undeclared exception!
      try { 
        immutableHtmlGeneratorConfiguration_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot build HtmlGeneratorConfiguration, some of required attributes are not set [sourceEncoding, reporterType, runnerTemplate, scriptResolver, customRunnerConfiguration, autoRefreshInterval]
         //
         verifyException("com.github.searls.jasmine.runner.ImmutableHtmlGeneratorConfiguration$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder0.reporterType(reporterType0);
      // Undeclared exception!
      try { 
        immutableHtmlGeneratorConfiguration_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot build HtmlGeneratorConfiguration, some of required attributes are not set [sourceEncoding, runnerTemplate, specRunnerTemplate, scriptResolver, customRunnerConfiguration, autoRefreshInterval]
         //
         verifyException("com.github.searls.jasmine.runner.ImmutableHtmlGeneratorConfiguration$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      immutableHtmlGeneratorConfiguration_Builder0.sourceEncoding("com<githb.sear9s.jasminerunner.ImmutableHtmlGeneratorConfiguration");
      // Undeclared exception!
      try { 
        immutableHtmlGeneratorConfiguration_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot build HtmlGeneratorConfiguration, some of required attributes are not set [reporterType, runnerTemplate, specRunnerTemplate, scriptResolver, customRunnerConfiguration, autoRefreshInterval]
         //
         verifyException("com.github.searls.jasmine.runner.ImmutableHtmlGeneratorConfiguration$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = ImmutableHtmlGeneratorConfiguration.copyOf(immutableHtmlGeneratorConfiguration0);
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertSame(immutableHtmlGeneratorConfiguration1, immutableHtmlGeneratorConfiguration0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        ImmutableHtmlGeneratorConfiguration.copyOf((HtmlGeneratorConfiguration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // instance
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ReporterType reporterType0 = ReporterType.HtmlReporter;
      immutableHtmlGeneratorConfiguration_Builder3.reporterType(reporterType0);
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withCustomRunnerConfiguration("sourceEncoding");
      boolean boolean0 = immutableHtmlGeneratorConfiguration1.equals(immutableHtmlGeneratorConfiguration0);
      assertEquals("", immutableHtmlGeneratorConfiguration1.getSourceEncoding());
      assertFalse(boolean0);
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertEquals("", immutableHtmlGeneratorConfiguration1.getRunnerTemplate());
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ContextPathScriptResolver contextPathScriptResolver1 = new ContextPathScriptResolver(contextPathScriptResolver0, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", "");
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withScriptResolver(contextPathScriptResolver1);
      boolean boolean0 = immutableHtmlGeneratorConfiguration1.equals(immutableHtmlGeneratorConfiguration0);
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertFalse(boolean0);
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals("", immutableHtmlGeneratorConfiguration1.getSourceEncoding());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration1.getCustomRunnerConfiguration());
      assertEquals("", immutableHtmlGeneratorConfiguration1.getRunnerTemplate());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ReporterType reporterType0 = ReporterType.HtmlReporter;
      immutableHtmlGeneratorConfiguration_Builder3.reporterType(reporterType0);
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      SpecRunnerTemplate specRunnerTemplate1 = SpecRunnerTemplate.DEFAULT;
      immutableHtmlGeneratorConfiguration_Builder0.specRunnerTemplate(specRunnerTemplate1);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withSpecRunnerTemplate(specRunnerTemplate0);
      boolean boolean0 = immutableHtmlGeneratorConfiguration1.equals(immutableHtmlGeneratorConfiguration0);
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration1.getCustomRunnerConfiguration());
      assertEquals("", immutableHtmlGeneratorConfiguration1.getRunnerTemplate());
      assertEquals("", immutableHtmlGeneratorConfiguration1.getSourceEncoding());
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withRunnerTemplate("HtmlGeneratorConfiguration{sourceEncoding=com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration, reporterType=JsApiReporter, runnerTemplate=, specRunnerTemplate=REQUIRE_JS, scriptResolver=com.github.searls.jasmine.io.scripts.ContextPathScriptResolver@2, customRunnerConfiguration=com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration, autoRefreshInterval=821}");
      boolean boolean0 = immutableHtmlGeneratorConfiguration0.equals(immutableHtmlGeneratorConfiguration1);
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withSourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      boolean boolean0 = immutableHtmlGeneratorConfiguration1.equals(immutableHtmlGeneratorConfiguration0);
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration0.getCustomRunnerConfiguration());
      assertEquals("", immutableHtmlGeneratorConfiguration1.getRunnerTemplate());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration_Builder2.build();
      boolean boolean0 = immutableHtmlGeneratorConfiguration0.equals(immutableHtmlGeneratorConfiguration1);
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ReporterType reporterType1 = ReporterType.TrivialReporter;
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withReporterType(reporterType1);
      boolean boolean0 = immutableHtmlGeneratorConfiguration1.equals(immutableHtmlGeneratorConfiguration0);
      assertFalse(boolean0);
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      boolean boolean0 = immutableHtmlGeneratorConfiguration0.equals(immutableHtmlGeneratorConfiguration0);
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      boolean boolean0 = immutableHtmlGeneratorConfiguration0.equals(immutableHtmlGeneratorConfiguration_Builder2);
      assertFalse(boolean0);
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("9(`akoQc]/");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("9(`akoQc]/");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;D NEQyn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withAutoRefreshInterval(821);
      assertSame(immutableHtmlGeneratorConfiguration1, immutableHtmlGeneratorConfiguration0);
      assertEquals("9(`akoQc]/", immutableHtmlGeneratorConfiguration1.getRunnerTemplate());
      assertEquals("9(`akoQc]/", immutableHtmlGeneratorConfiguration1.getSourceEncoding());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration1.getCustomRunnerConfiguration());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withAutoRefreshInterval(2021161080);
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals(2021161080, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("9(`akoQc]/");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("9(`akoQc]/");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;D NEQyn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withCustomRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertEquals("9(`akoQc]/", immutableHtmlGeneratorConfiguration1.getRunnerTemplate());
      assertSame(immutableHtmlGeneratorConfiguration1, immutableHtmlGeneratorConfiguration0);
      assertEquals("9(`akoQc]/", immutableHtmlGeneratorConfiguration1.getSourceEncoding());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withScriptResolver(contextPathScriptResolver0);
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertSame(immutableHtmlGeneratorConfiguration1, immutableHtmlGeneratorConfiguration0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withSpecRunnerTemplate(specRunnerTemplate0);
      assertSame(immutableHtmlGeneratorConfiguration1, immutableHtmlGeneratorConfiguration0);
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withRunnerTemplate("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      assertSame(immutableHtmlGeneratorConfiguration1, immutableHtmlGeneratorConfiguration0);
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("9(`akoQc]/");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("9(`akoQc]/");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;D NEQyn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withReporterType(reporterType0);
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration1.getCustomRunnerConfiguration());
      assertEquals("9(`akoQc]/", immutableHtmlGeneratorConfiguration1.getSourceEncoding());
      assertEquals("9(`akoQc]/", immutableHtmlGeneratorConfiguration1.getRunnerTemplate());
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertSame(immutableHtmlGeneratorConfiguration1, immutableHtmlGeneratorConfiguration0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration1 = immutableHtmlGeneratorConfiguration0.withSourceEncoding("");
      assertEquals("", immutableHtmlGeneratorConfiguration1.getRunnerTemplate());
      assertEquals(821, immutableHtmlGeneratorConfiguration1.getAutoRefreshInterval());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration1.getCustomRunnerConfiguration());
      assertSame(immutableHtmlGeneratorConfiguration1, immutableHtmlGeneratorConfiguration0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("9(`akoQc]/");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("9(`akoQc]/");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;D NEQyn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      immutableHtmlGeneratorConfiguration0.toString();
      assertEquals("9(`akoQc]/", immutableHtmlGeneratorConfiguration0.getRunnerTemplate());
      assertEquals("9(`akoQc]/", immutableHtmlGeneratorConfiguration0.getSourceEncoding());
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration0.getCustomRunnerConfiguration());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder1 = immutableHtmlGeneratorConfiguration_Builder0.customRunnerConfiguration("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration");
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder2 = immutableHtmlGeneratorConfiguration_Builder1.autoRefreshInterval(821);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder3 = immutableHtmlGeneratorConfiguration_Builder2.runnerTemplate("");
      immutableHtmlGeneratorConfiguration_Builder3.sourceEncoding("");
      ContextPathScriptResolver contextPathScriptResolver0 = new ContextPathScriptResolver((ScriptResolver) null, "com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", ",v8M5;DU[E-Nn?F");
      SpecRunnerTemplate specRunnerTemplate0 = SpecRunnerTemplate.REQUIRE_JS;
      immutableHtmlGeneratorConfiguration_Builder3.specRunnerTemplate(specRunnerTemplate0);
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder4 = immutableHtmlGeneratorConfiguration_Builder3.scriptResolver(contextPathScriptResolver0);
      ReporterType reporterType0 = ReporterType.JsApiReporter;
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder5 = immutableHtmlGeneratorConfiguration_Builder4.reporterType(reporterType0);
      ImmutableHtmlGeneratorConfiguration immutableHtmlGeneratorConfiguration0 = immutableHtmlGeneratorConfiguration_Builder0.build();
      immutableHtmlGeneratorConfiguration_Builder5.from(immutableHtmlGeneratorConfiguration0);
      assertEquals(821, immutableHtmlGeneratorConfiguration0.getAutoRefreshInterval());
      assertEquals("", immutableHtmlGeneratorConfiguration0.getSourceEncoding());
      assertEquals("", immutableHtmlGeneratorConfiguration0.getRunnerTemplate());
      assertEquals("com<github.sear9s.jasmine.runner.ImmutableHtmlGeneratorConfiguration", immutableHtmlGeneratorConfiguration0.getCustomRunnerConfiguration());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ImmutableHtmlGeneratorConfiguration.Builder immutableHtmlGeneratorConfiguration_Builder0 = ImmutableHtmlGeneratorConfiguration.builder();
      immutableHtmlGeneratorConfiguration_Builder0.runnerTemplate("");
      // Undeclared exception!
      try { 
        immutableHtmlGeneratorConfiguration_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot build HtmlGeneratorConfiguration, some of required attributes are not set [sourceEncoding, reporterType, specRunnerTemplate, scriptResolver, customRunnerConfiguration, autoRefreshInterval]
         //
         verifyException("com.github.searls.jasmine.runner.ImmutableHtmlGeneratorConfiguration$Builder", e);
      }
  }
}
