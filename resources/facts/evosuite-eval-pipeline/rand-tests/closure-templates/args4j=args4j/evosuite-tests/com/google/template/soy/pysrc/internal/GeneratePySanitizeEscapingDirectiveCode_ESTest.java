/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 12 13:54:56 GMT 2019
 */

package com.google.template.soy.pysrc.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode;
import com.google.template.soy.shared.internal.DirectiveDigest;
import com.google.template.soy.shared.internal.EscapingConventions;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GeneratePySanitizeEscapingDirectiveCode_ESTest extends GeneratePySanitizeEscapingDirectiveCode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      StringBuilder stringBuilder0 = new StringBuilder();
      generatePySanitizeEscapingDirectiveCode0.useExistingLibraryFunction(stringBuilder0, "9j21B`vbY", "z|eh5:0A/<mA");
      assertEquals("\ndef 9j21_b`vb_y_helper(v):\n  return z|eh5:0A/<mA(str(v), '')\n\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      StringBuilder stringBuilder0 = new StringBuilder();
      generatePySanitizeEscapingDirectiveCode0.generateFilter(stringBuilder0, "", "', re.U)");
      assertEquals("\n_FILTER_FOR_ = ', re.U)\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      StringBuilder stringBuilder0 = new StringBuilder();
      generatePySanitizeEscapingDirectiveCode0.generateMatcher(stringBuilder0, ";hQBw/J_", "2=HZACdI}o0L}");
      assertEquals("\n_MATCHER_FOR_;hQBw/J_ = 2=HZACdI}o0L}\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[0];
      GeneratePySanitizeEscapingDirectiveCode.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      StringBuilder stringBuilder0 = new StringBuilder();
      generatePySanitizeEscapingDirectiveCode0.generateCharacterMapSignature(stringBuilder0, "lw;DzNpY");
      assertEquals("_ESCAPE_MAP_FOR_lw;DzNpY", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      String string0 = generatePySanitizeEscapingDirectiveCode0.getLineCommentSyntax();
      assertEquals("#", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      String string0 = generatePySanitizeEscapingDirectiveCode0.escapeOutputString("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.useExistingLibraryFunction((StringBuilder) null, "_HTML_TAG_REGEX = ", "_HTML_TAG_REGEX = ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.useExistingLibraryFunction(stringBuilder0, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "  return ";
      // Undeclared exception!
      try { 
        GeneratePySanitizeEscapingDirectiveCode.main(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         //   return 
         //
         verifyException("com.google.template.soy.shared.internal.AbstractGenerateSoyEscapingDirectiveCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.generateReplacerFunction((StringBuilder) null, "z+");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.generatePrefix((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.generateMatcher((StringBuilder) null, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      DirectiveDigest directiveDigest0 = mock(DirectiveDigest.class, new ViolatedAssumptionAnswer());
      doReturn("p0").when(directiveDigest0).getDirectiveName();
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.generateHelperFunction((StringBuilder) null, directiveDigest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      DirectiveDigest directiveDigest0 = mock(DirectiveDigest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(directiveDigest0).getDirectiveName();
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.generateHelperFunction((StringBuilder) null, directiveDigest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.generateFilter((StringBuilder) null, "  if not _FILTER_FOR_", "  if not _FILTER_FOR_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.escapeOutputString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.convertFromJavaRegex((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      StringBuilder stringBuilder0 = new StringBuilder();
      DirectiveDigest directiveDigest0 = mock(DirectiveDigest.class, new ViolatedAssumptionAnswer());
      doReturn("jXMh31g,aNBui~m").when(directiveDigest0).getDirectiveName();
      doReturn(",V4,M[wjq3n", "jXMh31g,aNBui~m").when(directiveDigest0).getEscapesName();
      doReturn(",V4,M[wjq3n", (String) null).when(directiveDigest0).getFilterName();
      doReturn(",V4,M[wjq3n").when(directiveDigest0).getInnocuousOutput();
      doReturn((String) null).when(directiveDigest0).getMatcherName();
      doReturn((String) null).when(directiveDigest0).getNonAsciiPrefix();
      generatePySanitizeEscapingDirectiveCode0.generateHelperFunction(stringBuilder0, directiveDigest0);
      assertEquals("\ndef j_x_mh31g,a_n_bui~m_helper(value):\n  value = str(value)\n  if not _FILTER_FOR_null.search(value):\n    return ',V4,M[wjq3n'\n\n  return _MATCHER_FOR_null.sub(\n      _REPLACER_FOR_jXMh31g,aNBui~m, value)\n\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      StringBuilder stringBuilder0 = new StringBuilder("re.compile(r\"\"\"#\"\"\", re.U | re.I)");
      DirectiveDigest directiveDigest0 = mock(DirectiveDigest.class, new ViolatedAssumptionAnswer());
      doReturn("#").when(directiveDigest0).getDirectiveName();
      doReturn("re.compile(r\"\"\"#\"\"\", re.U | re.I)", "#").when(directiveDigest0).getFilterName();
      doReturn("#").when(directiveDigest0).getInnocuousOutput();
      doReturn("re.compile(r\"\"\"#\"\"\", re.U | re.I)").when(directiveDigest0).getNonAsciiPrefix();
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.generateHelperFunction(stringBuilder0, directiveDigest0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Non ASCII prefix escapers not implemented yet.
         //
         verifyException("com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      StringBuilder stringBuilder0 = new StringBuilder();
      DirectiveDigest directiveDigest0 = mock(DirectiveDigest.class, new ViolatedAssumptionAnswer());
      doReturn("#").when(directiveDigest0).getDirectiveName();
      doReturn((String) null).when(directiveDigest0).getEscapesName();
      doReturn((String) null).when(directiveDigest0).getFilterName();
      doReturn((String) null).when(directiveDigest0).getNonAsciiPrefix();
      generatePySanitizeEscapingDirectiveCode0.generateHelperFunction(stringBuilder0, directiveDigest0);
      assertEquals("\ndef #_helper(value):\n  value = str(value)\n  return value\n\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      Pattern pattern0 = Pattern.compile("SMuf}ul", 328);
      String string0 = generatePySanitizeEscapingDirectiveCode0.convertFromJavaRegex(pattern0);
      assertEquals("re.compile(r\"\"\"SMuf}ul\"\"\", re.U | re.M)", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      Pattern pattern0 = Pattern.compile("#", 6);
      String string0 = generatePySanitizeEscapingDirectiveCode0.convertFromJavaRegex(pattern0);
      assertEquals("re.compile(r\"\"\"#\"\"\", re.U | re.I)", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      Pattern pattern0 = Pattern.compile("<Pf-dCfi1pc.l_jfz", 3301);
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.convertFromJavaRegex(pattern0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern <Pf-dCfi1pc.l_jfz uses DOTALL.
         //
         verifyException("com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      String string0 = generatePySanitizeEscapingDirectiveCode0.escapeOutputString("re.compile(r'");
      assertEquals("re.compile(r\\'", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      StringBuilder stringBuilder0 = new StringBuilder();
      generatePySanitizeEscapingDirectiveCode0.generateCommonConstants(stringBuilder0);
      assertEquals("_HTML_TAG_REGEX = re.compile(r\"\"\"<(?:!|/?([a-zA-Z][a-zA-Z0-9:\\-]*))(?:[^>'\"]|\"[^\"]*\"|'[^']*')*>\"\"\", re.U)\n\n_LT_REGEX = re.compile('<')\n\n_SAFE_TAG_WHITELIST = ('b', 'br', 'em', 'i', 's', 'sub', 'sup', 'u')\n\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.generateCharacterMapSignature((StringBuilder) null, "@0p1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      StringBuilder stringBuilder0 = new StringBuilder();
      generatePySanitizeEscapingDirectiveCode0.generatePrefix(stringBuilder0);
      assertEquals("from __future__ import unicode_literals\n\nimport re\nimport urllib\n\ntry:\n  str = unicode\nexcept NameError:\n  pass\n\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      String string0 = generatePySanitizeEscapingDirectiveCode0.getRegexEnd();
      assertEquals("', re.U)", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      EscapingConventions.EscapingLanguage escapingConventions_EscapingLanguage0 = generatePySanitizeEscapingDirectiveCode0.getLanguage();
      assertEquals(EscapingConventions.EscapingLanguage.PYTHON, escapingConventions_EscapingLanguage0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      String string0 = generatePySanitizeEscapingDirectiveCode0.getRegexStart();
      assertEquals("re.compile(r'", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      String string0 = generatePySanitizeEscapingDirectiveCode0.getLineEndSyntax();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      StringBuilder stringBuilder0 = new StringBuilder();
      generatePySanitizeEscapingDirectiveCode0.generateReplacerFunction(stringBuilder0, "x$k");
      assertEquals("\ndef _REPLACER_FOR_x$k(match):\n  ch = match.group(0)\n  return _ESCAPE_MAP_FOR_x$k[ch]\n\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        GeneratePySanitizeEscapingDirectiveCode.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.shared.internal.AbstractGenerateSoyEscapingDirectiveCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GeneratePySanitizeEscapingDirectiveCode generatePySanitizeEscapingDirectiveCode0 = new GeneratePySanitizeEscapingDirectiveCode();
      // Undeclared exception!
      try { 
        generatePySanitizeEscapingDirectiveCode0.generateCommonConstants((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode", e);
      }
  }
}
