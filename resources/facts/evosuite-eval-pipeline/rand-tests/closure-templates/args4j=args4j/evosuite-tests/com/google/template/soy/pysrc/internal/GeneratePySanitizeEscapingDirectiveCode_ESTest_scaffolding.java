/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Nov 12 13:54:56 GMT 2019
 */

package com.google.template.soy.pysrc.internal;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class GeneratePySanitizeEscapingDirectiveCode_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "SG"); 
    java.lang.System.setProperty("user.dir", "/home/cgzhu/projects/gitslice/resources/facts/evosuite-eval-pipeline/rand-tests/closure-templates/args4j=args4j"); 
    java.lang.System.setProperty("user.home", "/home/cgzhu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "cgzhu"); 
    java.lang.System.setProperty("user.timezone", "Asia/Singapore"); 
    java.lang.System.setProperty("sun.boot.class.path", "/home/cgzhu/opt/jdk1.8.0_151/jre/lib/resources.jar:/home/cgzhu/opt/jdk1.8.0_151/jre/lib/rt.jar:/home/cgzhu/opt/jdk1.8.0_151/jre/lib/sunrsasign.jar:/home/cgzhu/opt/jdk1.8.0_151/jre/lib/jsse.jar:/home/cgzhu/opt/jdk1.8.0_151/jre/lib/jce.jar:/home/cgzhu/opt/jdk1.8.0_151/jre/lib/charsets.jar:/home/cgzhu/opt/jdk1.8.0_151/jre/lib/jfr.jar:/home/cgzhu/opt/jdk1.8.0_151/jre/classes"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GeneratePySanitizeEscapingDirectiveCode_ESTest_scaffolding.class.getClassLoader() ,
      "com.google.common.escape.Escaper$1",
      "com.google.common.collect.Hashing",
      "com.google.common.collect.ImmutableList$SubList",
      "com.google.common.collect.Lists$RandomAccessPartition",
      "com.google.common.base.CharMatcher$Whitespace",
      "com.google.common.base.CharMatcher$ForPredicate",
      "com.google.common.collect.PeekingIterator",
      "com.google.common.base.JdkPattern",
      "com.google.common.collect.ImmutableSet$Indexed",
      "com.google.template.soy.shared.internal.EscapingConventions$CrossLanguageStringXform",
      "com.google.common.collect.RegularImmutableList",
      "com.google.template.soy.shared.internal.EscapingConventions$FilterHtmlAttributes",
      "com.google.common.base.CharMatcher$JavaDigit",
      "com.google.template.soy.shared.internal.EscapingConventions$JsEscapeListBuilder",
      "com.google.common.base.Predicates$SubtypeOfPredicate",
      "com.google.common.base.Optional",
      "com.google.common.collect.Lists$TransformingRandomAccessList",
      "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "com.google.common.base.Predicates$ContainsPatternPredicate",
      "com.google.common.base.CharMatcher$IsNot",
      "com.google.common.base.CharMatcher$InRange",
      "com.google.common.base.CharMatcher$JavaLetter",
      "com.google.common.base.CharMatcher$JavaLetterOrDigit",
      "com.google.template.soy.shared.internal.EscapingConventions$NormalizeUri",
      "com.google.common.base.CharMatcher$NegatedFastMatcher",
      "com.google.common.base.Converter$IdentityConverter",
      "com.google.template.soy.shared.internal.EscapingConventions$CssEscapeListBuilder",
      "com.google.template.soy.shared.internal.EscapingConventions$FilterNormalizeUri",
      "com.google.common.collect.RegularImmutableSet",
      "com.google.common.base.CommonPattern",
      "com.google.common.collect.Iterators$10",
      "com.google.template.soy.shared.internal.AbstractGenerateSoyEscapingDirectiveCode$1",
      "com.google.common.collect.Iterators$12",
      "com.google.common.collect.Iterators$11",
      "com.google.template.soy.shared.internal.AbstractGenerateSoyEscapingDirectiveCode$2",
      "com.google.common.base.Predicate",
      "com.google.template.soy.shared.internal.EscapingConventions",
      "com.google.common.base.CharMatcher$IsEither",
      "com.google.common.base.CharMatcher$Invisible",
      "com.google.common.base.CharMatcher$None",
      "com.google.common.collect.ImmutableSet$Indexed$1",
      "com.google.common.base.Present",
      "com.google.common.base.Joiner",
      "com.google.template.soy.shared.internal.EscapingConventions$FilterHtmlElementName",
      "com.google.template.soy.shared.internal.EscapingConventions$EscapeJsRegex",
      "com.google.common.base.CharMatcher$Any",
      "com.google.common.collect.ImmutableAsList",
      "com.google.common.base.Predicates$InstanceOfPredicate",
      "com.google.common.collect.ImmutableSet$Builder",
      "com.google.template.soy.shared.internal.EscapingConventions$EscapeHtmlNospace",
      "com.google.common.base.JdkPattern$JdkMatcher",
      "com.google.common.collect.RegularImmutableAsList",
      "com.google.common.collect.SingletonImmutableSet",
      "com.google.common.collect.Lists$Partition",
      "com.google.common.collect.Lists",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.base.Predicates",
      "com.google.template.soy.shared.internal.EscapingConventions$EscapeHtml",
      "com.google.template.soy.shared.internal.EscapingConventions$EscapeCssString",
      "com.google.common.collect.Lists$TransformingSequentialList",
      "com.google.template.soy.shared.internal.DirectiveDigest",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.base.CaseFormat$1",
      "com.google.common.base.CaseFormat$2",
      "com.google.common.collect.AbstractIterator",
      "com.google.common.base.CaseFormat$3",
      "com.google.common.base.CharMatcher",
      "com.google.common.base.CaseFormat$4",
      "com.google.common.base.CaseFormat$5",
      "com.google.common.base.Joiner$MapJoiner",
      "com.google.common.base.CharMatcher$And",
      "com.google.common.collect.ImmutableList$1",
      "com.google.template.soy.shared.internal.EscapingConventions$UriEscapeListBuilder",
      "com.google.common.base.CharMatcher$AnyOf",
      "com.google.template.soy.shared.internal.EscapingConventions$Escape",
      "com.google.common.base.Preconditions",
      "com.google.common.base.Predicates$CompositionPredicate",
      "com.google.template.soy.shared.internal.AbstractGenerateSoyEscapingDirectiveCode$FileRef",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.base.Predicates$OrPredicate",
      "com.google.common.base.CharMatcher$1",
      "com.google.template.soy.shared.internal.AbstractGenerateSoyEscapingDirectiveCode",
      "com.google.template.soy.shared.internal.EscapingConventions$FilterSipUri",
      "com.google.common.base.CharMatcher$FastMatcher",
      "com.google.template.soy.shared.internal.EscapingConventions$FilterTelUri",
      "com.google.common.base.CharMatcher$JavaIsoControl",
      "com.google.common.base.Joiner$1",
      "com.google.template.soy.shared.internal.EscapingConventions$EscapingLanguage",
      "com.google.template.soy.shared.internal.EscapingConventions$FilterImageDataUri",
      "com.google.common.base.Converter$ConverterComposition",
      "com.google.common.base.Joiner$2",
      "com.google.common.base.Predicates$IsEqualToPredicate",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.Lists$RandomAccessListWrapper",
      "com.google.common.base.Predicates$ContainsPatternFromStringPredicate",
      "com.google.common.base.CommonMatcher",
      "com.google.common.collect.ImmutableList$ReverseImmutableList",
      "com.google.common.base.CharMatcher$BitSetMatcher",
      "com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode",
      "com.google.common.base.CharMatcher$RangesMatcher",
      "com.google.common.collect.SingletonImmutableList",
      "com.google.common.base.CharMatcher$JavaUpperCase",
      "com.google.common.base.Converter",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.Iterators$6",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.base.Function",
      "com.google.common.escape.Escaper",
      "com.google.common.collect.Lists$AbstractListWrapper",
      "com.google.common.base.CharMatcher$BreakingWhitespace",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.template.soy.shared.internal.AbstractGenerateSoyEscapingDirectiveCode$FunctionNamePredicate",
      "com.google.template.soy.shared.internal.EscapingConventions$FilterNormalizeMediaUri",
      "com.google.common.base.CharMatcher$NamedFastMatcher",
      "com.google.common.collect.CollectPreconditions",
      "com.google.template.soy.shared.internal.EscapingConventions$HtmlEscapeListBuilder",
      "com.google.common.collect.Iterators$1",
      "com.google.common.collect.Iterators$2",
      "com.google.common.collect.Iterators$3",
      "com.google.common.collect.Iterators$5",
      "com.google.template.soy.shared.internal.EscapingConventions$EscapeJsString",
      "com.google.common.base.Converter$ReverseConverter",
      "com.google.common.collect.Lists$StringAsImmutableList",
      "com.google.common.base.CharMatcher$Is",
      "com.google.common.collect.Lists$2",
      "com.google.common.base.CharMatcher$SingleWidth",
      "com.google.common.base.CharMatcher$JavaLowerCase",
      "com.google.common.collect.Lists$1",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.base.Supplier",
      "com.google.template.soy.shared.internal.EscapingConventions$EscapeUri",
      "com.google.template.soy.shared.internal.EscapingConventions$NormalizeHtml",
      "com.google.common.collect.Iterators",
      "com.google.template.soy.shared.internal.EscapingConventions$FilterCssValue",
      "com.google.common.collect.ImmutableList",
      "com.google.common.base.CharMatcher$Negated",
      "com.google.common.base.Ascii",
      "com.google.common.base.CaseFormat",
      "com.google.common.base.CharMatcher$Ascii",
      "com.google.common.base.CharMatcher$Or",
      "com.google.common.base.Converter$FunctionBasedConverter",
      "com.google.common.collect.ImmutableSet$SerializedForm",
      "com.google.template.soy.shared.internal.TagWhitelist",
      "com.google.common.base.CaseFormat$StringConverter",
      "com.google.common.base.CharMatcher$Digit",
      "com.google.template.soy.shared.internal.EscapingConventions$EscapeListBuilder",
      "com.google.common.collect.Iterators$MergingIterator",
      "com.google.template.soy.shared.internal.EscapingConventions$NormalizeHtmlNospace",
      "com.google.common.base.Predicates$InPredicate"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("com.google.template.soy.shared.internal.DirectiveDigest", false, GeneratePySanitizeEscapingDirectiveCode_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GeneratePySanitizeEscapingDirectiveCode_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.google.template.soy.shared.internal.AbstractGenerateSoyEscapingDirectiveCode",
      "com.google.template.soy.pysrc.internal.GeneratePySanitizeEscapingDirectiveCode",
      "com.google.template.soy.shared.internal.EscapingConventions$EscapingLanguage",
      "com.google.common.base.CharMatcher$BreakingWhitespace",
      "com.google.common.base.Preconditions",
      "com.google.common.base.CharMatcher$Ascii",
      "com.google.common.base.CharMatcher$RangesMatcher",
      "com.google.common.base.CharMatcher$Digit",
      "com.google.common.base.CharMatcher$JavaDigit",
      "com.google.common.base.CharMatcher$JavaLetter",
      "com.google.common.base.CharMatcher$JavaLetterOrDigit",
      "com.google.common.base.CharMatcher$JavaUpperCase",
      "com.google.common.base.CharMatcher$JavaLowerCase",
      "com.google.common.base.CharMatcher$JavaIsoControl",
      "com.google.common.base.CharMatcher$Invisible",
      "com.google.common.base.CharMatcher$SingleWidth",
      "com.google.common.base.CharMatcher$Any",
      "com.google.common.base.CharMatcher$None",
      "com.google.common.base.CharMatcher",
      "com.google.common.base.CharMatcher$FastMatcher",
      "com.google.common.base.CharMatcher$NamedFastMatcher",
      "com.google.common.base.CharMatcher$Whitespace",
      "com.google.common.base.CharMatcher$Is",
      "com.google.common.base.CharMatcher$InRange",
      "com.google.common.base.CaseFormat",
      "com.google.template.soy.shared.internal.EscapingConventions",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.collect.Hashing",
      "com.google.common.collect.ImmutableSet$Indexed",
      "com.google.common.collect.RegularImmutableSet",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.ImmutableAsList",
      "com.google.common.collect.RegularImmutableAsList",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.collect.Iterators$1",
      "com.google.common.collect.Iterators$2",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.collect.Iterators$10",
      "com.google.common.base.Ascii",
      "com.google.template.soy.shared.internal.TagWhitelist",
      "com.google.common.collect.Lists",
      "com.google.template.soy.shared.internal.AbstractGenerateSoyEscapingDirectiveCode$1",
      "com.google.template.soy.shared.internal.AbstractGenerateSoyEscapingDirectiveCode$FileRef",
      "com.google.template.soy.shared.internal.AbstractGenerateSoyEscapingDirectiveCode$FunctionNamePredicate",
      "com.google.template.soy.shared.internal.DirectiveDigest",
      "com.google.template.soy.shared.internal.AbstractGenerateSoyEscapingDirectiveCode$2",
      "com.google.common.base.Joiner",
      "com.google.common.base.Predicates",
      "com.google.common.base.Predicates$OrPredicate"
    );
  }
}
