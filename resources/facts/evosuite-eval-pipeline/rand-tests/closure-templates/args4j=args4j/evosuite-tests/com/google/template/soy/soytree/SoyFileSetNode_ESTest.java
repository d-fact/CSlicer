/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 12 13:59:49 GMT 2019
 */

package com.google.template.soy.soytree;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.template.soy.base.internal.FixedIdGenerator;
import com.google.template.soy.base.internal.IdGenerator;
import com.google.template.soy.base.internal.IncrementingIdGenerator;
import com.google.template.soy.basetree.CopyState;
import com.google.template.soy.soytree.SoyFileSetNode;
import com.google.template.soy.soytree.SoyNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SoyFileSetNode_ESTest extends SoyFileSetNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SoyFileSetNode soyFileSetNode0 = new SoyFileSetNode(0, (IdGenerator) null);
      IdGenerator idGenerator0 = soyFileSetNode0.getNodeIdGenerator();
      assertNull(idGenerator0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IncrementingIdGenerator incrementingIdGenerator0 = new IncrementingIdGenerator();
      SoyFileSetNode soyFileSetNode0 = new SoyFileSetNode(0, incrementingIdGenerator0);
      CopyState copyState0 = new CopyState();
      SoyFileSetNode soyFileSetNode1 = soyFileSetNode0.copy(copyState0);
      assertEquals(0, soyFileSetNode1.getId());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FixedIdGenerator fixedIdGenerator0 = new FixedIdGenerator(109);
      SoyFileSetNode soyFileSetNode0 = new SoyFileSetNode(109, fixedIdGenerator0);
      CopyState copyState0 = new CopyState();
      SoyFileSetNode soyFileSetNode1 = soyFileSetNode0.copy(copyState0);
      assertEquals(109, soyFileSetNode1.getId());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SoyFileSetNode soyFileSetNode0 = new SoyFileSetNode(0, (IdGenerator) null);
      CopyState copyState0 = new CopyState();
      // Undeclared exception!
      try { 
        soyFileSetNode0.copy(copyState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.soytree.SoyFileSetNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IncrementingIdGenerator incrementingIdGenerator0 = new IncrementingIdGenerator();
      SoyFileSetNode soyFileSetNode0 = new SoyFileSetNode(0, incrementingIdGenerator0);
      // Undeclared exception!
      try { 
        soyFileSetNode0.toSourceString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SoyFileSets don't have source locations
         //
         verifyException("com.google.template.soy.soytree.SoyFileSetNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FixedIdGenerator fixedIdGenerator0 = new FixedIdGenerator();
      SoyFileSetNode soyFileSetNode0 = new SoyFileSetNode((-44), fixedIdGenerator0);
      IdGenerator idGenerator0 = soyFileSetNode0.getNodeIdGenerator();
      assertSame(fixedIdGenerator0, idGenerator0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FixedIdGenerator fixedIdGenerator0 = new FixedIdGenerator();
      SoyFileSetNode soyFileSetNode0 = new SoyFileSetNode((-44), fixedIdGenerator0);
      SoyNode.Kind soyNode_Kind0 = soyFileSetNode0.getKind();
      assertEquals(SoyNode.Kind.SOY_FILE_SET_NODE, soyNode_Kind0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FixedIdGenerator fixedIdGenerator0 = new FixedIdGenerator();
      SoyFileSetNode soyFileSetNode0 = new SoyFileSetNode((-44), fixedIdGenerator0);
      CopyState copyState0 = new CopyState();
      SoyFileSetNode soyFileSetNode1 = soyFileSetNode0.copy(copyState0);
      assertEquals((-44), soyFileSetNode1.getId());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FixedIdGenerator fixedIdGenerator0 = new FixedIdGenerator();
      SoyFileSetNode soyFileSetNode0 = new SoyFileSetNode(10, fixedIdGenerator0);
      // Undeclared exception!
      try { 
        soyFileSetNode0.getSourceLocation();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.template.soy.soytree.AbstractSoyNode", e);
      }
  }
}
