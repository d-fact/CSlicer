/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 12 15:03:38 GMT 2019
 */

package com.github.pagehelper.dialect.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.pagehelper.Page;
import com.github.pagehelper.dialect.helper.InformixDialect;
import java.util.HashMap;
import java.util.List;
import org.apache.ibatis.cache.CacheKey;
import org.apache.ibatis.cache.NullCacheKey;
import org.apache.ibatis.io.VFS;
import org.apache.ibatis.mapping.BoundSql;
import org.apache.ibatis.mapping.Environment;
import org.apache.ibatis.mapping.MappedStatement;
import org.apache.ibatis.mapping.ParameterMapping;
import org.apache.ibatis.mapping.SqlCommandType;
import org.apache.ibatis.session.Configuration;
import org.apache.ibatis.transaction.TransactionFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hsqldb.jdbc.JDBCDataSource;
import org.hsqldb.jdbc.JDBCPool;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InformixDialect_ESTest extends InformixDialect_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InformixDialect informixDialect0 = new InformixDialect();
      Page<Object> page0 = new Page<Object>((-488), (-2671));
      Object[] objectArray0 = new Object[5];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      String string0 = informixDialect0.getPageSql("%BrI313WeR|,k0%kT", page0, cacheKey0);
      assertEquals("SELECT  * FROM ( %BrI313WeR|,k0%kT ) TEMP_T ", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InformixDialect informixDialect0 = new InformixDialect();
      int[] intArray0 = new int[2];
      intArray0[0] = (-1254);
      Page<Object> page0 = new Page<Object>(intArray0, true);
      NullCacheKey nullCacheKey0 = (NullCacheKey)CacheKey.NULL_CACHE_KEY;
      String string0 = informixDialect0.getPageSql("|9e", (Page) page0, (CacheKey) nullCacheKey0);
      assertEquals("SELECT  * FROM ( |9e ) TEMP_T ", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InformixDialect informixDialect0 = new InformixDialect();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Page<String> page0 = new Page<String>(5551, (-1975));
      TransactionFactory transactionFactory0 = mock(TransactionFactory.class, new ViolatedAssumptionAnswer());
      JDBCDataSource jDBCDataSource0 = new JDBCDataSource();
      Environment environment0 = new Environment(", resultMapId='", transactionFactory0, jDBCDataSource0);
      Configuration configuration0 = new Configuration(environment0);
      Page<ParameterMapping> page1 = new Page<ParameterMapping>((-5508), 0, true);
      BoundSql boundSql0 = new BoundSql(configuration0, ", resultMapId='", page1, ", resultMapId='");
      Object[] objectArray0 = new Object[8];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      HashMap hashMap1 = (HashMap)informixDialect0.processPageParameter((MappedStatement) null, hashMap0, page0, boundSql0, cacheKey0);
      assertEquals(2, hashMap1.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InformixDialect informixDialect0 = new InformixDialect();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Page<String> page0 = new Page<String>();
      Configuration configuration0 = new Configuration();
      Page<ParameterMapping> page1 = new Page<ParameterMapping>();
      BoundSql boundSql0 = new BoundSql(configuration0, "sU&<N\"ck.*13){Fj", page1, informixDialect0);
      NullCacheKey nullCacheKey0 = (NullCacheKey)CacheKey.NULL_CACHE_KEY;
      // Undeclared exception!
      try { 
        informixDialect0.processPageParameter((MappedStatement) null, hashMap0, page0, boundSql0, nullCacheKey0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not allowed to update a NullCacheKey instance.
         //
         verifyException("org.apache.ibatis.cache.NullCacheKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InformixDialect informixDialect0 = new InformixDialect();
      Object[] objectArray0 = new Object[6];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      // Undeclared exception!
      try { 
        informixDialect0.getPageSql("Armenian", (Page) null, cacheKey0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.pagehelper.dialect.helper.InformixDialect", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InformixDialect informixDialect0 = new InformixDialect();
      Page<String> page0 = new Page<String>(2097, 2097, false);
      CacheKey cacheKey0 = new CacheKey();
      String string0 = informixDialect0.getPageSql("", page0, cacheKey0);
      assertEquals("SELECT  SKIP ?  FIRST ?  * FROM (  ) TEMP_T ", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      InformixDialect informixDialect0 = new InformixDialect();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Page<String> page0 = new Page<String>((-1535), 19);
      Configuration configuration0 = new Configuration();
      Page<ParameterMapping> page1 = new Page<ParameterMapping>();
      BoundSql boundSql0 = new BoundSql(configuration0, "sU&<N\"ck.*13){Fj", page1, informixDialect0);
      Object[] objectArray0 = new Object[1];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      // Undeclared exception!
      try { 
        informixDialect0.processPageParameter((MappedStatement) null, hashMap0, page0, boundSql0, cacheKey0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.pagehelper.dialect.helper.InformixDialect", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      InformixDialect informixDialect0 = new InformixDialect();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Page<String> page0 = new Page<String>(3550, 3550);
      Configuration configuration0 = new Configuration();
      Page<ParameterMapping> page1 = new Page<ParameterMapping>();
      BoundSql boundSql0 = new BoundSql(configuration0, "sU&<N\"ck.*13){Fj", page1, informixDialect0);
      Object[] objectArray0 = new Object[1];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      // Undeclared exception!
      try { 
        informixDialect0.processPageParameter((MappedStatement) null, hashMap0, page0, boundSql0, cacheKey0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.pagehelper.dialect.helper.InformixDialect", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      InformixDialect informixDialect0 = new InformixDialect();
      Configuration configuration0 = new Configuration();
      Page<ParameterMapping> page0 = new Page<ParameterMapping>();
      BoundSql boundSql0 = new BoundSql(configuration0, "sU&<N\"ck.*13){Fj", page0, informixDialect0);
      Object[] objectArray0 = new Object[1];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashMap hashMap1 = (HashMap)informixDialect0.processPageParameter((MappedStatement) null, hashMap0, page0, boundSql0, cacheKey0);
      assertEquals(2, hashMap1.size());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      InformixDialect informixDialect0 = new InformixDialect();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Page<VFS> page0 = new Page<VFS>();
      TransactionFactory transactionFactory0 = mock(TransactionFactory.class, new ViolatedAssumptionAnswer());
      JDBCPool jDBCPool0 = new JDBCPool(1);
      Environment environment0 = new Environment("/?y", transactionFactory0, jDBCPool0);
      Configuration configuration0 = new Configuration(environment0);
      SqlCommandType sqlCommandType0 = SqlCommandType.SELECT;
      BoundSql boundSql0 = new BoundSql(configuration0, "/?y", (List<ParameterMapping>) null, sqlCommandType0);
      CacheKey cacheKey0 = new CacheKey();
      HashMap hashMap1 = (HashMap)informixDialect0.processPageParameter((MappedStatement) null, hashMap0, page0, boundSql0, cacheKey0);
      assertFalse(hashMap1.isEmpty());
  }
}
