/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 12 14:49:08 GMT 2019
 */

package org.vafer.jdeb.debian;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import org.vafer.jdeb.changes.ChangeSet;
import org.vafer.jdeb.debian.BinaryPackageControlFile;
import org.vafer.jdeb.debian.ChangesFile;
import org.vafer.jdeb.debian.ControlField;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChangesFile_ESTest extends ChangesFile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ChangesFile changesFile0 = new ChangesFile();
      ChangeSet[] changeSetArray0 = new ChangeSet[2];
      String[] stringArray0 = new String[6];
      ChangeSet changeSet0 = new ChangeSet((String) null, (String) null, (Date) null, " ", " ", (String) null, stringArray0);
      changeSetArray0[0] = changeSet0;
      // Undeclared exception!
      try { 
        changesFile0.setChanges(changeSetArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.vafer.jdeb.debian.ChangesFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ChangesFile changesFile0 = new ChangesFile();
      // Undeclared exception!
      try { 
        changesFile0.initialize((BinaryPackageControlFile) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.vafer.jdeb.debian.ChangesFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChangesFile.formatDate((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ChangesFile changesFile0 = new ChangesFile();
      ChangeSet[] changeSetArray0 = new ChangeSet[4];
      MockDate mockDate0 = new MockDate((-1261L));
      String[] stringArray0 = new String[4];
      ChangeSet changeSet0 = new ChangeSet("UTF-8", "UTF-8", mockDate0, "UTF-8", "UTF-8", "UrgNency", stringArray0);
      changeSetArray0[0] = changeSet0;
      changeSetArray0[1] = changeSet0;
      changeSetArray0[2] = changeSet0;
      changeSetArray0[3] = changeSet0;
      changesFile0.setChanges(changeSetArray0);
      assertEquals(4, changeSetArray0.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ChangesFile changesFile0 = new ChangesFile();
      ChangeSet[] changeSetArray0 = new ChangeSet[0];
      changesFile0.setChanges(changeSetArray0);
      assertEquals(0, changeSetArray0.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ChangesFile changesFile0 = new ChangesFile();
      BinaryPackageControlFile binaryPackageControlFile0 = new BinaryPackageControlFile("");
      changesFile0.initialize(binaryPackageControlFile0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockDate mockDate0 = new MockDate('C', 'C', 'C');
      String string0 = ChangesFile.formatDate(mockDate0);
      assertEquals("Fri, 6 Oct 1972 00:00:00 +0000", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ChangesFile changesFile0 = new ChangesFile();
      char char0 = changesFile0.getUserDefinedFieldLetter();
      assertEquals('C', char0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ChangesFile changesFile0 = new ChangesFile();
      ControlField[] controlFieldArray0 = changesFile0.getFields();
      assertEquals(16, controlFieldArray0.length);
  }
}
