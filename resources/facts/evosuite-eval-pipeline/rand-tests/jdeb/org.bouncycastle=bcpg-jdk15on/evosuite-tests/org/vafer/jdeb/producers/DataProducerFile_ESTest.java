/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 12 14:51:24 GMT 2019
 */

package org.vafer.jdeb.producers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileNotFoundException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import org.vafer.jdeb.DataConsumer;
import org.vafer.jdeb.mapping.Mapper;
import org.vafer.jdeb.mapping.NullMapper;
import org.vafer.jdeb.mapping.PermMapper;
import org.vafer.jdeb.producers.DataProducerFile;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DataProducerFile_ESTest extends DataProducerFile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      File file0 = MockFile.createTempFile("org.vafer.jdeb.producers.DataProducerFile", "org.vafer.jdeb.producers.DataProducerFile");
      String[] stringArray0 = new String[3];
      Mapper[] mapperArray0 = new Mapper[2];
      PermMapper permMapper0 = new PermMapper((-748), 31, "org.vafer.jdeb.producers.DataProducerFile", "", 0, (-748), 1, "FGw");
      mapperArray0[0] = (Mapper) permMapper0;
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      mapperArray0[1] = (Mapper) nullMapper0;
      DataProducerFile dataProducerFile0 = new DataProducerFile(file0, "org.vafer.jdeb.producers.DataProducerFile", stringArray0, stringArray0, mapperArray0);
      DataConsumer dataConsumer0 = mock(DataConsumer.class, new ViolatedAssumptionAnswer());
      dataProducerFile0.produce(dataConsumer0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      File file0 = MockFile.createTempFile("org.vafer.jdeb.producers.DataProducerFile", "org.vafer.jdeb.producers.DataProducerFile");
      String[] stringArray0 = new String[3];
      Mapper[] mapperArray0 = new Mapper[2];
      PermMapper permMapper0 = new PermMapper((-748), 31, "org.vafer.jdeb.producers.DataProducerFile", "", 0, (-748), 1, "FGw");
      mapperArray0[0] = (Mapper) permMapper0;
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      mapperArray0[1] = (Mapper) nullMapper0;
      DataProducerFile dataProducerFile0 = new DataProducerFile(file0, "org.vafer.jdeb.producers.DataProducerFile", stringArray0, stringArray0, mapperArray0);
      // Undeclared exception!
      try { 
        dataProducerFile0.produce((DataConsumer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.vafer.jdeb.producers.Producers", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      String[] stringArray0 = new String[1];
      Mapper[] mapperArray0 = new Mapper[0];
      DataProducerFile dataProducerFile0 = new DataProducerFile(mockFile0, "", stringArray0, stringArray0, mapperArray0);
      DataConsumer dataConsumer0 = mock(DataConsumer.class, new ViolatedAssumptionAnswer());
      try { 
        dataProducerFile0.produce(dataConsumer0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFile mockFile0 = new MockFile("umHJf@oOp3>A#^ E-y", "umHJf@oOp3>A#^ E-y");
      String[] stringArray0 = new String[5];
      Mapper[] mapperArray0 = new Mapper[1];
      DataProducerFile dataProducerFile0 = new DataProducerFile(mockFile0, (String) null, stringArray0, stringArray0, mapperArray0);
      DataConsumer dataConsumer0 = mock(DataConsumer.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dataProducerFile0.produce(dataConsumer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.vafer.jdeb.producers.AbstractDataProducer", e);
      }
  }
}
