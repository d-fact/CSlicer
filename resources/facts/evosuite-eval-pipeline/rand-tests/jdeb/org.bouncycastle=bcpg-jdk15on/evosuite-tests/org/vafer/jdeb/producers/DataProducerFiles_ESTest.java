/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 12 14:46:45 GMT 2019
 */

package org.vafer.jdeb.producers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.vafer.jdeb.DataConsumer;
import org.vafer.jdeb.mapping.Mapper;
import org.vafer.jdeb.producers.DataProducerFiles;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DataProducerFiles_ESTest extends DataProducerFiles_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "?R*f:8UW|*U`J%H- ";
      DataProducerFiles dataProducerFiles0 = new DataProducerFiles(stringArray0, "?R*f:8UW|*U`J%H- ", (Mapper[]) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("?R*f:8UW|*U`J%H- ");
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        dataProducerFiles0.produce((DataConsumer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.vafer.jdeb.producers.Producers", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "?R*f:8UW|*U`J%H- ";
      DataProducerFiles dataProducerFiles0 = new DataProducerFiles(stringArray0, "?R*f:8UW|*U`J%H- ", (Mapper[]) null);
      DataConsumer dataConsumer0 = mock(DataConsumer.class, new ViolatedAssumptionAnswer());
      try { 
        dataProducerFiles0.produce(dataConsumer0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\f@n+OLcY#J ,";
      DataProducerFiles dataProducerFiles0 = new DataProducerFiles(stringArray0, "", (Mapper[]) null);
      DataConsumer dataConsumer0 = mock(DataConsumer.class, new ViolatedAssumptionAnswer());
      try { 
        dataProducerFiles0.produce(dataConsumer0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DataProducerFiles dataProducerFiles0 = new DataProducerFiles(stringArray0, "\"q]Pl\"Y@gW6", (Mapper[]) null);
      DataConsumer dataConsumer0 = mock(DataConsumer.class, new ViolatedAssumptionAnswer());
      dataProducerFiles0.produce(dataConsumer0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DataProducerFiles dataProducerFiles0 = new DataProducerFiles(stringArray0, "", (Mapper[]) null);
      DataConsumer dataConsumer0 = mock(DataConsumer.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dataProducerFiles0.produce(dataConsumer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }
}
