/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 12 14:50:16 GMT 2019
 */

package org.vafer.jdeb.mapping;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.vafer.jdeb.mapping.NullMapper;
import org.vafer.jdeb.mapping.PermMapper;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NullMapper_ESTest extends NullMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("cErjF#", (byte)120);
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertEquals(31, TarArchiveEntry.MAX_NAMELEN);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("org.vafer.jdeb.mapping.NullMapper", (byte)49, false);
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertEquals(0, tarArchiveEntry1.getDevMajor());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte)103);
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertSame(tarArchiveEntry1, tarArchiveEntry0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte)83);
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertFalse(tarArchiveEntry1.isGNULongLinkEntry());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte)75);
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertFalse(tarArchiveEntry1.isFIFO());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte)54);
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertTrue(tarArchiveEntry1.isFile());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte)52);
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertFalse(tarArchiveEntry1.isPaxGNUSparse());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("xR?#/", (byte)89);
      tarArchiveEntry0.setSize((byte)89);
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertFalse(tarArchiveEntry1.isExtended());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      PermMapper permMapper0 = new PermMapper(0, 0, "", "", 0, 0, 10240, "");
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte)0, false);
      TarArchiveEntry tarArchiveEntry1 = permMapper0.map(tarArchiveEntry0);
      TarArchiveEntry tarArchiveEntry2 = nullMapper0.map(tarArchiveEntry1);
      assertFalse(tarArchiveEntry2.isSymbolicLink());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("i8");
      tarArchiveEntry0.setMode((-194));
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertEquals(16877, TarArchiveEntry.DEFAULT_DIR_MODE);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("Z'", (byte) (-57));
      tarArchiveEntry0.setIds((-2256), 1);
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertFalse(tarArchiveEntry1.isLink());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      PermMapper permMapper0 = new PermMapper(148, 148, "", "", 148, 148, 148, "");
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte)96, false);
      TarArchiveEntry tarArchiveEntry1 = permMapper0.map(tarArchiveEntry0);
      TarArchiveEntry tarArchiveEntry2 = nullMapper0.map(tarArchiveEntry1);
      assertFalse(tarArchiveEntry2.isCheckSumOK());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("a] !\fH$6!&fIE", (byte) (-1), true);
      tarArchiveEntry0.setIds(1000, (-735));
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertEquals(31, TarArchiveEntry.MAX_NAMELEN);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("", (byte)96, false);
      tarArchiveEntry0.setDevMinor(3);
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertFalse(tarArchiveEntry1.isOldGNUSparse());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("nZV/", (byte)50);
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertFalse(tarArchiveEntry1.isStarSparse());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("xR?#/", (byte)89);
      tarArchiveEntry0.setDevMajor(1000);
      TarArchiveEntry tarArchiveEntry1 = nullMapper0.map(tarArchiveEntry0);
      assertEquals(33188, TarArchiveEntry.DEFAULT_FILE_MODE);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NullMapper nullMapper0 = (NullMapper)NullMapper.INSTANCE;
      TarArchiveEntry tarArchiveEntry0 = nullMapper0.map((TarArchiveEntry) null);
      assertNull(tarArchiveEntry0);
  }
}
