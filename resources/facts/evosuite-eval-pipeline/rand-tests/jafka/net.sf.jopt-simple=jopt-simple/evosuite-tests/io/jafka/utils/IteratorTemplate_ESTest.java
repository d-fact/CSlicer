/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 12 14:29:21 GMT 2019
 */

package io.jafka.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.jafka.consumer.ConsumerIterator;
import io.jafka.consumer.FetchedDataChunk;
import io.jafka.producer.serializer.Decoder;
import io.jafka.producer.serializer.StringDecoder;
import io.jafka.utils.IteratorTemplate;
import java.util.NoSuchElementException;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.LinkedBlockingQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IteratorTemplate_ESTest extends IteratorTemplate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedBlockingQueue<FetchedDataChunk> linkedBlockingQueue0 = new LinkedBlockingQueue<FetchedDataChunk>();
      Decoder<Delayed> decoder0 = (Decoder<Delayed>) mock(Decoder.class, new ViolatedAssumptionAnswer());
      ConsumerIterator<Delayed> consumerIterator0 = new ConsumerIterator<Delayed>((String) null, linkedBlockingQueue0, (-1022), decoder0);
      ((IteratorTemplate)consumerIterator0).resetState();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedBlockingQueue<FetchedDataChunk> linkedBlockingQueue0 = new LinkedBlockingQueue<FetchedDataChunk>();
      Decoder<Object> decoder0 = (Decoder<Object>) mock(Decoder.class, new ViolatedAssumptionAnswer());
      ConsumerIterator<Object> consumerIterator0 = new ConsumerIterator<Object>("", linkedBlockingQueue0, 0, decoder0);
      ((IteratorTemplate)consumerIterator0).allDone();
      boolean boolean0 = consumerIterator0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Decoder<Object> decoder0 = (Decoder<Object>) mock(Decoder.class, new ViolatedAssumptionAnswer());
      ConsumerIterator<Object> consumerIterator0 = new ConsumerIterator<Object>((String) null, (BlockingQueue<FetchedDataChunk>) null, 0, decoder0);
      // Undeclared exception!
      try { 
        consumerIterator0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.jafka.consumer.ConsumerIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedBlockingDeque<FetchedDataChunk> linkedBlockingDeque0 = new LinkedBlockingDeque<FetchedDataChunk>();
      StringDecoder stringDecoder0 = new StringDecoder();
      ConsumerIterator<String> consumerIterator0 = new ConsumerIterator<String>((String) null, linkedBlockingDeque0, 0, stringDecoder0);
      // Undeclared exception!
      try { 
        consumerIterator0.hasNext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // consumer timeout in 0 ms
         //
         verifyException("io.jafka.consumer.ConsumerIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Decoder<Delayed> decoder0 = (Decoder<Delayed>) mock(Decoder.class, new ViolatedAssumptionAnswer());
      ConsumerIterator<Delayed> consumerIterator0 = new ConsumerIterator<Delayed>("DONE", (BlockingQueue<FetchedDataChunk>) null, 4, decoder0);
      // Undeclared exception!
      try { 
        consumerIterator0.hasNext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.jafka.consumer.ConsumerIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedBlockingQueue<FetchedDataChunk> linkedBlockingQueue0 = new LinkedBlockingQueue<FetchedDataChunk>();
      Decoder<Object> decoder0 = (Decoder<Object>) mock(Decoder.class, new ViolatedAssumptionAnswer());
      ConsumerIterator<Object> consumerIterator0 = new ConsumerIterator<Object>("", linkedBlockingQueue0, 0, decoder0);
      ((IteratorTemplate)consumerIterator0).allDone();
      // Undeclared exception!
      try { 
        consumerIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.jafka.utils.IteratorTemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Decoder<Object> decoder0 = (Decoder<Object>) mock(Decoder.class, new ViolatedAssumptionAnswer());
      ConsumerIterator<Object> consumerIterator0 = new ConsumerIterator<Object>("", (BlockingQueue<FetchedDataChunk>) null, 1842, decoder0);
      // Undeclared exception!
      try { 
        consumerIterator0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.jafka.utils.IteratorTemplate", e);
      }
  }
}
