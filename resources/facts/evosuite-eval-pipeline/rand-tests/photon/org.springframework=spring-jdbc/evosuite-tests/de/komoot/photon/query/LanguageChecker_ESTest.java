/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 12 15:24:26 GMT 2019
 */

package de.komoot.photon.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.komoot.photon.query.LanguageChecker;
import java.util.Set;
import org.eclipse.jetty.util.InetAddressSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LanguageChecker_ESTest extends LanguageChecker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LanguageChecker languageChecker0 = new LanguageChecker((Set<String>) null);
      // Undeclared exception!
      try { 
        languageChecker0.apply("An`idbK'?@_e");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InetAddressSet inetAddressSet0 = new InetAddressSet();
      inetAddressSet0.add((String) null);
      LanguageChecker languageChecker0 = new LanguageChecker(inetAddressSet0);
      // Undeclared exception!
      try { 
        languageChecker0.apply("_ [sj^#4QEL[+O}4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InetAddressSet inetAddressSet0 = new InetAddressSet();
      LanguageChecker languageChecker0 = new LanguageChecker(inetAddressSet0);
      inetAddressSet0.add("2^IF6");
      Boolean boolean0 = languageChecker0.apply("2^IF6");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InetAddressSet inetAddressSet0 = new InetAddressSet();
      LanguageChecker languageChecker0 = new LanguageChecker(inetAddressSet0);
      try { 
        languageChecker0.apply((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // language en is not supported, supported languages are: 
         //
         verifyException("de.komoot.photon.query.LanguageChecker", e);
      }
  }
}
