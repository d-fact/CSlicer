/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 12 15:21:52 GMT 2019
 */

package de.komoot.photon;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.komoot.photon.ReverseSearchRequestHandler;
import de.komoot.photon.query.ReverseRequest;
import java.util.Set;
import org.elasticsearch.client.Client;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import spark.Request;
import spark.Response;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReverseSearchRequestHandler_ESTest extends ReverseSearchRequestHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReverseSearchRequestHandler<ReverseRequest> reverseSearchRequestHandler0 = new ReverseSearchRequestHandler<ReverseRequest>("- l~", (Client) null, "- l~");
      Request request0 = mock(Request.class, new ViolatedAssumptionAnswer());
      doReturn((Set) null).when(request0).queryParams();
      Response response0 = mock(Response.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        reverseSearchRequestHandler0.handle(request0, response0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.komoot.photon.query.ReverseRequestFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReverseSearchRequestHandler<ReverseRequest> reverseSearchRequestHandler0 = null;
      try {
        reverseSearchRequestHandler0 = new ReverseSearchRequestHandler<ReverseRequest>((String) null, (Client) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.komoot.photon.ReverseSearchRequestHandler", e);
      }
  }
}
