/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 12 14:12:21 GMT 2019
 */

package io.ebeaninternal.server.querydefn;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.ebean.FetchConfig;
import io.ebeaninternal.server.deploy.BeanDescriptor;
import io.ebeaninternal.server.querydefn.OrmQueryDetail;
import io.ebeaninternal.server.querydefn.OrmQueryProperties;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OrmQueryDetail_ESTest extends OrmQueryDetail_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.includeBeanJoin("k", "*\"))]{");
      // Undeclared exception!
      try { 
        ormQueryDetail0.markQueryJoins((BeanDescriptor<?>) null, "!Q", true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryDetail", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      OrmQueryDetail ormQueryDetail1 = new OrmQueryDetail();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ormQueryDetail0.fetch("", linkedHashSet0);
      boolean boolean0 = ormQueryDetail0.isAutoTuneEqual(ormQueryDetail1);
      assertFalse(boolean0);
      assertFalse(ormQueryDetail0.hasSelectClause());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      FetchConfig fetchConfig0 = OrmQueryProperties.DEFAULT_FETCH;
      fetchConfig0.lazy();
      ormQueryDetail0.fetch("GMv0", "", fetchConfig0);
      List<OrmQueryProperties> list0 = ormQueryDetail0.removeSecondaryLazyQueries();
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      FetchConfig fetchConfig0 = new FetchConfig();
      OrmQueryProperties ormQueryProperties0 = new OrmQueryProperties("RF.g", (String) null, fetchConfig0);
      ormQueryDetail0.fetch(ormQueryProperties0);
      boolean boolean0 = ormQueryDetail0.isJoinsEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.setEmptyBase();
      boolean boolean0 = ormQueryDetail0.hasSelectClause();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      FetchConfig fetchConfig0 = OrmQueryProperties.DEFAULT_FETCH;
      fetchConfig0.query();
      OrmQueryProperties ormQueryProperties0 = ormQueryDetail0.getChunk("] not valid from ", true);
      assertEquals("] not valid from ", ormQueryProperties0.getPath());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      FetchConfig fetchConfig0 = OrmQueryProperties.DEFAULT_FETCH;
      fetchConfig0.queryFirst(391);
      OrmQueryProperties ormQueryProperties0 = ormQueryDetail0.getChunk("io.ebeaninternal.server.querydefn.OrmQueryDetail$FetchEntry", true);
      assertFalse(ormQueryProperties0.isCache());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      FetchConfig fetchConfig0 = OrmQueryProperties.DEFAULT_FETCH;
      fetchConfig0.lazy();
      OrmQueryProperties ormQueryProperties0 = ormQueryDetail0.getChunk("] not valid from ", true);
      assertEquals((-1), ormQueryProperties0.getQueryFetchBatch());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      FetchConfig fetchConfig0 = new FetchConfig();
      fetchConfig0.lazy(912);
      ormQueryDetail0.fetch((String) null, "com.mysql.jdbc.SequentialBalanceStrategy", fetchConfig0);
      ormQueryDetail0.getChunk((String) null, false);
      assertTrue(ormQueryDetail0.hasSelectClause());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.select("com.mysql.jdbc.SequentialBalanceStrategy");
      OrmQueryProperties ormQueryProperties0 = ormQueryDetail0.getChunk((String) null, false);
      assertFalse(ormQueryProperties0.isCache());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.select("com.mysql.jdbc.SequentialBalanceStrategy");
      OrmQueryDetail ormQueryDetail1 = ormQueryDetail0.copy();
      assertTrue(ormQueryDetail1.hasSelectClause());
      assertNotSame(ormQueryDetail1, ormQueryDetail0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      // Undeclared exception!
      try { 
        ormQueryDetail0.tuneFetchProperties((OrmQueryDetail) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryDetail", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.setBase((OrmQueryProperties) null);
      // Undeclared exception!
      try { 
        ormQueryDetail0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryDetail", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      // Undeclared exception!
      try { 
        ormQueryDetail0.setDefaultSelectClause((BeanDescriptor<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryDetail", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      // Undeclared exception!
      try { 
        ormQueryDetail0.queryPlanHash((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.setBase((OrmQueryProperties) null);
      // Undeclared exception!
      try { 
        ormQueryDetail0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryDetail", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      // Undeclared exception!
      try { 
        ormQueryDetail0.isAutoTuneEqual((OrmQueryDetail) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryDetail", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      // Undeclared exception!
      try { 
        ormQueryDetail0.fetch("", (LinkedHashSet<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // parsedProperties is null
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      // Undeclared exception!
      try { 
        ormQueryDetail0.fetch((OrmQueryProperties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryDetail", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.setBase((OrmQueryProperties) null);
      // Undeclared exception!
      try { 
        ormQueryDetail0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryDetail", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.setBase((OrmQueryProperties) null);
      // Undeclared exception!
      try { 
        ormQueryDetail0.containsProperty("aVNgJG< GE8nPo");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryDetail", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      OrmQueryProperties ormQueryProperties0 = ormQueryDetail0.getChunk("io.ebeaninternal.server.querydefn.OrmQueryDetail$FetchEntry", false);
      assertNull(ormQueryProperties0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      FetchConfig fetchConfig0 = OrmQueryProperties.DEFAULT_FETCH;
      ormQueryDetail0.fetch("Stm_QkGg,ZX", "Stm_QkGg,ZX", fetchConfig0);
      String string0 = ormQueryDetail0.asString();
      assertEquals(" fetch Stm_QkGg,ZX (Stm_QkGg,ZX) ", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      String string0 = ormQueryDetail0.asString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.includeBeanJoin("", "");
      boolean boolean0 = ormQueryDetail0.includesPath("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      boolean boolean0 = ormQueryDetail0.includesPath("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.includeBeanJoin("", "");
      OrmQueryProperties ormQueryProperties0 = ormQueryDetail0.getChunk("", true);
      assertEquals((-1), ormQueryProperties0.getLazyFetchBatch());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      FetchConfig fetchConfig0 = new FetchConfig();
      OrmQueryProperties ormQueryProperties0 = new OrmQueryProperties("timeZoneOffsetMins out of range ", "timeZoneOffsetMins out of range ", fetchConfig0);
      ormQueryDetail0.setBase(ormQueryProperties0);
      boolean boolean0 = ormQueryDetail0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      boolean boolean0 = ormQueryDetail0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.includeBeanJoin("", "");
      boolean boolean0 = ormQueryDetail0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.markQueryJoins((BeanDescriptor<?>) null, "", true, false);
      assertFalse(ormQueryDetail0.hasSelectClause());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.getChunk("`Lh/w~8|#8nM$.{vdP", true);
      // Undeclared exception!
      try { 
        ormQueryDetail0.markQueryJoins((BeanDescriptor<?>) null, " fetch `Lh/w~8|#8nM$.{vdP ", true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryDetail", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      OrmQueryProperties ormQueryProperties0 = new OrmQueryProperties();
      ormQueryDetail0.fetch(ormQueryProperties0);
      assertFalse(ormQueryProperties0.hasSelectClause());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      boolean boolean0 = ormQueryDetail0.tuneFetchProperties(ormQueryDetail0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.includeBeanJoin("", "");
      FetchConfig fetchConfig0 = new FetchConfig();
      fetchConfig0.query();
      OrmQueryProperties ormQueryProperties0 = new OrmQueryProperties("The responseBuffering connection property {0} is not valid.", "", fetchConfig0);
      ormQueryDetail0.fetch(ormQueryProperties0);
      List<OrmQueryProperties> list0 = ormQueryDetail0.removeSecondaryQueries();
      assertEquals(1, list0.size());
      assertNotNull(list0);
      assertTrue(list0.contains(ormQueryProperties0));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ormQueryDetail0.fetch("", linkedHashSet0);
      List<OrmQueryProperties> list0 = ormQueryDetail0.removeSecondaryLazyQueries();
      assertFalse(ormQueryDetail0.hasSelectClause());
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.includeBeanJoin("", "");
      List<OrmQueryProperties> list0 = ormQueryDetail0.removeSecondaryQueries();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ormQueryDetail0.fetch("", linkedHashSet0);
      String string0 = ormQueryDetail0.toString();
      assertEquals(" fetch  ", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.select("/TS=v}96GJ;guG,");
      String string0 = ormQueryDetail0.asString();
      assertEquals("select (/TS=v}96GJ;guG,) ", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      OrmQueryDetail ormQueryDetail1 = new OrmQueryDetail();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ormQueryDetail0.fetch("", linkedHashSet0);
      ormQueryDetail1.includeBeanJoin("k", "*\"))]{");
      boolean boolean0 = ormQueryDetail0.isAutoTuneEqual(ormQueryDetail1);
      assertFalse(ormQueryDetail0.hasSelectClause());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.includeBeanJoin("", "");
      boolean boolean0 = ormQueryDetail0.isAutoTuneEqual(ormQueryDetail0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      OrmQueryDetail ormQueryDetail1 = new OrmQueryDetail();
      ormQueryDetail0.setEmptyBase();
      boolean boolean0 = ormQueryDetail1.isAutoTuneEqual(ormQueryDetail0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      StringBuilder stringBuilder0 = new StringBuilder("ZLXh");
      ormQueryDetail0.includeBeanJoin("Invalid fetch path ", "Invalid fetch path ");
      ormQueryDetail0.queryPlanHash(stringBuilder0);
      assertEquals("ZLXhqpp[null config:-25896270]qpp[Invalid fetch path  config:-25896270]", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.includeBeanJoin("", "");
      OrmQueryDetail ormQueryDetail1 = ormQueryDetail0.copy();
      ormQueryDetail0.clear();
      boolean boolean0 = ormQueryDetail0.isAutoTuneEqual(ormQueryDetail1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      OrmQueryDetail ormQueryDetail1 = ormQueryDetail0.copy();
      boolean boolean0 = ormQueryDetail1.tuneFetchProperties(ormQueryDetail0);
      assertNotSame(ormQueryDetail1, ormQueryDetail0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      Set<String> set0 = ormQueryDetail0.getFetchPaths();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.setEmptyBase();
      boolean boolean0 = ormQueryDetail0.containsProperty("tX&-9FI_Ye5t0H");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      boolean boolean0 = ormQueryDetail0.isJoinsEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      boolean boolean0 = ormQueryDetail0.containsProperty("io.ebeaninternal.server.querydefn.OrmQueryDetail$FetchEntry");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      ormQueryDetail0.sortFetchPaths((BeanDescriptor<?>) null);
      assertFalse(ormQueryDetail0.hasSelectClause());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      String string0 = ormQueryDetail0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      boolean boolean0 = ormQueryDetail0.hasSelectClause();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      FetchConfig fetchConfig0 = OrmQueryProperties.DEFAULT_FETCH;
      ormQueryDetail0.fetch("", "", fetchConfig0);
      boolean boolean0 = ormQueryDetail0.tuneFetchProperties(ormQueryDetail0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      Set<Map.Entry<String, OrmQueryProperties>> set0 = (Set<Map.Entry<String, OrmQueryProperties>>)ormQueryDetail0.entries();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      OrmQueryDetail ormQueryDetail0 = new OrmQueryDetail();
      // Undeclared exception!
      try { 
        ormQueryDetail0.hashCode();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // should not use
         //
         verifyException("io.ebeaninternal.server.querydefn.OrmQueryDetail", e);
      }
  }
}
