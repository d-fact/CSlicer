/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 12 14:17:20 GMT 2019
 */

package com.aventstack.extentreports;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aventstack.extentreports.ExceptionTestContextImpl;
import com.aventstack.extentreports.model.ExceptionInfo;
import com.aventstack.extentreports.model.ExceptionTestContext;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExceptionTestContextImpl_ESTest extends ExceptionTestContextImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExceptionTestContextImpl exceptionTestContextImpl0 = new ExceptionTestContextImpl();
      ExceptionInfo exceptionInfo0 = new ExceptionInfo();
      com.aventstack.extentreports.model.Test test0 = new com.aventstack.extentreports.model.Test();
      exceptionTestContextImpl0.setExceptionContext(exceptionInfo0, test0);
      List<ExceptionTestContext> list0 = exceptionTestContextImpl0.getExceptionTestContextList();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExceptionTestContextImpl exceptionTestContextImpl0 = new ExceptionTestContextImpl();
      ExceptionInfo exceptionInfo0 = new ExceptionInfo();
      com.aventstack.extentreports.model.Test test0 = new com.aventstack.extentreports.model.Test();
      exceptionTestContextImpl0.setExceptionContext(exceptionInfo0, test0);
      // Undeclared exception!
      try { 
        exceptionTestContextImpl0.setExceptionContext(exceptionInfo0, (com.aventstack.extentreports.model.Test) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExceptionTestContextImpl exceptionTestContextImpl0 = new ExceptionTestContextImpl();
      ExceptionInfo exceptionInfo0 = new ExceptionInfo();
      com.aventstack.extentreports.model.Test test0 = new com.aventstack.extentreports.model.Test();
      exceptionTestContextImpl0.setExceptionContext(exceptionInfo0, test0);
      com.aventstack.extentreports.model.Test test1 = new com.aventstack.extentreports.model.Test();
      exceptionInfo0.setExceptionName("");
      exceptionTestContextImpl0.setExceptionContext(exceptionInfo0, test1);
      //  // Unstable assertion: assertEquals(6, test1.getID());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ExceptionTestContextImpl exceptionTestContextImpl0 = new ExceptionTestContextImpl();
      ExceptionInfo exceptionInfo0 = new ExceptionInfo();
      com.aventstack.extentreports.model.Test test0 = new com.aventstack.extentreports.model.Test();
      exceptionTestContextImpl0.setExceptionContext(exceptionInfo0, test0);
      exceptionInfo0.setExceptionName("");
      exceptionTestContextImpl0.setExceptionContext(exceptionInfo0, test0);
      assertEquals(1, test0.getID());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExceptionTestContextImpl exceptionTestContextImpl0 = new ExceptionTestContextImpl();
      List<ExceptionTestContext> list0 = exceptionTestContextImpl0.getExceptionTestContextList();
      assertTrue(list0.isEmpty());
  }
}
